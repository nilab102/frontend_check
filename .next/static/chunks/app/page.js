/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fnilab%2FDesktop%2Fprojects%2Fgti%2Ffubnvoicechat-frontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fnilab%2FDesktop%2Fprojects%2Fgti%2Ffubnvoicechat-frontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZuaWxhYiUyRkRlc2t0b3AlMkZwcm9qZWN0cyUyRmd0aSUyRmZ1Ym52b2ljZWNoYXQtZnJvbnRlbmQlMkZhcHAlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLHNKQUEwRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2YzMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbmlsYWIvRGVza3RvcC9wcm9qZWN0cy9ndGkvZnVibnZvaWNlY2hhdC1mcm9udGVuZC9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fnilab%2FDesktop%2Fprojects%2Fgti%2Ffubnvoicechat-frontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@daily-co/daily-js/dist/daily-esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@daily-co/daily-js/dist/daily-esm.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DAILY_ACCESS_LEVEL_FULL: function() { return /* binding */ Pi; },\n/* harmony export */   DAILY_ACCESS_LEVEL_LOBBY: function() { return /* binding */ Ai; },\n/* harmony export */   DAILY_ACCESS_LEVEL_NONE: function() { return /* binding */ ji; },\n/* harmony export */   DAILY_ACCESS_UNKNOWN: function() { return /* binding */ Oi; },\n/* harmony export */   DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE: function() { return /* binding */ Wi; },\n/* harmony export */   DAILY_CAMERA_ERROR_CAM_IN_USE: function() { return /* binding */ qi; },\n/* harmony export */   DAILY_CAMERA_ERROR_CONSTRAINTS: function() { return /* binding */ Ki; },\n/* harmony export */   DAILY_CAMERA_ERROR_MIC_IN_USE: function() { return /* binding */ zi; },\n/* harmony export */   DAILY_CAMERA_ERROR_NOT_FOUND: function() { return /* binding */ Qi; },\n/* harmony export */   DAILY_CAMERA_ERROR_PERMISSIONS: function() { return /* binding */ Hi; },\n/* harmony export */   DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES: function() { return /* binding */ Gi; },\n/* harmony export */   DAILY_CAMERA_ERROR_UNKNOWN: function() { return /* binding */ Yi; },\n/* harmony export */   DAILY_EVENT_ACCESS_STATE_UPDATED: function() { return /* binding */ fo; },\n/* harmony export */   DAILY_EVENT_ACTIVE_SPEAKER_CHANGE: function() { return /* binding */ Uo; },\n/* harmony export */   DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE: function() { return /* binding */ Vo; },\n/* harmony export */   DAILY_EVENT_APP_MSG: function() { return /* binding */ Io; },\n/* harmony export */   DAILY_EVENT_CAMERA_ERROR: function() { return /* binding */ oo; },\n/* harmony export */   DAILY_EVENT_CPU_LOAD_CHANGE: function() { return /* binding */ qo; },\n/* harmony export */   DAILY_EVENT_ERROR: function() { return /* binding */ ns; },\n/* harmony export */   DAILY_EVENT_EXIT_FULLSCREEN: function() { return /* binding */ Ho; },\n/* harmony export */   DAILY_EVENT_FACE_COUNTS_UPDATED: function() { return /* binding */ zo; },\n/* harmony export */   DAILY_EVENT_FULLSCREEN: function() { return /* binding */ Wo; },\n/* harmony export */   DAILY_EVENT_IFRAME_LAUNCH_CONFIG: function() { return /* binding */ Zi; },\n/* harmony export */   DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG: function() { return /* binding */ Xi; },\n/* harmony export */   DAILY_EVENT_INPUT_SETTINGS_UPDATED: function() { return /* binding */ es; },\n/* harmony export */   DAILY_EVENT_JOINED_MEETING: function() { return /* binding */ ao; },\n/* harmony export */   DAILY_EVENT_JOINING_MEETING: function() { return /* binding */ so; },\n/* harmony export */   DAILY_EVENT_LANG_UPDATED: function() { return /* binding */ Xo; },\n/* harmony export */   DAILY_EVENT_LEFT_MEETING: function() { return /* binding */ co; },\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_ERROR: function() { return /* binding */ Yo; },\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_STARTED: function() { return /* binding */ Go; },\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_STOPPED: function() { return /* binding */ Ko; },\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_UPDATED: function() { return /* binding */ Qo; },\n/* harmony export */   DAILY_EVENT_LOADED: function() { return /* binding */ ro; },\n/* harmony export */   DAILY_EVENT_LOADING: function() { return /* binding */ to; },\n/* harmony export */   DAILY_EVENT_LOAD_ATTEMPT_FAILED: function() { return /* binding */ no; },\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED: function() { return /* binding */ Bo; },\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED: function() { return /* binding */ Ro; },\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED: function() { return /* binding */ Fo; },\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_DATA_ERROR: function() { return /* binding */ mo; },\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_STATE_UPDATED: function() { return /* binding */ go; },\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED: function() { return /* binding */ vo; },\n/* harmony export */   DAILY_EVENT_NETWORK_CONNECTION: function() { return /* binding */ $o; },\n/* harmony export */   DAILY_EVENT_NETWORK_QUALITY_CHANGE: function() { return /* binding */ Jo; },\n/* harmony export */   DAILY_EVENT_NONFATAL_ERROR: function() { return /* binding */ ts; },\n/* harmony export */   DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED: function() { return /* binding */ po; },\n/* harmony export */   DAILY_EVENT_PARTICIPANT_JOINED: function() { return /* binding */ lo; },\n/* harmony export */   DAILY_EVENT_PARTICIPANT_LEFT: function() { return /* binding */ ho; },\n/* harmony export */   DAILY_EVENT_PARTICIPANT_UPDATED: function() { return /* binding */ uo; },\n/* harmony export */   DAILY_EVENT_RECEIVE_SETTINGS_UPDATED: function() { return /* binding */ Zo; },\n/* harmony export */   DAILY_EVENT_RECORDING_DATA: function() { return /* binding */ jo; },\n/* harmony export */   DAILY_EVENT_RECORDING_ERROR: function() { return /* binding */ Po; },\n/* harmony export */   DAILY_EVENT_RECORDING_STARTED: function() { return /* binding */ Eo; },\n/* harmony export */   DAILY_EVENT_RECORDING_STATS: function() { return /* binding */ Oo; },\n/* harmony export */   DAILY_EVENT_RECORDING_STOPPED: function() { return /* binding */ To; },\n/* harmony export */   DAILY_EVENT_RECORDING_UPLOAD_COMPLETED: function() { return /* binding */ Ao; },\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED: function() { return /* binding */ Lo; },\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED: function() { return /* binding */ No; },\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED: function() { return /* binding */ Do; },\n/* harmony export */   DAILY_EVENT_STARTED_CAMERA: function() { return /* binding */ io; },\n/* harmony export */   DAILY_EVENT_THEME_UPDATED: function() { return /* binding */ eo; },\n/* harmony export */   DAILY_EVENT_TRACK_STARTED: function() { return /* binding */ wo; },\n/* harmony export */   DAILY_EVENT_TRACK_STOPPED: function() { return /* binding */ So; },\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_ERROR: function() { return /* binding */ Co; },\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_MSG: function() { return /* binding */ xo; },\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_STARTED: function() { return /* binding */ ko; },\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_STOPPED: function() { return /* binding */ Mo; },\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_ADDED: function() { return /* binding */ yo; },\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_REMOVED: function() { return /* binding */ _o; },\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_UPDATED: function() { return /* binding */ bo; },\n/* harmony export */   DAILY_FATAL_ERROR_CONNECTION: function() { return /* binding */ $i; },\n/* harmony export */   DAILY_FATAL_ERROR_EJECTED: function() { return /* binding */ Li; },\n/* harmony export */   DAILY_FATAL_ERROR_EOL: function() { return /* binding */ Vi; },\n/* harmony export */   DAILY_FATAL_ERROR_EXP_ROOM: function() { return /* binding */ Ri; },\n/* harmony export */   DAILY_FATAL_ERROR_EXP_TOKEN: function() { return /* binding */ Fi; },\n/* harmony export */   DAILY_FATAL_ERROR_MEETING_FULL: function() { return /* binding */ Ui; },\n/* harmony export */   DAILY_FATAL_ERROR_NBF_ROOM: function() { return /* binding */ Di; },\n/* harmony export */   DAILY_FATAL_ERROR_NBF_TOKEN: function() { return /* binding */ Ni; },\n/* harmony export */   DAILY_FATAL_ERROR_NOT_ALLOWED: function() { return /* binding */ Ji; },\n/* harmony export */   DAILY_FATAL_ERROR_NO_ROOM: function() { return /* binding */ Bi; },\n/* harmony export */   DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY: function() { return /* binding */ xi; },\n/* harmony export */   DAILY_RECEIVE_SETTINGS_BASE_KEY: function() { return /* binding */ Ii; },\n/* harmony export */   DAILY_STATE_ERROR: function() { return /* binding */ wi; },\n/* harmony export */   DAILY_STATE_JOINED: function() { return /* binding */ bi; },\n/* harmony export */   DAILY_STATE_JOINING: function() { return /* binding */ yi; },\n/* harmony export */   DAILY_STATE_LEFT: function() { return /* binding */ _i; },\n/* harmony export */   DAILY_STATE_NEW: function() { return /* binding */ vi; },\n/* harmony export */   DAILY_TRACK_STATE_BLOCKED: function() { return /* binding */ Si; },\n/* harmony export */   DAILY_TRACK_STATE_INTERRUPTED: function() { return /* binding */ Ei; },\n/* harmony export */   DAILY_TRACK_STATE_LOADING: function() { return /* binding */ Ci; },\n/* harmony export */   DAILY_TRACK_STATE_OFF: function() { return /* binding */ ki; },\n/* harmony export */   DAILY_TRACK_STATE_PLAYABLE: function() { return /* binding */ Ti; },\n/* harmony export */   DAILY_TRACK_STATE_SENDABLE: function() { return /* binding */ Mi; },\n/* harmony export */   \"default\": function() { return /* binding */ ac; }\n/* harmony export */ });\nfunction e(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(-1!==t.indexOf(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],-1===t.indexOf(n)&&{}.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}function t(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function r(e){var t=function(e,t){if(\"object\"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,t||\"default\");if(\"object\"!=n(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==n(t)?t:t+\"\"}function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,r(i.key),i)}}function o(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function s(e,t){if(t&&(\"object\"==n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function l(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&c(e,t)}function u(e,t,n){return(t=r(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t,n,r,i,o,s){try{var a=e[o](s),c=a.value}catch(e){return void n(e)}a.done?t(c):Promise.resolve(c).then(r,i)}function h(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function s(e){d(o,r,i,s,a,\"next\",e)}function a(e){d(o,r,i,s,a,\"throw\",e)}s(void 0)}))}}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,i,o,s,a=[],c=!0,l=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=o.call(n)).done)&&(a.push(r.value),a.length!==t);c=!0);}catch(e){l=!0,i=e}finally{try{if(!c&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return p(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?p(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function v(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var g,m={exports:{}},y=\"object\"==typeof Reflect?Reflect:null,b=y&&\"function\"==typeof y.apply?y.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};g=y&&\"function\"==typeof y.ownKeys?y.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var _=Number.isNaN||function(e){return e!=e};function w(){w.init.call(this)}m.exports=w,m.exports.once=function(e,t){return new Promise((function(n,r){function i(n){e.removeListener(t,o),r(n)}function o(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",i),n([].slice.call(arguments))}j(e,t,o,{once:!0}),\"error\"!==t&&function(e,t,n){\"function\"==typeof e.on&&j(e,\"error\",t,n)}(e,i,{once:!0})}))},w.EventEmitter=w,w.prototype._events=void 0,w.prototype._eventsCount=0,w.prototype._maxListeners=void 0;var S=10;function k(e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}function M(e){return void 0===e._maxListeners?w.defaultMaxListeners:e._maxListeners}function C(e,t,n,r){var i,o,s,a;if(k(n),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit(\"newListener\",t,n.listener?n.listener:n),o=e._events),s=o[t]),void 0===s)s=o[t]=n,++e._eventsCount;else if(\"function\"==typeof s?s=o[t]=r?[n,s]:[s,n]:r?s.unshift(n):s.push(n),(i=M(e))>0&&s.length>i&&!s.warned){s.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+s.length+\" \"+String(t)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");c.name=\"MaxListenersExceededWarning\",c.emitter=e,c.type=t,c.count=s.length,a=c,console&&console.warn&&console.warn(a)}return e}function E(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function T(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=E.bind(r);return i.listener=n,r.wrapFn=i,i}function O(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):A(i,i.length)}function P(e){var t=this._events;if(void 0!==t){var n=t[e];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function A(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function j(e,t,n,r){if(\"function\"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else{if(\"function\"!=typeof e.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(o){r.once&&e.removeEventListener(t,i),n(o)}))}}Object.defineProperty(w,\"defaultMaxListeners\",{enumerable:!0,get:function(){return S},set:function(e){if(\"number\"!=typeof e||e<0||_(e))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\");S=e}}),w.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},w.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||_(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},w.prototype.getMaxListeners=function(){return M(this)},w.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=\"error\"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var s=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw s.context=o,s}var a=i[e];if(void 0===a)return!1;if(\"function\"==typeof a)b(a,this,t);else{var c=a.length,l=A(a,c);for(n=0;n<c;++n)b(l[n],this,t)}return!0},w.prototype.addListener=function(e,t){return C(this,e,t,!1)},w.prototype.on=w.prototype.addListener,w.prototype.prependListener=function(e,t){return C(this,e,t,!0)},w.prototype.once=function(e,t){return k(t),this.on(e,T(this,e,t)),this},w.prototype.prependOnceListener=function(e,t){return k(t),this.prependListener(e,T(this,e,t)),this},w.prototype.removeListener=function(e,t){var n,r,i,o,s;if(k(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){s=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",e,s||t)}return this},w.prototype.off=w.prototype.removeListener,w.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)\"removeListener\"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},w.prototype.listeners=function(e){return O(this,e,!0)},w.prototype.rawListeners=function(e){return O(this,e,!1)},w.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):P.call(e,t)},w.prototype.listenerCount=P,w.prototype.eventNames=function(){return this._eventsCount>0?g(this._events):[]};var I=m.exports,x=v(I),L=Object.prototype.hasOwnProperty;function D(e,t,n){for(n of e.keys())if(N(n,t))return n}function N(e,t){var n,r,i;if(e===t)return!0;if(e&&t&&(n=e.constructor)===t.constructor){if(n===Date)return e.getTime()===t.getTime();if(n===RegExp)return e.toString()===t.toString();if(n===Array){if((r=e.length)===t.length)for(;r--&&N(e[r],t[r]););return-1===r}if(n===Set){if(e.size!==t.size)return!1;for(r of e){if((i=r)&&\"object\"==typeof i&&!(i=D(t,i)))return!1;if(!t.has(i))return!1}return!0}if(n===Map){if(e.size!==t.size)return!1;for(r of e){if((i=r[0])&&\"object\"==typeof i&&!(i=D(t,i)))return!1;if(!N(r[1],t.get(i)))return!1}return!0}if(n===ArrayBuffer)e=new Uint8Array(e),t=new Uint8Array(t);else if(n===DataView){if((r=e.byteLength)===t.byteLength)for(;r--&&e.getInt8(r)===t.getInt8(r););return-1===r}if(ArrayBuffer.isView(e)){if((r=e.byteLength)===t.byteLength)for(;r--&&e[r]===t[r];);return-1===r}if(!n||\"object\"==typeof e){for(n in r=0,e){if(L.call(e,n)&&++r&&!L.call(t,n))return!1;if(!(n in t)||!N(e[n],t[n]))return!1}return Object.keys(t).length===r}}return e!=e&&t!=t}const R={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"},F={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"},B={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"},U={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"},V={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"};class J{static getFirstMatch(e,t){const n=t.match(e);return n&&n.length>0&&n[1]||\"\"}static getSecondMatch(e,t){const n=t.match(e);return n&&n.length>1&&n[2]||\"\"}static matchAndReturnConst(e,t,n){if(e.test(t))return n}static getWindowsVersionName(e){switch(e){case\"NT\":return\"NT\";case\"XP\":case\"NT 5.1\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}}static getMacOSVersionName(e){const t=e.split(\".\").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}}static getAndroidVersionName(e){const t=e.split(\".\").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0}static getVersionPrecision(e){return e.split(\".\").length}static compareVersions(e,t,n=!1){const r=J.getVersionPrecision(e),i=J.getVersionPrecision(t);let o=Math.max(r,i),s=0;const a=J.map([e,t],(e=>{const t=o-J.getVersionPrecision(e),n=e+new Array(t+1).join(\".0\");return J.map(n.split(\".\"),(e=>new Array(20-e.length).join(\"0\")+e)).reverse()}));for(n&&(s=o-Math.min(r,i)),o-=1;o>=s;){if(a[0][o]>a[1][o])return 1;if(a[0][o]===a[1][o]){if(o===s)return 0;o-=1}else if(a[0][o]<a[1][o])return-1}}static map(e,t){const n=[];let r;if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n}static find(e,t){let n,r;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(n=0,r=e.length;n<r;n+=1){const r=e[n];if(t(r,n))return r}}static assign(e,...t){const n=e;let r,i;if(Object.assign)return Object.assign(e,...t);for(r=0,i=t.length;r<i;r+=1){const e=t[r];if(\"object\"==typeof e&&null!==e){Object.keys(e).forEach((t=>{n[t]=e[t]}))}}return e}static getBrowserAlias(e){return R[e]}static getBrowserTypeByAlias(e){return F[e]||\"\"}}const $=/version\\/(\\d+(\\.?_?\\d+)+)/i,q=[{test:[/googlebot/i],describe(e){const t={name:\"Googlebot\"},n=J.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/opera/i],describe(e){const t={name:\"Opera\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/opr\\/|opios/i],describe(e){const t={name:\"Opera\"},n=J.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/SamsungBrowser/i],describe(e){const t={name:\"Samsung Internet for Android\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/Whale/i],describe(e){const t={name:\"NAVER Whale Browser\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/MZBrowser/i],describe(e){const t={name:\"MZ Browser\"},n=J.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/focus/i],describe(e){const t={name:\"Focus\"},n=J.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/swing/i],describe(e){const t={name:\"Swing\"},n=J.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/coast/i],describe(e){const t={name:\"Opera Coast\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe(e){const t={name:\"Opera Touch\"},n=J.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/yabrowser/i],describe(e){const t={name:\"Yandex Browser\"},n=J.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/ucbrowser/i],describe(e){const t={name:\"UC Browser\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/Maxthon|mxios/i],describe(e){const t={name:\"Maxthon\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/epiphany/i],describe(e){const t={name:\"Epiphany\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/puffin/i],describe(e){const t={name:\"Puffin\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/sleipnir/i],describe(e){const t={name:\"Sleipnir\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/k-meleon/i],describe(e){const t={name:\"K-Meleon\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/micromessenger/i],describe(e){const t={name:\"WeChat\"},n=J.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/qqbrowser/i],describe(e){const t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},n=J.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/msie|trident/i],describe(e){const t={name:\"Internet Explorer\"},n=J.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/\\sedg\\//i],describe(e){const t={name:\"Microsoft Edge\"},n=J.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/edg([ea]|ios)/i],describe(e){const t={name:\"Microsoft Edge\"},n=J.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/vivaldi/i],describe(e){const t={name:\"Vivaldi\"},n=J.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/seamonkey/i],describe(e){const t={name:\"SeaMonkey\"},n=J.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/sailfish/i],describe(e){const t={name:\"Sailfish\"},n=J.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return n&&(t.version=n),t}},{test:[/silk/i],describe(e){const t={name:\"Amazon Silk\"},n=J.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/phantom/i],describe(e){const t={name:\"PhantomJS\"},n=J.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/slimerjs/i],describe(e){const t={name:\"SlimerJS\"},n=J.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe(e){const t={name:\"BlackBerry\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/(web|hpw)[o0]s/i],describe(e){const t={name:\"WebOS Browser\"},n=J.getFirstMatch($,e)||J.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/bada/i],describe(e){const t={name:\"Bada\"},n=J.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/tizen/i],describe(e){const t={name:\"Tizen\"},n=J.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/qupzilla/i],describe(e){const t={name:\"QupZilla\"},n=J.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/firefox|iceweasel|fxios/i],describe(e){const t={name:\"Firefox\"},n=J.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/electron/i],describe(e){const t={name:\"Electron\"},n=J.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/MiuiBrowser/i],describe(e){const t={name:\"Miui\"},n=J.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/chromium/i],describe(e){const t={name:\"Chromium\"},n=J.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/chrome|crios|crmo/i],describe(e){const t={name:\"Chrome\"},n=J.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/GSA/i],describe(e){const t={name:\"Google Search\"},n=J.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test(e){const t=!e.test(/like android/i),n=e.test(/android/i);return t&&n},describe(e){const t={name:\"Android Browser\"},n=J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/playstation 4/i],describe(e){const t={name:\"PlayStation 4\"},n=J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/safari|applewebkit/i],describe(e){const t={name:\"Safari\"},n=J.getFirstMatch($,e);return n&&(t.version=n),t}},{test:[/.*/i],describe(e){const t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:J.getFirstMatch(t,e),version:J.getSecondMatch(t,e)}}}];var z=[{test:[/Roku\\/DVP/],describe(e){const t=J.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:U.Roku,version:t}}},{test:[/windows phone/i],describe(e){const t=J.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:U.WindowsPhone,version:t}}},{test:[/windows /i],describe(e){const t=J.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),n=J.getWindowsVersionName(t);return{name:U.Windows,version:t,versionName:n}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe(e){const t={name:U.iOS},n=J.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return n&&(t.version=n),t}},{test:[/macintosh/i],describe(e){const t=J.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),n=J.getMacOSVersionName(t),r={name:U.MacOS,version:t};return n&&(r.versionName=n),r}},{test:[/(ipod|iphone|ipad)/i],describe(e){const t=J.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:U.iOS,version:t}}},{test(e){const t=!e.test(/like android/i),n=e.test(/android/i);return t&&n},describe(e){const t=J.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),n=J.getAndroidVersionName(t),r={name:U.Android,version:t};return n&&(r.versionName=n),r}},{test:[/(web|hpw)[o0]s/i],describe(e){const t=J.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),n={name:U.WebOS};return t&&t.length&&(n.version=t),n}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe(e){const t=J.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||J.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||J.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:U.BlackBerry,version:t}}},{test:[/bada/i],describe(e){const t=J.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:U.Bada,version:t}}},{test:[/tizen/i],describe(e){const t=J.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:U.Tizen,version:t}}},{test:[/linux/i],describe:()=>({name:U.Linux})},{test:[/CrOS/],describe:()=>({name:U.ChromeOS})},{test:[/PlayStation 4/],describe(e){const t=J.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:U.PlayStation4,version:t}}}],W=[{test:[/googlebot/i],describe:()=>({type:\"bot\",vendor:\"Google\"})},{test:[/huawei/i],describe(e){const t=J.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",n={type:B.mobile,vendor:\"Huawei\"};return t&&(n.model=t),n}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:()=>({type:B.tablet,vendor:\"Nexus\"})},{test:[/ipad/i],describe:()=>({type:B.tablet,vendor:\"Apple\",model:\"iPad\"})},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:()=>({type:B.tablet,vendor:\"Apple\",model:\"iPad\"})},{test:[/kftt build/i],describe:()=>({type:B.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"})},{test:[/silk/i],describe:()=>({type:B.tablet,vendor:\"Amazon\"})},{test:[/tablet(?! pc)/i],describe:()=>({type:B.tablet})},{test(e){const t=e.test(/ipod|iphone/i),n=e.test(/like (ipod|iphone)/i);return t&&!n},describe(e){const t=J.getFirstMatch(/(ipod|iphone)/i,e);return{type:B.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:B.mobile,vendor:\"Nexus\"})},{test:[/[^-]mobi/i],describe:()=>({type:B.mobile})},{test:e=>\"blackberry\"===e.getBrowserName(!0),describe:()=>({type:B.mobile,vendor:\"BlackBerry\"})},{test:e=>\"bada\"===e.getBrowserName(!0),describe:()=>({type:B.mobile})},{test:e=>\"windows phone\"===e.getBrowserName(),describe:()=>({type:B.mobile,vendor:\"Microsoft\"})},{test(e){const t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:()=>({type:B.tablet})},{test:e=>\"android\"===e.getOSName(!0),describe:()=>({type:B.mobile})},{test:e=>\"macos\"===e.getOSName(!0),describe:()=>({type:B.desktop,vendor:\"Apple\"})},{test:e=>\"windows\"===e.getOSName(!0),describe:()=>({type:B.desktop})},{test:e=>\"linux\"===e.getOSName(!0),describe:()=>({type:B.desktop})},{test:e=>\"playstation 4\"===e.getOSName(!0),describe:()=>({type:B.tv})},{test:e=>\"roku\"===e.getOSName(!0),describe:()=>({type:B.tv})}],H=[{test:e=>\"microsoft edge\"===e.getBrowserName(!0),describe(e){if(/\\sedg\\//i.test(e))return{name:V.Blink};const t=J.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:V.EdgeHTML,version:t}}},{test:[/trident/i],describe(e){const t={name:V.Trident},n=J.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:e=>e.test(/presto/i),describe(e){const t={name:V.Presto},n=J.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test(e){const t=e.test(/gecko/i),n=e.test(/like gecko/i);return t&&!n},describe(e){const t={name:V.Gecko},n=J.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:()=>({name:V.Blink})},{test:[/(apple)?webkit/i],describe(e){const t={name:V.WebKit},n=J.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}}];class G{constructor(e,t=!1){if(null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}getUA(){return this._ua}test(e){return e.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const e=J.find(q,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.browser=e.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const e=J.find(z,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.os=e.describe(this.getUA())),this.parsedResult.os}getOSName(e){const{name:t}=this.getOS();return e?String(t).toLowerCase()||\"\":t||\"\"}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(e=!1){const{type:t}=this.getPlatform();return e?String(t).toLowerCase()||\"\":t||\"\"}parsePlatform(){this.parsedResult.platform={};const e=J.find(W,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.platform=e.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"}parseEngine(){this.parsedResult.engine={};const e=J.find(H,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.engine=e.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return J.assign({},this.parsedResult)}satisfies(e){const t={};let n=0;const r={};let i=0;if(Object.keys(e).forEach((o=>{const s=e[o];\"string\"==typeof s?(r[o]=s,i+=1):\"object\"==typeof s&&(t[o]=s,n+=1)})),n>0){const e=Object.keys(t),n=J.find(e,(e=>this.isOS(e)));if(n){const e=this.satisfies(t[n]);if(void 0!==e)return e}const r=J.find(e,(e=>this.isPlatform(e)));if(r){const e=this.satisfies(t[r]);if(void 0!==e)return e}}if(i>0){const e=Object.keys(r),t=J.find(e,(e=>this.isBrowser(e,!0)));if(void 0!==t)return this.compareVersion(r[t])}}isBrowser(e,t=!1){const n=this.getBrowserName().toLowerCase();let r=e.toLowerCase();const i=J.getBrowserTypeByAlias(r);return t&&i&&(r=i.toLowerCase()),r===n}compareVersion(e){let t=[0],n=e,r=!1;const i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(n=e.substr(1),\"=\"===e[1]?(r=!0,n=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?n=e.substr(1):\"~\"===e[0]&&(r=!0,n=e.substr(1)),t.indexOf(J.compareVersions(i,n,r))>-1}isOS(e){return this.getOSName(!0)===String(e).toLowerCase()}isPlatform(e){return this.getPlatformType(!0)===String(e).toLowerCase()}isEngine(e){return this.getEngineName(!0)===String(e).toLowerCase()}is(e,t=!1){return this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)}some(e=[]){return e.some((e=>this.is(e)))}}\n/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */class Q{static getParser(e,t=!1){if(\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new G(e,t)}static parse(e){return new G(e).getResult()}static get BROWSER_MAP(){return F}static get ENGINE_MAP(){return V}static get OS_MAP(){return U}static get PLATFORMS_MAP(){return B}}function K(){return Date.now()+Math.random().toString()}function Y(){throw new Error(\"Method must be implemented in subclass\")}function X(e,t){return null!=t&&t.proxyUrl?t.proxyUrl+(\"/\"===t.proxyUrl.slice(-1)?\"\":\"/\")+e.substring(8):e}function Z(e){return null!=e&&e.callObjectBundleUrlOverride?e.callObjectBundleUrlOverride:X(\"https://c.daily.co/call-machine/versioned/\".concat(\"0.79.0\",\"/static/call-machine-object-bundle.js\"),e)}function ee(e){try{new URL(e)}catch(e){return!1}return!0}const te=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__,ne=\"8.55.0\",re=globalThis;function ie(e,t,n){const r=n||re,i=r.__SENTRY__=r.__SENTRY__||{},o=i[ne]=i[ne]||{};return o[e]||(o[e]=t())}const oe=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__,se=[\"debug\",\"info\",\"warn\",\"error\",\"log\",\"assert\",\"trace\"],ae={};function ce(e){if(!(\"console\"in re))return e();const t=re.console,n={},r=Object.keys(ae);r.forEach((e=>{const r=ae[e];n[e]=t[e],t[e]=r}));try{return e()}finally{r.forEach((e=>{t[e]=n[e]}))}}const le=ie(\"logger\",(function(){let e=!1;const t={enable:()=>{e=!0},disable:()=>{e=!1},isEnabled:()=>e};return oe?se.forEach((n=>{t[n]=(...t)=>{e&&ce((()=>{re.console[n](`Sentry Logger [${n}]:`,...t)}))}})):se.forEach((e=>{t[e]=()=>{}})),t})),ue=\"?\",de=/\\(error: (.*)\\)/,he=/captureMessage|captureException/;function pe(e){return e[e.length-1]||{}}const fe=\"<anonymous>\";function ve(e){try{return e&&\"function\"==typeof e&&e.name||fe}catch(e){return fe}}function ge(e){const t=e.exception;if(t){const e=[];try{return t.values.forEach((t=>{t.stacktrace.frames&&e.push(...t.stacktrace.frames)})),e}catch(e){return}}}const me={},ye={};function be(e,t){me[e]=me[e]||[],me[e].push(t)}function _e(e,t){if(!ye[e]){ye[e]=!0;try{t()}catch(t){oe&&le.error(`Error while instrumenting ${e}`,t)}}}function we(e,t){const n=e&&me[e];if(n)for(const r of n)try{r(t)}catch(t){oe&&le.error(`Error while triggering instrumentation handler.\\nType: ${e}\\nName: ${ve(r)}\\nError:`,t)}}let Se=null;function ke(){Se=re.onerror,re.onerror=function(e,t,n,r,i){return we(\"error\",{column:r,error:i,line:n,msg:e,url:t}),!!Se&&Se.apply(this,arguments)},re.onerror.__SENTRY_INSTRUMENTED__=!0}let Me=null;function Ce(){Me=re.onunhandledrejection,re.onunhandledrejection=function(e){return we(\"unhandledrejection\",e),!Me||Me.apply(this,arguments)},re.onunhandledrejection.__SENTRY_INSTRUMENTED__=!0}function Ee(){return Te(re),re}function Te(e){const t=e.__SENTRY__=e.__SENTRY__||{};return t.version=t.version||ne,t[ne]=t[ne]||{}}const Oe=Object.prototype.toString;function Pe(e){switch(Oe.call(e)){case\"[object Error]\":case\"[object Exception]\":case\"[object DOMException]\":case\"[object WebAssembly.Exception]\":return!0;default:return Be(e,Error)}}function Ae(e,t){return Oe.call(e)===`[object ${t}]`}function je(e){return Ae(e,\"ErrorEvent\")}function Ie(e){return Ae(e,\"DOMError\")}function xe(e){return Ae(e,\"String\")}function Le(e){return\"object\"==typeof e&&null!==e&&\"__sentry_template_string__\"in e&&\"__sentry_template_values__\"in e}function De(e){return null===e||Le(e)||\"object\"!=typeof e&&\"function\"!=typeof e}function Ne(e){return Ae(e,\"Object\")}function Re(e){return\"undefined\"!=typeof Event&&Be(e,Event)}function Fe(e){return Boolean(e&&e.then&&\"function\"==typeof e.then)}function Be(e,t){try{return e instanceof t}catch(e){return!1}}function Ue(e){return!(\"object\"!=typeof e||null===e||!e.__isVue&&!e._isVue)}const Ve=re;function Je(e,t={}){if(!e)return\"<unknown>\";try{let n=e;const r=5,i=[];let o=0,s=0;const a=\" > \",c=a.length;let l;const u=Array.isArray(t)?t:t.keyAttrs,d=!Array.isArray(t)&&t.maxStringLength||80;for(;n&&o++<r&&(l=$e(n,u),!(\"html\"===l||o>1&&s+i.length*c+l.length>=d));)i.push(l),s+=l.length,n=n.parentNode;return i.reverse().join(a)}catch(e){return\"<unknown>\"}}function $e(e,t){const n=e,r=[];if(!n||!n.tagName)return\"\";if(Ve.HTMLElement&&n instanceof HTMLElement&&n.dataset){if(n.dataset.sentryComponent)return n.dataset.sentryComponent;if(n.dataset.sentryElement)return n.dataset.sentryElement}r.push(n.tagName.toLowerCase());const i=t&&t.length?t.filter((e=>n.getAttribute(e))).map((e=>[e,n.getAttribute(e)])):null;if(i&&i.length)i.forEach((e=>{r.push(`[${e[0]}=\"${e[1]}\"]`)}));else{n.id&&r.push(`#${n.id}`);const e=n.className;if(e&&xe(e)){const t=e.split(/\\s+/);for(const e of t)r.push(`.${e}`)}}const o=[\"aria-label\",\"type\",\"name\",\"title\",\"alt\"];for(const e of o){const t=n.getAttribute(e);t&&r.push(`[${e}=\"${t}\"]`)}return r.join(\"\")}function qe(e,t=0){return\"string\"!=typeof e||0===t||e.length<=t?e:`${e.slice(0,t)}...`}function ze(e,t){if(!Array.isArray(e))return\"\";const n=[];for(let t=0;t<e.length;t++){const r=e[t];try{Ue(r)?n.push(\"[VueViewModel]\"):n.push(String(r))}catch(e){n.push(\"[value cannot be serialized]\")}}return n.join(t)}function We(e,t,n=!1){return!!xe(e)&&(Ae(t,\"RegExp\")?t.test(e):!!xe(t)&&(n?e===t:e.includes(t)))}function He(e,t=[],n=!1){return t.some((t=>We(e,t,n)))}function Ge(e,t,n){if(!(t in e))return;const r=e[t],i=n(r);\"function\"==typeof i&&Ke(i,r);try{e[t]=i}catch(n){oe&&le.log(`Failed to replace method \"${t}\" in object`,e)}}function Qe(e,t,n){try{Object.defineProperty(e,t,{value:n,writable:!0,configurable:!0})}catch(n){oe&&le.log(`Failed to add non-enumerable property \"${t}\" to object`,e)}}function Ke(e,t){try{const n=t.prototype||{};e.prototype=t.prototype=n,Qe(e,\"__sentry_original__\",t)}catch(e){}}function Ye(e){return e.__sentry_original__}function Xe(e){if(Pe(e))return{message:e.message,name:e.name,stack:e.stack,...et(e)};if(Re(e)){const t={type:e.type,target:Ze(e.target),currentTarget:Ze(e.currentTarget),...et(e)};return\"undefined\"!=typeof CustomEvent&&Be(e,CustomEvent)&&(t.detail=e.detail),t}return e}function Ze(e){try{return t=e,\"undefined\"!=typeof Element&&Be(t,Element)?Je(e):Object.prototype.toString.call(e)}catch(e){return\"<unknown>\"}var t}function et(e){if(\"object\"==typeof e&&null!==e){const t={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}return{}}function tt(e){return nt(e,new Map)}function nt(e,t){if(function(e){if(!Ne(e))return!1;try{const t=Object.getPrototypeOf(e).constructor.name;return!t||\"Object\"===t}catch(e){return!0}}(e)){const n=t.get(e);if(void 0!==n)return n;const r={};t.set(e,r);for(const n of Object.getOwnPropertyNames(e))void 0!==e[n]&&(r[n]=nt(e[n],t));return r}if(Array.isArray(e)){const n=t.get(e);if(void 0!==n)return n;const r=[];return t.set(e,r),e.forEach((e=>{r.push(nt(e,t))})),r}return e}function rt(){return Date.now()/1e3}const it=function(){const{performance:e}=re;if(!e||!e.now)return rt;const t=Date.now()-e.now(),n=null==e.timeOrigin?t:e.timeOrigin;return()=>(n+e.now())/1e3}();function ot(){const e=re,t=e.crypto||e.msCrypto;let n=()=>16*Math.random();try{if(t&&t.randomUUID)return t.randomUUID().replace(/-/g,\"\");t&&t.getRandomValues&&(n=()=>{const e=new Uint8Array(1);return t.getRandomValues(e),e[0]})}catch(e){}return([1e7]+1e3+4e3+8e3+1e11).replace(/[018]/g,(e=>(e^(15&n())>>e/4).toString(16)))}function st(e){return e.exception&&e.exception.values?e.exception.values[0]:void 0}function at(e){const{message:t,event_id:n}=e;if(t)return t;const r=st(e);return r?r.type&&r.value?`${r.type}: ${r.value}`:r.type||r.value||n||\"<unknown>\":n||\"<unknown>\"}function ct(e,t,n){const r=e.exception=e.exception||{},i=r.values=r.values||[],o=i[0]=i[0]||{};o.value||(o.value=t||\"\"),o.type||(o.type=n||\"Error\")}function lt(e,t){const n=st(e);if(!n)return;const r=n.mechanism;if(n.mechanism={type:\"generic\",handled:!0,...r,...t},t&&\"data\"in t){const e={...r&&r.data,...t.data};n.mechanism.data=e}}function ut(e){if(function(e){try{return e.__sentry_captured__}catch(e){}}(e))return!0;try{Qe(e,\"__sentry_captured__\",!0)}catch(e){}return!1}var dt;function ht(e){return new ft((t=>{t(e)}))}function pt(e){return new ft(((t,n)=>{n(e)}))}(()=>{const{performance:e}=re;if(!e||!e.now)return;const t=36e5,n=e.now(),r=Date.now(),i=e.timeOrigin?Math.abs(e.timeOrigin+n-r):t,o=i<t,s=e.timing&&e.timing.navigationStart,a=\"number\"==typeof s?Math.abs(s+n-r):t;(o||a<t)&&(i<=a&&e.timeOrigin)})(),function(e){e[e.PENDING=0]=\"PENDING\";e[e.RESOLVED=1]=\"RESOLVED\";e[e.REJECTED=2]=\"REJECTED\"}(dt||(dt={}));class ft{constructor(e){ft.prototype.__init.call(this),ft.prototype.__init2.call(this),ft.prototype.__init3.call(this),ft.prototype.__init4.call(this),this._state=dt.PENDING,this._handlers=[];try{e(this._resolve,this._reject)}catch(e){this._reject(e)}}then(e,t){return new ft(((n,r)=>{this._handlers.push([!1,t=>{if(e)try{n(e(t))}catch(e){r(e)}else n(t)},e=>{if(t)try{n(t(e))}catch(e){r(e)}else r(e)}]),this._executeHandlers()}))}catch(e){return this.then((e=>e),e)}finally(e){return new ft(((t,n)=>{let r,i;return this.then((t=>{i=!1,r=t,e&&e()}),(t=>{i=!0,r=t,e&&e()})).then((()=>{i?n(r):t(r)}))}))}__init(){this._resolve=e=>{this._setResult(dt.RESOLVED,e)}}__init2(){this._reject=e=>{this._setResult(dt.REJECTED,e)}}__init3(){this._setResult=(e,t)=>{this._state===dt.PENDING&&(Fe(t)?t.then(this._resolve,this._reject):(this._state=e,this._value=t,this._executeHandlers()))}}__init4(){this._executeHandlers=()=>{if(this._state===dt.PENDING)return;const e=this._handlers.slice();this._handlers=[],e.forEach((e=>{e[0]||(this._state===dt.RESOLVED&&e[1](this._value),this._state===dt.REJECTED&&e[2](this._value),e[0]=!0)}))}}}function vt(e){const t=it(),n={sid:ot(),init:!0,timestamp:t,started:t,duration:0,status:\"ok\",errors:0,ignoreDuration:!1,toJSON:()=>function(e){return tt({sid:`${e.sid}`,init:e.init,started:new Date(1e3*e.started).toISOString(),timestamp:new Date(1e3*e.timestamp).toISOString(),status:e.status,errors:e.errors,did:\"number\"==typeof e.did||\"string\"==typeof e.did?`${e.did}`:void 0,duration:e.duration,abnormal_mechanism:e.abnormal_mechanism,attrs:{release:e.release,environment:e.environment,ip_address:e.ipAddress,user_agent:e.userAgent}})}(n)};return e&&gt(n,e),n}function gt(e,t={}){if(t.user&&(!e.ipAddress&&t.user.ip_address&&(e.ipAddress=t.user.ip_address),e.did||t.did||(e.did=t.user.id||t.user.email||t.user.username)),e.timestamp=t.timestamp||it(),t.abnormal_mechanism&&(e.abnormal_mechanism=t.abnormal_mechanism),t.ignoreDuration&&(e.ignoreDuration=t.ignoreDuration),t.sid&&(e.sid=32===t.sid.length?t.sid:ot()),void 0!==t.init&&(e.init=t.init),!e.did&&t.did&&(e.did=`${t.did}`),\"number\"==typeof t.started&&(e.started=t.started),e.ignoreDuration)e.duration=void 0;else if(\"number\"==typeof t.duration)e.duration=t.duration;else{const t=e.timestamp-e.started;e.duration=t>=0?t:0}t.release&&(e.release=t.release),t.environment&&(e.environment=t.environment),!e.ipAddress&&t.ipAddress&&(e.ipAddress=t.ipAddress),!e.userAgent&&t.userAgent&&(e.userAgent=t.userAgent),\"number\"==typeof t.errors&&(e.errors=t.errors),t.status&&(e.status=t.status)}function mt(){return ot()}function yt(){return ot().substring(16)}function bt(e,t,n=2){if(!t||\"object\"!=typeof t||n<=0)return t;if(e&&t&&0===Object.keys(t).length)return e;const r={...e};for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r[e]=bt(r[e],t[e],n-1));return r}const _t=\"_sentrySpan\";function wt(e,t){t?Qe(e,_t,t):delete e[_t]}function St(e){return e[_t]}class kt{constructor(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._attachments=[],this._user={},this._tags={},this._extra={},this._contexts={},this._sdkProcessingMetadata={},this._propagationContext={traceId:mt(),spanId:yt()}}clone(){const e=new kt;return e._breadcrumbs=[...this._breadcrumbs],e._tags={...this._tags},e._extra={...this._extra},e._contexts={...this._contexts},this._contexts.flags&&(e._contexts.flags={values:[...this._contexts.flags.values]}),e._user=this._user,e._level=this._level,e._session=this._session,e._transactionName=this._transactionName,e._fingerprint=this._fingerprint,e._eventProcessors=[...this._eventProcessors],e._requestSession=this._requestSession,e._attachments=[...this._attachments],e._sdkProcessingMetadata={...this._sdkProcessingMetadata},e._propagationContext={...this._propagationContext},e._client=this._client,e._lastEventId=this._lastEventId,wt(e,St(this)),e}setClient(e){this._client=e}setLastEventId(e){this._lastEventId=e}getClient(){return this._client}lastEventId(){return this._lastEventId}addScopeListener(e){this._scopeListeners.push(e)}addEventProcessor(e){return this._eventProcessors.push(e),this}setUser(e){return this._user=e||{email:void 0,id:void 0,ip_address:void 0,username:void 0},this._session&&gt(this._session,{user:e}),this._notifyScopeListeners(),this}getUser(){return this._user}getRequestSession(){return this._requestSession}setRequestSession(e){return this._requestSession=e,this}setTags(e){return this._tags={...this._tags,...e},this._notifyScopeListeners(),this}setTag(e,t){return this._tags={...this._tags,[e]:t},this._notifyScopeListeners(),this}setExtras(e){return this._extra={...this._extra,...e},this._notifyScopeListeners(),this}setExtra(e,t){return this._extra={...this._extra,[e]:t},this._notifyScopeListeners(),this}setFingerprint(e){return this._fingerprint=e,this._notifyScopeListeners(),this}setLevel(e){return this._level=e,this._notifyScopeListeners(),this}setTransactionName(e){return this._transactionName=e,this._notifyScopeListeners(),this}setContext(e,t){return null===t?delete this._contexts[e]:this._contexts[e]=t,this._notifyScopeListeners(),this}setSession(e){return e?this._session=e:delete this._session,this._notifyScopeListeners(),this}getSession(){return this._session}update(e){if(!e)return this;const t=\"function\"==typeof e?e(this):e,[n,r]=t instanceof Mt?[t.getScopeData(),t.getRequestSession()]:Ne(t)?[e,e.requestSession]:[],{tags:i,extra:o,user:s,contexts:a,level:c,fingerprint:l=[],propagationContext:u}=n||{};return this._tags={...this._tags,...i},this._extra={...this._extra,...o},this._contexts={...this._contexts,...a},s&&Object.keys(s).length&&(this._user=s),c&&(this._level=c),l.length&&(this._fingerprint=l),u&&(this._propagationContext=u),r&&(this._requestSession=r),this}clear(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._contexts={},this._level=void 0,this._transactionName=void 0,this._fingerprint=void 0,this._requestSession=void 0,this._session=void 0,wt(this,void 0),this._attachments=[],this.setPropagationContext({traceId:mt()}),this._notifyScopeListeners(),this}addBreadcrumb(e,t){const n=\"number\"==typeof t?t:100;if(n<=0)return this;const r={timestamp:rt(),...e};return this._breadcrumbs.push(r),this._breadcrumbs.length>n&&(this._breadcrumbs=this._breadcrumbs.slice(-n),this._client&&this._client.recordDroppedEvent(\"buffer_overflow\",\"log_item\")),this._notifyScopeListeners(),this}getLastBreadcrumb(){return this._breadcrumbs[this._breadcrumbs.length-1]}clearBreadcrumbs(){return this._breadcrumbs=[],this._notifyScopeListeners(),this}addAttachment(e){return this._attachments.push(e),this}clearAttachments(){return this._attachments=[],this}getScopeData(){return{breadcrumbs:this._breadcrumbs,attachments:this._attachments,contexts:this._contexts,tags:this._tags,extra:this._extra,user:this._user,level:this._level,fingerprint:this._fingerprint||[],eventProcessors:this._eventProcessors,propagationContext:this._propagationContext,sdkProcessingMetadata:this._sdkProcessingMetadata,transactionName:this._transactionName,span:St(this)}}setSDKProcessingMetadata(e){return this._sdkProcessingMetadata=bt(this._sdkProcessingMetadata,e,2),this}setPropagationContext(e){return this._propagationContext={spanId:yt(),...e},this}getPropagationContext(){return this._propagationContext}captureException(e,t){const n=t&&t.event_id?t.event_id:ot();if(!this._client)return le.warn(\"No client configured on scope - will not capture exception!\"),n;const r=new Error(\"Sentry syntheticException\");return this._client.captureException(e,{originalException:e,syntheticException:r,...t,event_id:n},this),n}captureMessage(e,t,n){const r=n&&n.event_id?n.event_id:ot();if(!this._client)return le.warn(\"No client configured on scope - will not capture message!\"),r;const i=new Error(e);return this._client.captureMessage(e,t,{originalException:e,syntheticException:i,...n,event_id:r},this),r}captureEvent(e,t){const n=t&&t.event_id?t.event_id:ot();return this._client?(this._client.captureEvent(e,{...t,event_id:n},this),n):(le.warn(\"No client configured on scope - will not capture event!\"),n)}_notifyScopeListeners(){this._notifyingListeners||(this._notifyingListeners=!0,this._scopeListeners.forEach((e=>{e(this)})),this._notifyingListeners=!1)}}const Mt=kt;class Ct{constructor(e,t){let n,r;n=e||new Mt,r=t||new Mt,this._stack=[{scope:n}],this._isolationScope=r}withScope(e){const t=this._pushScope();let n;try{n=e(t)}catch(e){throw this._popScope(),e}return Fe(n)?n.then((e=>(this._popScope(),e)),(e=>{throw this._popScope(),e})):(this._popScope(),n)}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getIsolationScope(){return this._isolationScope}getStackTop(){return this._stack[this._stack.length-1]}_pushScope(){const e=this.getScope().clone();return this._stack.push({client:this.getClient(),scope:e}),e}_popScope(){return!(this._stack.length<=1)&&!!this._stack.pop()}}function Et(){const e=Te(Ee());return e.stack=e.stack||new Ct(ie(\"defaultCurrentScope\",(()=>new Mt)),ie(\"defaultIsolationScope\",(()=>new Mt)))}function Tt(e){return Et().withScope(e)}function Ot(e,t){const n=Et();return n.withScope((()=>(n.getStackTop().scope=e,t(e))))}function Pt(e){return Et().withScope((()=>e(Et().getIsolationScope())))}function At(e){const t=Te(e);return t.acs?t.acs:{withIsolationScope:Pt,withScope:Tt,withSetScope:Ot,withSetIsolationScope:(e,t)=>Pt(t),getCurrentScope:()=>Et().getScope(),getIsolationScope:()=>Et().getIsolationScope()}}function jt(){return At(Ee()).getCurrentScope()}function It(){return At(Ee()).getIsolationScope()}function xt(){return jt().getClient()}function Lt(e){const t=e.getPropagationContext(),{traceId:n,spanId:r,parentSpanId:i}=t;return tt({trace_id:n,span_id:r,parent_span_id:i})}function Dt(e){const t=e._sentryMetrics;if(!t)return;const n={};for(const[,[e,r]]of t){(n[e]||(n[e]=[])).push(tt(r))}return n}const Nt=/^sentry-/;function Rt(e){const t=function(e){if(!e||!xe(e)&&!Array.isArray(e))return;if(Array.isArray(e))return e.reduce(((e,t)=>{const n=Ft(t);return Object.entries(n).forEach((([t,n])=>{e[t]=n})),e}),{});return Ft(e)}(e);if(!t)return;const n=Object.entries(t).reduce(((e,[t,n])=>{if(t.match(Nt)){e[t.slice(7)]=n}return e}),{});return Object.keys(n).length>0?n:void 0}function Ft(e){return e.split(\",\").map((e=>e.split(\"=\").map((e=>decodeURIComponent(e.trim()))))).reduce(((e,[t,n])=>(t&&n&&(e[t]=n),e)),{})}let Bt=!1;function Ut(e){const{spanId:t,traceId:n,isRemote:r}=e.spanContext();return tt({parent_span_id:r?t:$t(e).parent_span_id,span_id:r?yt():t,trace_id:n})}function Vt(e){return\"number\"==typeof e?Jt(e):Array.isArray(e)?e[0]+e[1]/1e9:e instanceof Date?Jt(e.getTime()):it()}function Jt(e){return e>9999999999?e/1e3:e}function $t(e){if(function(e){return\"function\"==typeof e.getSpanJSON}(e))return e.getSpanJSON();try{const{spanId:t,traceId:n}=e.spanContext();if(function(e){const t=e;return!!(t.attributes&&t.startTime&&t.name&&t.endTime&&t.status)}(e)){const{attributes:r,startTime:i,name:o,endTime:s,parentSpanId:a,status:c}=e;return tt({span_id:t,trace_id:n,data:r,description:o,parent_span_id:a,start_timestamp:Vt(i),timestamp:Vt(s)||void 0,status:qt(c),op:r[\"sentry.op\"],origin:r[\"sentry.origin\"],_metrics_summary:Dt(e)})}return{span_id:t,trace_id:n}}catch(e){return{}}}function qt(e){if(e&&0!==e.code)return 1===e.code?\"ok\":e.message||\"unknown_error\"}function zt(e){return e._sentryRootSpan||e}function Wt(){Bt||(ce((()=>{console.warn(\"[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly.\")})),Bt=!0)}const Ht=\"production\";function Gt(e,t){const n=t.getOptions(),{publicKey:r}=t.getDsn()||{},i=tt({environment:n.environment||Ht,release:n.release,public_key:r,trace_id:e});return t.emit(\"createDsc\",i),i}function Qt(e){const t=xt();if(!t)return{};const n=zt(e),r=n._frozenDsc;if(r)return r;const i=n.spanContext().traceState,o=i&&i.get(\"sentry.dsc\"),s=o&&Rt(o);if(s)return s;const a=Gt(e.spanContext().traceId,t),c=$t(n),l=c.data||{},u=l[\"sentry.sample_rate\"];null!=u&&(a.sample_rate=`${u}`);const d=l[\"sentry.source\"],h=c.description;return\"url\"!==d&&h&&(a.transaction=h),function(e){if(\"boolean\"==typeof __SENTRY_TRACING__&&!__SENTRY_TRACING__)return!1;const t=xt(),n=e||t&&t.getOptions();return!!n&&(n.enableTracing||\"tracesSampleRate\"in n||\"tracesSampler\"in n)}()&&(a.sampled=String(function(e){const{traceFlags:t}=e.spanContext();return 1===t}(n))),t.emit(\"createDsc\",a,n),a}const Kt=/^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;function Yt(e,t=!1){const{host:n,path:r,pass:i,port:o,projectId:s,protocol:a,publicKey:c}=e;return`${a}://${c}${t&&i?`:${i}`:\"\"}@${n}${o?`:${o}`:\"\"}/${r?`${r}/`:r}${s}`}function Xt(e){return{protocol:e.protocol,publicKey:e.publicKey||\"\",pass:e.pass||\"\",host:e.host,port:e.port||\"\",path:e.path||\"\",projectId:e.projectId}}function Zt(e){const t=\"string\"==typeof e?function(e){const t=Kt.exec(e);if(!t)return void ce((()=>{console.error(`Invalid Sentry Dsn: ${e}`)}));const[n,r,i=\"\",o=\"\",s=\"\",a=\"\"]=t.slice(1);let c=\"\",l=a;const u=l.split(\"/\");if(u.length>1&&(c=u.slice(0,-1).join(\"/\"),l=u.pop()),l){const e=l.match(/^\\d+/);e&&(l=e[0])}return Xt({host:o,pass:i,path:c,projectId:l,port:s,protocol:n,publicKey:r})}(e):Xt(e);if(t&&function(e){if(!oe)return!0;const{port:t,projectId:n,protocol:r}=e;return!([\"protocol\",\"publicKey\",\"host\",\"projectId\"].find((t=>!e[t]&&(le.error(`Invalid Sentry Dsn: ${t} missing`),!0)))||(n.match(/^\\d+$/)?function(e){return\"http\"===e||\"https\"===e}(r)?t&&isNaN(parseInt(t,10))&&(le.error(`Invalid Sentry Dsn: Invalid port ${t}`),1):(le.error(`Invalid Sentry Dsn: Invalid protocol ${r}`),1):(le.error(`Invalid Sentry Dsn: Invalid projectId ${n}`),1)))}(t))return t}function en(e,t=100,n=1/0){try{return nn(\"\",e,t,n)}catch(e){return{ERROR:`**non-serializable** (${e})`}}}function tn(e,t=3,n=102400){const r=en(e,t);return i=r,function(e){return~-encodeURI(e).split(/%..|./).length}(JSON.stringify(i))>n?tn(e,t-1,n):r;var i}function nn(e,t,n=1/0,r=1/0,i=function(){const e=\"function\"==typeof WeakSet,t=e?new WeakSet:[];return[function(n){if(e)return!!t.has(n)||(t.add(n),!1);for(let e=0;e<t.length;e++)if(t[e]===n)return!0;return t.push(n),!1},function(n){if(e)t.delete(n);else for(let e=0;e<t.length;e++)if(t[e]===n){t.splice(e,1);break}}]}()){const[o,s]=i;if(null==t||[\"boolean\",\"string\"].includes(typeof t)||\"number\"==typeof t&&Number.isFinite(t))return t;const a=function(e,t){try{if(\"domain\"===e&&t&&\"object\"==typeof t&&t._events)return\"[Domain]\";if(\"domainEmitter\"===e)return\"[DomainEmitter]\";if(\"undefined\"!=typeof __webpack_require__.g&&t===__webpack_require__.g)return\"[Global]\";if(\"undefined\"!=typeof window&&t===window)return\"[Window]\";if(\"undefined\"!=typeof document&&t===document)return\"[Document]\";if(Ue(t))return\"[VueViewModel]\";if(Ne(n=t)&&\"nativeEvent\"in n&&\"preventDefault\"in n&&\"stopPropagation\"in n)return\"[SyntheticEvent]\";if(\"number\"==typeof t&&!Number.isFinite(t))return`[${t}]`;if(\"function\"==typeof t)return`[Function: ${ve(t)}]`;if(\"symbol\"==typeof t)return`[${String(t)}]`;if(\"bigint\"==typeof t)return`[BigInt: ${String(t)}]`;const r=function(e){const t=Object.getPrototypeOf(e);return t?t.constructor.name:\"null prototype\"}(t);return/^HTML(\\w*)Element$/.test(r)?`[HTMLElement: ${r}]`:`[object ${r}]`}catch(e){return`**non-serializable** (${e})`}var n}(e,t);if(!a.startsWith(\"[object \"))return a;if(t.__sentry_skip_normalization__)return t;const c=\"number\"==typeof t.__sentry_override_normalization_depth__?t.__sentry_override_normalization_depth__:n;if(0===c)return a.replace(\"object \",\"\");if(o(t))return\"[Circular ~]\";const l=t;if(l&&\"function\"==typeof l.toJSON)try{return nn(\"\",l.toJSON(),c-1,r,i)}catch(e){}const u=Array.isArray(t)?[]:{};let d=0;const h=Xe(t);for(const e in h){if(!Object.prototype.hasOwnProperty.call(h,e))continue;if(d>=r){u[e]=\"[MaxProperties ~]\";break}const t=h[e];u[e]=nn(e,t,c-1,r,i),d++}return s(t),u}function rn(e,t=[]){return[e,t]}function on(e,t){const[n,r]=e;return[n,[...r,t]]}function sn(e,t){const n=e[1];for(const e of n){if(t(e,e[0].type))return!0}return!1}function an(e){return re.__SENTRY__&&re.__SENTRY__.encodePolyfill?re.__SENTRY__.encodePolyfill(e):(new TextEncoder).encode(e)}function cn(e){const[t,n]=e;let r=JSON.stringify(t);function i(e){\"string\"==typeof r?r=\"string\"==typeof e?r+e:[an(r),e]:r.push(\"string\"==typeof e?an(e):e)}for(const e of n){const[t,n]=e;if(i(`\\n${JSON.stringify(t)}\\n`),\"string\"==typeof n||n instanceof Uint8Array)i(n);else{let e;try{e=JSON.stringify(n)}catch(t){e=JSON.stringify(en(n))}i(e)}}return\"string\"==typeof r?r:function(e){const t=e.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(t);let r=0;for(const t of e)n.set(t,r),r+=t.length;return n}(r)}function ln(e){const t=\"string\"==typeof e.data?an(e.data):e.data;return[tt({type:\"attachment\",length:t.length,filename:e.filename,content_type:e.contentType,attachment_type:e.attachmentType}),t]}const un={session:\"session\",sessions:\"session\",attachment:\"attachment\",transaction:\"transaction\",event:\"error\",client_report:\"internal\",user_report:\"default\",profile:\"profile\",profile_chunk:\"profile\",replay_event:\"replay\",replay_recording:\"replay\",check_in:\"monitor\",feedback:\"feedback\",span:\"span\",statsd:\"metric_bucket\",raw_security:\"security\"};function dn(e){return un[e]}function hn(e){if(!e||!e.sdk)return;const{name:t,version:n}=e.sdk;return{name:t,version:n}}function pn(e,t,n,r){const i=hn(n),o=e.type&&\"replay_event\"!==e.type?e.type:\"event\";!function(e,t){t&&(e.sdk=e.sdk||{},e.sdk.name=e.sdk.name||t.name,e.sdk.version=e.sdk.version||t.version,e.sdk.integrations=[...e.sdk.integrations||[],...t.integrations||[]],e.sdk.packages=[...e.sdk.packages||[],...t.packages||[]])}(e,n&&n.sdk);const s=function(e,t,n,r){const i=e.sdkProcessingMetadata&&e.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:e.event_id,sent_at:(new Date).toISOString(),...t&&{sdk:t},...!!n&&r&&{dsn:Yt(r)},...i&&{trace:tt({...i})}}}(e,i,r,t);delete e.sdkProcessingMetadata;return rn(s,[[{type:o},e]])}function fn(e,t,n,r=0){return new ft(((i,o)=>{const s=e[r];if(null===t||\"function\"!=typeof s)i(t);else{const a=s({...t},n);te&&s.id&&null===a&&le.log(`Event processor \"${s.id}\" dropped event`),Fe(a)?a.then((t=>fn(e,t,n,r+1).then(i))).then(null,o):fn(e,a,n,r+1).then(i).then(null,o)}}))}let vn,gn,mn;function yn(e,t){const{fingerprint:n,span:r,breadcrumbs:i,sdkProcessingMetadata:o}=t;!function(e,t){const{extra:n,tags:r,user:i,contexts:o,level:s,transactionName:a}=t,c=tt(n);c&&Object.keys(c).length&&(e.extra={...c,...e.extra});const l=tt(r);l&&Object.keys(l).length&&(e.tags={...l,...e.tags});const u=tt(i);u&&Object.keys(u).length&&(e.user={...u,...e.user});const d=tt(o);d&&Object.keys(d).length&&(e.contexts={...d,...e.contexts});s&&(e.level=s);a&&\"transaction\"!==e.type&&(e.transaction=a)}(e,t),r&&function(e,t){e.contexts={trace:Ut(t),...e.contexts},e.sdkProcessingMetadata={dynamicSamplingContext:Qt(t),...e.sdkProcessingMetadata};const n=zt(t),r=$t(n).description;r&&!e.transaction&&\"transaction\"===e.type&&(e.transaction=r)}(e,r),function(e,t){e.fingerprint=e.fingerprint?Array.isArray(e.fingerprint)?e.fingerprint:[e.fingerprint]:[],t&&(e.fingerprint=e.fingerprint.concat(t));e.fingerprint&&!e.fingerprint.length&&delete e.fingerprint}(e,n),function(e,t){const n=[...e.breadcrumbs||[],...t];e.breadcrumbs=n.length?n:void 0}(e,i),function(e,t){e.sdkProcessingMetadata={...e.sdkProcessingMetadata,...t}}(e,o)}function bn(e,t){const{extra:n,tags:r,user:i,contexts:o,level:s,sdkProcessingMetadata:a,breadcrumbs:c,fingerprint:l,eventProcessors:u,attachments:d,propagationContext:h,transactionName:p,span:f}=t;_n(e,\"extra\",n),_n(e,\"tags\",r),_n(e,\"user\",i),_n(e,\"contexts\",o),e.sdkProcessingMetadata=bt(e.sdkProcessingMetadata,a,2),s&&(e.level=s),p&&(e.transactionName=p),f&&(e.span=f),c.length&&(e.breadcrumbs=[...e.breadcrumbs,...c]),l.length&&(e.fingerprint=[...e.fingerprint,...l]),u.length&&(e.eventProcessors=[...e.eventProcessors,...u]),d.length&&(e.attachments=[...e.attachments,...d]),e.propagationContext={...e.propagationContext,...h}}function _n(e,t,n){e[t]=bt(e[t],n,1)}function wn(e,t,n,r,i,o){const{normalizeDepth:s=3,normalizeMaxBreadth:a=1e3}=e,c={...t,event_id:t.event_id||n.event_id||ot(),timestamp:t.timestamp||rt()},l=n.integrations||e.integrations.map((e=>e.name));!function(e,t){const{environment:n,release:r,dist:i,maxValueLength:o=250}=t;e.environment=e.environment||n||Ht,!e.release&&r&&(e.release=r);!e.dist&&i&&(e.dist=i);e.message&&(e.message=qe(e.message,o));const s=e.exception&&e.exception.values&&e.exception.values[0];s&&s.value&&(s.value=qe(s.value,o));const a=e.request;a&&a.url&&(a.url=qe(a.url,o))}(c,e),function(e,t){t.length>0&&(e.sdk=e.sdk||{},e.sdk.integrations=[...e.sdk.integrations||[],...t])}(c,l),i&&i.emit(\"applyFrameMetadata\",t),void 0===t.type&&function(e,t){const n=function(e){const t=re._sentryDebugIds;if(!t)return{};const n=Object.keys(t);return mn&&n.length===gn||(gn=n.length,mn=n.reduce(((n,r)=>{vn||(vn={});const i=vn[r];if(i)n[i[0]]=i[1];else{const i=e(r);for(let e=i.length-1;e>=0;e--){const o=i[e],s=o&&o.filename,a=t[r];if(s&&a){n[s]=a,vn[r]=[s,a];break}}}return n}),{})),mn}(t);try{e.exception.values.forEach((e=>{e.stacktrace.frames.forEach((e=>{n&&e.filename&&(e.debug_id=n[e.filename])}))}))}catch(e){}}(c,e.stackParser);const u=function(e,t){if(!t)return e;const n=e?e.clone():new Mt;return n.update(t),n}(r,n.captureContext);n.mechanism&&lt(c,n.mechanism);const d=i?i.getEventProcessors():[],h=ie(\"globalScope\",(()=>new Mt)).getScopeData();if(o){bn(h,o.getScopeData())}if(u){bn(h,u.getScopeData())}const p=[...n.attachments||[],...h.attachments];p.length&&(n.attachments=p),yn(c,h);return fn([...d,...h.eventProcessors],c,n).then((e=>(e&&function(e){const t={};try{e.exception.values.forEach((e=>{e.stacktrace.frames.forEach((e=>{e.debug_id&&(e.abs_path?t[e.abs_path]=e.debug_id:e.filename&&(t[e.filename]=e.debug_id),delete e.debug_id)}))}))}catch(e){}if(0===Object.keys(t).length)return;e.debug_meta=e.debug_meta||{},e.debug_meta.images=e.debug_meta.images||[];const n=e.debug_meta.images;Object.entries(t).forEach((([e,t])=>{n.push({type:\"sourcemap\",code_file:e,debug_id:t})}))}(e),\"number\"==typeof s&&s>0?function(e,t,n){if(!e)return null;const r={...e,...e.breadcrumbs&&{breadcrumbs:e.breadcrumbs.map((e=>({...e,...e.data&&{data:en(e.data,t,n)}})))},...e.user&&{user:en(e.user,t,n)},...e.contexts&&{contexts:en(e.contexts,t,n)},...e.extra&&{extra:en(e.extra,t,n)}};e.contexts&&e.contexts.trace&&r.contexts&&(r.contexts.trace=e.contexts.trace,e.contexts.trace.data&&(r.contexts.trace.data=en(e.contexts.trace.data,t,n)));e.spans&&(r.spans=e.spans.map((e=>({...e,...e.data&&{data:en(e.data,t,n)}}))));e.contexts&&e.contexts.flags&&r.contexts&&(r.contexts.flags=en(e.contexts.flags,3,n));return r}(e,s,a):e)))}function Sn(e){if(e)return function(e){return e instanceof Mt||\"function\"==typeof e}(e)||function(e){return Object.keys(e).some((e=>kn.includes(e)))}(e)?{captureContext:e}:e}const kn=[\"user\",\"level\",\"extra\",\"contexts\",\"tags\",\"fingerprint\",\"requestSession\",\"propagationContext\"];function Mn(e,t){return jt().captureEvent(e,t)}function Cn(e){const t=xt(),n=It(),r=jt(),{release:i,environment:o=Ht}=t&&t.getOptions()||{},{userAgent:s}=re.navigator||{},a=vt({release:i,environment:o,user:r.getUser()||n.getUser(),...s&&{userAgent:s},...e}),c=n.getSession();return c&&\"ok\"===c.status&&gt(c,{status:\"exited\"}),En(),n.setSession(a),r.setSession(a),a}function En(){const e=It(),t=jt(),n=t.getSession()||e.getSession();n&&function(e,t){let n={};t?n={status:t}:\"ok\"===e.status&&(n={status:\"exited\"}),gt(e,n)}(n),Tn(),e.setSession(),t.setSession()}function Tn(){const e=It(),t=jt(),n=xt(),r=t.getSession()||e.getSession();r&&n&&n.captureSession(r)}function On(e=!1){e?En():Tn()}function Pn(e,t,n){return t||`${function(e){return`${function(e){const t=e.protocol?`${e.protocol}:`:\"\",n=e.port?`:${e.port}`:\"\";return`${t}//${e.host}${n}${e.path?`/${e.path}`:\"\"}/api/`}(e)}${e.projectId}/envelope/`}(e)}?${function(e,t){const n={sentry_version:\"7\"};return e.publicKey&&(n.sentry_key=e.publicKey),t&&(n.sentry_client=`${t.name}/${t.version}`),new URLSearchParams(n).toString()}(e,n)}`}const An=[];function jn(e,t){for(const n of t)n&&n.afterAllSetup&&n.afterAllSetup(e)}function In(e,t,n){if(n[t.name])te&&le.log(`Integration skipped because it was already installed: ${t.name}`);else{if(n[t.name]=t,-1===An.indexOf(t.name)&&\"function\"==typeof t.setupOnce&&(t.setupOnce(),An.push(t.name)),t.setup&&\"function\"==typeof t.setup&&t.setup(e),\"function\"==typeof t.preprocessEvent){const n=t.preprocessEvent.bind(t);e.on(\"preprocessEvent\",((t,r)=>n(t,r,e)))}if(\"function\"==typeof t.processEvent){const n=t.processEvent.bind(t),r=Object.assign(((t,r)=>n(t,r,e)),{id:t.name});e.addEventProcessor(r)}te&&le.log(`Integration installed: ${t.name}`)}}class xn extends Error{constructor(e,t=\"warn\"){super(e),this.message=e,this.logLevel=t}}const Ln=\"Not capturing exception because it's already been captured.\";class Dn{constructor(e){if(this._options=e,this._integrations={},this._numProcessing=0,this._outcomes={},this._hooks={},this._eventProcessors=[],e.dsn?this._dsn=Zt(e.dsn):te&&le.warn(\"No DSN provided, client will not send events.\"),this._dsn){const t=Pn(this._dsn,e.tunnel,e._metadata?e._metadata.sdk:void 0);this._transport=e.transport({tunnel:this._options.tunnel,recordDroppedEvent:this.recordDroppedEvent.bind(this),...e.transportOptions,url:t})}const t=[\"enableTracing\",\"tracesSampleRate\",\"tracesSampler\"].find((t=>t in e&&null==e[t]));t&&ce((()=>{console.warn(`[Sentry] Deprecation warning: \\`${t}\\` is set to undefined, which leads to tracing being enabled. In v9, a value of \\`undefined\\` will result in tracing being disabled.`)}))}captureException(e,t,n){const r=ot();if(ut(e))return te&&le.log(Ln),r;const i={event_id:r,...t};return this._process(this.eventFromException(e,i).then((e=>this._captureEvent(e,i,n)))),i.event_id}captureMessage(e,t,n,r){const i={event_id:ot(),...n},o=Le(e)?e:String(e),s=De(e)?this.eventFromMessage(o,t,i):this.eventFromException(e,i);return this._process(s.then((e=>this._captureEvent(e,i,r)))),i.event_id}captureEvent(e,t,n){const r=ot();if(t&&t.originalException&&ut(t.originalException))return te&&le.log(Ln),r;const i={event_id:r,...t},o=(e.sdkProcessingMetadata||{}).capturedSpanScope;return this._process(this._captureEvent(e,i,o||n)),i.event_id}captureSession(e){\"string\"!=typeof e.release?te&&le.warn(\"Discarded session because of missing or non-string release\"):(this.sendSession(e),gt(e,{init:!1}))}getDsn(){return this._dsn}getOptions(){return this._options}getSdkMetadata(){return this._options._metadata}getTransport(){return this._transport}flush(e){const t=this._transport;return t?(this.emit(\"flush\"),this._isClientDoneProcessing(e).then((n=>t.flush(e).then((e=>n&&e))))):ht(!0)}close(e){return this.flush(e).then((e=>(this.getOptions().enabled=!1,this.emit(\"close\"),e)))}getEventProcessors(){return this._eventProcessors}addEventProcessor(e){this._eventProcessors.push(e)}init(){(this._isEnabled()||this._options.integrations.some((({name:e})=>e.startsWith(\"Spotlight\"))))&&this._setupIntegrations()}getIntegrationByName(e){return this._integrations[e]}addIntegration(e){const t=this._integrations[e.name];In(this,e,this._integrations),t||jn(this,[e])}sendEvent(e,t={}){this.emit(\"beforeSendEvent\",e,t);let n=pn(e,this._dsn,this._options._metadata,this._options.tunnel);for(const e of t.attachments||[])n=on(n,ln(e));const r=this.sendEnvelope(n);r&&r.then((t=>this.emit(\"afterSendEvent\",e,t)),null)}sendSession(e){const t=function(e,t,n,r){const i=hn(n);return rn({sent_at:(new Date).toISOString(),...i&&{sdk:i},...!!r&&t&&{dsn:Yt(t)}},[\"aggregates\"in e?[{type:\"sessions\"},e]:[{type:\"session\"},e.toJSON()]])}(e,this._dsn,this._options._metadata,this._options.tunnel);this.sendEnvelope(t)}recordDroppedEvent(e,t,n){if(this._options.sendClientReports){const r=\"number\"==typeof n?n:1,i=`${e}:${t}`;te&&le.log(`Recording outcome: \"${i}\"${r>1?` (${r} times)`:\"\"}`),this._outcomes[i]=(this._outcomes[i]||0)+r}}on(e,t){const n=this._hooks[e]=this._hooks[e]||[];return n.push(t),()=>{const e=n.indexOf(t);e>-1&&n.splice(e,1)}}emit(e,...t){const n=this._hooks[e];n&&n.forEach((e=>e(...t)))}sendEnvelope(e){return this.emit(\"beforeEnvelope\",e),this._isEnabled()&&this._transport?this._transport.send(e).then(null,(e=>(te&&le.error(\"Error while sending envelope:\",e),e))):(te&&le.error(\"Transport disabled\"),ht({}))}_setupIntegrations(){const{integrations:e}=this._options;this._integrations=function(e,t){const n={};return t.forEach((t=>{t&&In(e,t,n)})),n}(this,e),jn(this,e)}_updateSessionFromEvent(e,t){let n=\"fatal\"===t.level,r=!1;const i=t.exception&&t.exception.values;if(i){r=!0;for(const e of i){const t=e.mechanism;if(t&&!1===t.handled){n=!0;break}}}const o=\"ok\"===e.status;(o&&0===e.errors||o&&n)&&(gt(e,{...n&&{status:\"crashed\"},errors:e.errors||Number(r||n)}),this.captureSession(e))}_isClientDoneProcessing(e){return new ft((t=>{let n=0;const r=setInterval((()=>{0==this._numProcessing?(clearInterval(r),t(!0)):(n+=1,e&&n>=e&&(clearInterval(r),t(!1)))}),1)}))}_isEnabled(){return!1!==this.getOptions().enabled&&void 0!==this._transport}_prepareEvent(e,t,n=jt(),r=It()){const i=this.getOptions(),o=Object.keys(this._integrations);return!t.integrations&&o.length>0&&(t.integrations=o),this.emit(\"preprocessEvent\",e,t),e.type||r.setLastEventId(e.event_id||t.event_id),wn(i,e,t,n,this,r).then((e=>{if(null===e)return e;e.contexts={trace:Lt(n),...e.contexts};const t=function(e,t){const n=t.getPropagationContext();return n.dsc||Gt(n.traceId,e)}(this,n);return e.sdkProcessingMetadata={dynamicSamplingContext:t,...e.sdkProcessingMetadata},e}))}_captureEvent(e,t={},n){return this._processEvent(e,t,n).then((e=>e.event_id),(e=>{te&&(e instanceof xn&&\"log\"===e.logLevel?le.log(e.message):le.warn(e))}))}_processEvent(e,t,n){const r=this.getOptions(),{sampleRate:i}=r,o=Rn(e),s=Nn(e),a=e.type||\"error\",c=`before send for type \\`${a}\\``,l=void 0===i?void 0:function(e){if(\"boolean\"==typeof e)return Number(e);const t=\"string\"==typeof e?parseFloat(e):e;if(!(\"number\"!=typeof t||isNaN(t)||t<0||t>1))return t;te&&le.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`)}(i);if(s&&\"number\"==typeof l&&Math.random()>l)return this.recordDroppedEvent(\"sample_rate\",\"error\",e),pt(new xn(`Discarding event because it's not included in the random sample (sampling rate = ${i})`,\"log\"));const u=\"replay_event\"===a?\"replay\":a,d=(e.sdkProcessingMetadata||{}).capturedSpanIsolationScope;return this._prepareEvent(e,t,n,d).then((n=>{if(null===n)throw this.recordDroppedEvent(\"event_processor\",u,e),new xn(\"An event processor returned `null`, will not send event.\",\"log\");if(t.data&&!0===t.data.__sentry__)return n;const i=function(e,t,n,r){const{beforeSend:i,beforeSendTransaction:o,beforeSendSpan:s}=t;if(Nn(n)&&i)return i(n,r);if(Rn(n)){if(n.spans&&s){const t=[];for(const r of n.spans){const n=s(r);n?t.push(n):(Wt(),e.recordDroppedEvent(\"before_send\",\"span\"))}n.spans=t}if(o){if(n.spans){const e=n.spans.length;n.sdkProcessingMetadata={...n.sdkProcessingMetadata,spanCountBeforeProcessing:e}}return o(n,r)}}return n}(this,r,n,t);return function(e,t){const n=`${t} must return \\`null\\` or a valid event.`;if(Fe(e))return e.then((e=>{if(!Ne(e)&&null!==e)throw new xn(n);return e}),(e=>{throw new xn(`${t} rejected with ${e}`)}));if(!Ne(e)&&null!==e)throw new xn(n);return e}(i,c)})).then((r=>{if(null===r){if(this.recordDroppedEvent(\"before_send\",u,e),o){const t=1+(e.spans||[]).length;this.recordDroppedEvent(\"before_send\",\"span\",t)}throw new xn(`${c} returned \\`null\\`, will not send event.`,\"log\")}const i=n&&n.getSession();if(!o&&i&&this._updateSessionFromEvent(i,r),o){const e=(r.sdkProcessingMetadata&&r.sdkProcessingMetadata.spanCountBeforeProcessing||0)-(r.spans?r.spans.length:0);e>0&&this.recordDroppedEvent(\"before_send\",\"span\",e)}const s=r.transaction_info;if(o&&s&&r.transaction!==e.transaction){const e=\"custom\";r.transaction_info={...s,source:e}}return this.sendEvent(r,t),r})).then(null,(e=>{if(e instanceof xn)throw e;throw this.captureException(e,{data:{__sentry__:!0},originalException:e}),new xn(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${e}`)}))}_process(e){this._numProcessing++,e.then((e=>(this._numProcessing--,e)),(e=>(this._numProcessing--,e)))}_clearOutcomes(){const e=this._outcomes;return this._outcomes={},Object.entries(e).map((([e,t])=>{const[n,r]=e.split(\":\");return{reason:n,category:r,quantity:t}}))}_flushOutcomes(){te&&le.log(\"Flushing outcomes...\");const e=this._clearOutcomes();if(0===e.length)return void(te&&le.log(\"No outcomes to send\"));if(!this._dsn)return void(te&&le.log(\"No dsn provided, will not send outcomes\"));te&&le.log(\"Sending outcomes:\",e);const t=(n=e,rn((r=this._options.tunnel&&Yt(this._dsn))?{dsn:r}:{},[[{type:\"client_report\"},{timestamp:i||rt(),discarded_events:n}]]));var n,r,i;this.sendEnvelope(t)}}function Nn(e){return void 0===e.type}function Rn(e){return\"transaction\"===e.type}function Fn(e){const t=[];function n(e){return t.splice(t.indexOf(e),1)[0]||Promise.resolve(void 0)}return{$:t,add:function(r){if(!(void 0===e||t.length<e))return pt(new xn(\"Not adding Promise because buffer limit was reached.\"));const i=r();return-1===t.indexOf(i)&&t.push(i),i.then((()=>n(i))).then(null,(()=>n(i).then(null,(()=>{})))),i},drain:function(e){return new ft(((n,r)=>{let i=t.length;if(!i)return n(!0);const o=setTimeout((()=>{e&&e>0&&n(!1)}),e);t.forEach((e=>{ht(e).then((()=>{--i||(clearTimeout(o),n(!0))}),r)}))}))}}}function Bn(e,{statusCode:t,headers:n},r=Date.now()){const i={...e},o=n&&n[\"x-sentry-rate-limits\"],s=n&&n[\"retry-after\"];if(o)for(const e of o.trim().split(\",\")){const[t,n,,,o]=e.split(\":\",5),s=parseInt(t,10),a=1e3*(isNaN(s)?60:s);if(n)for(const e of n.split(\";\"))\"metric_bucket\"===e&&o&&!o.split(\";\").includes(\"custom\")||(i[e]=r+a);else i.all=r+a}else s?i.all=r+function(e,t=Date.now()){const n=parseInt(`${e}`,10);if(!isNaN(n))return 1e3*n;const r=Date.parse(`${e}`);return isNaN(r)?6e4:r-t}(s,r):429===t&&(i.all=r+6e4);return i}function Un(e,t,n=Fn(e.bufferSize||64)){let r={};return{send:function(i){const o=[];if(sn(i,((t,n)=>{const i=dn(n);if(function(e,t,n=Date.now()){return function(e,t){return e[t]||e.all||0}(e,t)>n}(r,i)){const r=Vn(t,n);e.recordDroppedEvent(\"ratelimit_backoff\",i,r)}else o.push(t)})),0===o.length)return ht({});const s=rn(i[0],o),a=t=>{sn(s,((n,r)=>{const i=Vn(n,r);e.recordDroppedEvent(t,dn(r),i)}))};return n.add((()=>t({body:cn(s)}).then((e=>(void 0!==e.statusCode&&(e.statusCode<200||e.statusCode>=300)&&te&&le.warn(`Sentry responded with status code ${e.statusCode} to sent event.`),r=Bn(r,e),e)),(e=>{throw a(\"network_error\"),e})))).then((e=>e),(e=>{if(e instanceof xn)return te&&le.error(\"Skipped sending event because buffer is full.\"),a(\"queue_overflow\"),ht({});throw e}))},flush:e=>n.drain(e)}}function Vn(e,t){if(\"event\"===t||\"transaction\"===t)return Array.isArray(e)?e[1]:void 0}const Jn=100;function $n(e,t){const n=xt(),r=It();if(!n)return;const{beforeBreadcrumb:i=null,maxBreadcrumbs:o=Jn}=n.getOptions();if(o<=0)return;const s={timestamp:rt(),...e},a=i?ce((()=>i(s,t))):s;null!==a&&(n.emit&&n.emit(\"beforeAddBreadcrumb\",a,t),r.addBreadcrumb(a,o))}let qn;const zn=new WeakMap,Wn=()=>({name:\"FunctionToString\",setupOnce(){qn=Function.prototype.toString;try{Function.prototype.toString=function(...e){const t=Ye(this),n=zn.has(xt())&&void 0!==t?t:this;return qn.apply(n,e)}}catch(e){}},setup(e){zn.set(e,!0)}}),Hn=[/^Script error\\.?$/,/^Javascript error: Script error\\.? on line 0$/,/^ResizeObserver loop completed with undelivered notifications.$/,/^Cannot redefine property: googletag$/,\"undefined is not an object (evaluating 'a.L')\",'can\\'t redefine non-configurable property \"solana\"',\"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\",\"Can't find variable: _AutofillCallbackHandler\",/^Non-Error promise rejection captured with value: Object Not Found Matching Id:\\d+, MethodName:simulateEvent, ParamCount:\\d+$/],Gn=(e={})=>({name:\"InboundFilters\",processEvent(t,n,r){const i=r.getOptions(),o=function(e={},t={}){return{allowUrls:[...e.allowUrls||[],...t.allowUrls||[]],denyUrls:[...e.denyUrls||[],...t.denyUrls||[]],ignoreErrors:[...e.ignoreErrors||[],...t.ignoreErrors||[],...e.disableErrorDefaults?[]:Hn],ignoreTransactions:[...e.ignoreTransactions||[],...t.ignoreTransactions||[]],ignoreInternal:void 0===e.ignoreInternal||e.ignoreInternal}}(e,i);return function(e,t){if(t.ignoreInternal&&function(e){try{return\"SentryError\"===e.exception.values[0].type}catch(e){}return!1}(e))return te&&le.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${at(e)}`),!0;if(function(e,t){if(e.type||!t||!t.length)return!1;return function(e){const t=[];e.message&&t.push(e.message);let n;try{n=e.exception.values[e.exception.values.length-1]}catch(e){}n&&n.value&&(t.push(n.value),n.type&&t.push(`${n.type}: ${n.value}`));return t}(e).some((e=>He(e,t)))}(e,t.ignoreErrors))return te&&le.warn(`Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${at(e)}`),!0;if(function(e){if(e.type)return!1;if(!e.exception||!e.exception.values||0===e.exception.values.length)return!1;return!e.message&&!e.exception.values.some((e=>e.stacktrace||e.type&&\"Error\"!==e.type||e.value))}(e))return te&&le.warn(`Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${at(e)}`),!0;if(function(e,t){if(\"transaction\"!==e.type||!t||!t.length)return!1;const n=e.transaction;return!!n&&He(n,t)}(e,t.ignoreTransactions))return te&&le.warn(`Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${at(e)}`),!0;if(function(e,t){if(!t||!t.length)return!1;const n=Qn(e);return!!n&&He(n,t)}(e,t.denyUrls))return te&&le.warn(`Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${at(e)}.\\nUrl: ${Qn(e)}`),!0;if(!function(e,t){if(!t||!t.length)return!0;const n=Qn(e);return!n||He(n,t)}(e,t.allowUrls))return te&&le.warn(`Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${at(e)}.\\nUrl: ${Qn(e)}`),!0;return!1}(t,o)?null:t}});function Qn(e){try{let t;try{t=e.exception.values[0].stacktrace.frames}catch(e){}return t?function(e=[]){for(let t=e.length-1;t>=0;t--){const n=e[t];if(n&&\"<anonymous>\"!==n.filename&&\"[native code]\"!==n.filename)return n.filename||null}return null}(t):null}catch(t){return te&&le.error(`Cannot extract url for event ${at(e)}`),null}}function Kn(e,t,n=250,r,i,o,s){if(!(o.exception&&o.exception.values&&s&&Be(s.originalException,Error)))return;const a=o.exception.values.length>0?o.exception.values[o.exception.values.length-1]:void 0;var c,l;a&&(o.exception.values=(c=Yn(e,t,i,s.originalException,r,o.exception.values,a,0),l=n,c.map((e=>(e.value&&(e.value=qe(e.value,l)),e)))))}function Yn(e,t,n,r,i,o,s,a){if(o.length>=n+1)return o;let c=[...o];if(Be(r[i],Error)){Xn(s,a);const o=e(t,r[i]),l=c.length;Zn(o,i,l,a),c=Yn(e,t,n,r[i],i,[o,...c],o,l)}return Array.isArray(r.errors)&&r.errors.forEach(((r,o)=>{if(Be(r,Error)){Xn(s,a);const l=e(t,r),u=c.length;Zn(l,`errors[${o}]`,u,a),c=Yn(e,t,n,r,i,[l,...c],l,u)}})),c}function Xn(e,t){e.mechanism=e.mechanism||{type:\"generic\",handled:!0},e.mechanism={...e.mechanism,...\"AggregateError\"===e.type&&{is_exception_group:!0},exception_id:t}}function Zn(e,t,n,r){e.mechanism=e.mechanism||{type:\"generic\",handled:!0},e.mechanism={...e.mechanism,type:\"chained\",source:t,exception_id:n,parent_id:r}}function er(e){if(!e)return{};const t=e.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);if(!t)return{};const n=t[6]||\"\",r=t[8]||\"\";return{host:t[4],path:t[5],protocol:t[2],search:n,hash:r,relative:t[5]+n+r}}function tr(){\"console\"in re&&se.forEach((function(e){e in re.console&&Ge(re.console,e,(function(t){return ae[e]=t,function(...t){we(\"console\",{args:t,level:e});const n=ae[e];n&&n.apply(re.console,t)}}))}))}function nr(e){return\"warn\"===e?\"warning\":[\"fatal\",\"error\",\"warning\",\"log\",\"info\",\"debug\"].includes(e)?e:\"log\"}const rr=()=>{let e;return{name:\"Dedupe\",processEvent(t){if(t.type)return t;try{if(function(e,t){if(!t)return!1;if(function(e,t){const n=e.message,r=t.message;if(!n&&!r)return!1;if(n&&!r||!n&&r)return!1;if(n!==r)return!1;if(!or(e,t))return!1;if(!ir(e,t))return!1;return!0}(e,t))return!0;if(function(e,t){const n=sr(t),r=sr(e);if(!n||!r)return!1;if(n.type!==r.type||n.value!==r.value)return!1;if(!or(e,t))return!1;if(!ir(e,t))return!1;return!0}(e,t))return!0;return!1}(t,e))return te&&le.warn(\"Event dropped due to being a duplicate of previously captured event.\"),null}catch(e){}return e=t}}};function ir(e,t){let n=ge(e),r=ge(t);if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;if(r.length!==n.length)return!1;for(let e=0;e<r.length;e++){const t=r[e],i=n[e];if(t.filename!==i.filename||t.lineno!==i.lineno||t.colno!==i.colno||t.function!==i.function)return!1}return!0}function or(e,t){let n=e.fingerprint,r=t.fingerprint;if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;try{return!(n.join(\"\")!==r.join(\"\"))}catch(e){return!1}}function sr(e){return e.exception&&e.exception.values&&e.exception.values[0]}function ar(e){return void 0===e?void 0:e>=400&&e<500?\"warning\":e>=500?\"error\":void 0}const cr=re;function lr(e){return e&&/^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(e.toString())}function ur(){if(\"string\"==typeof EdgeRuntime)return!0;if(!function(){if(!(\"fetch\"in cr))return!1;try{return new Headers,new Request(\"http://www.example.com\"),new Response,!0}catch(e){return!1}}())return!1;if(lr(cr.fetch))return!0;let e=!1;const t=cr.document;if(t&&\"function\"==typeof t.createElement)try{const n=t.createElement(\"iframe\");n.hidden=!0,t.head.appendChild(n),n.contentWindow&&n.contentWindow.fetch&&(e=lr(n.contentWindow.fetch)),t.head.removeChild(n)}catch(e){oe&&le.warn(\"Could not create sandbox iframe for pure fetch check, bailing to window.fetch: \",e)}return e}function dr(e,t){const n=\"fetch\";be(n,e),_e(n,(()=>function(e,t=!1){if(t&&!ur())return;Ge(re,\"fetch\",(function(t){return function(...n){const r=new Error,{method:i,url:o}=function(e){if(0===e.length)return{method:\"GET\",url:\"\"};if(2===e.length){const[t,n]=e;return{url:pr(t),method:hr(n,\"method\")?String(n.method).toUpperCase():\"GET\"}}const t=e[0];return{url:pr(t),method:hr(t,\"method\")?String(t.method).toUpperCase():\"GET\"}}(n),s={args:n,fetchData:{method:i,url:o},startTimestamp:1e3*it(),virtualError:r};return e||we(\"fetch\",{...s}),t.apply(re,n).then((async t=>(e?e(t):we(\"fetch\",{...s,endTimestamp:1e3*it(),response:t}),t)),(e=>{throw we(\"fetch\",{...s,endTimestamp:1e3*it(),error:e}),Pe(e)&&void 0===e.stack&&(e.stack=r.stack,Qe(e,\"framesToPop\",1)),e}))}}))}(void 0,t)))}function hr(e,t){return!!e&&\"object\"==typeof e&&!!e[t]}function pr(e){return\"string\"==typeof e?e:e?hr(e,\"url\")?e.url:e.toString?e.toString():\"\":\"\"}const fr=re;const vr=re;let gr=0;function mr(){return gr>0}function yr(e,t={}){if(!function(e){return\"function\"==typeof e}(e))return e;try{const t=e.__sentry_wrapped__;if(t)return\"function\"==typeof t?t:e;if(Ye(e))return e}catch(t){return e}const n=function(...n){try{const r=n.map((e=>yr(e,t)));return e.apply(this,r)}catch(e){throw gr++,setTimeout((()=>{gr--})),function(...e){const t=At(Ee());if(2===e.length){const[n,r]=e;return n?t.withSetScope(n,r):t.withScope(r)}t.withScope(e[0])}((r=>{var i,o;r.addEventProcessor((e=>(t.mechanism&&(ct(e,void 0,void 0),lt(e,t.mechanism)),e.extra={...e.extra,arguments:n},e))),i=e,jt().captureException(i,Sn(o))})),e}};try{for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}catch(e){}Ke(n,e),Qe(e,\"__sentry_wrapped__\",n);try{Object.getOwnPropertyDescriptor(n,\"name\").configurable&&Object.defineProperty(n,\"name\",{get:()=>e.name})}catch(e){}return n}const br=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__;function _r(e,t){const n=kr(e,t),r={type:Er(t),value:Tr(t)};return n.length&&(r.stacktrace={frames:n}),void 0===r.type&&\"\"===r.value&&(r.value=\"Unrecoverable error caught\"),r}function wr(e,t,n,r){const i=xt(),o=i&&i.getOptions().normalizeDepth,s=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const n=e[t];if(n instanceof Error)return n}return}(t),a={__serialized__:tn(t,o)};if(s)return{exception:{values:[_r(e,s)]},extra:a};const c={exception:{values:[{type:Re(t)?t.constructor.name:r?\"UnhandledRejection\":\"Error\",value:Ar(t,{isUnhandledRejection:r})}]},extra:a};if(n){const t=kr(e,n);t.length&&(c.exception.values[0].stacktrace={frames:t})}return c}function Sr(e,t){return{exception:{values:[_r(e,t)]}}}function kr(e,t){const n=t.stacktrace||t.stack||\"\",r=function(e){if(e&&Mr.test(e.message))return 1;return 0}(t),i=function(e){if(\"number\"==typeof e.framesToPop)return e.framesToPop;return 0}(t);try{return e(n,r,i)}catch(e){}return[]}const Mr=/Minified React error #\\d+;/i;function Cr(e){return\"undefined\"!=typeof WebAssembly&&void 0!==WebAssembly.Exception&&e instanceof WebAssembly.Exception}function Er(e){const t=e&&e.name;if(!t&&Cr(e)){return e.message&&Array.isArray(e.message)&&2==e.message.length?e.message[0]:\"WebAssembly.Exception\"}return t}function Tr(e){const t=e&&e.message;return t?t.error&&\"string\"==typeof t.error.message?t.error.message:Cr(e)&&Array.isArray(e.message)&&2==e.message.length?e.message[1]:t:\"No error message\"}function Or(e,t,n,r,i){let o;if(je(t)&&t.error){return Sr(e,t.error)}if(Ie(t)||Ae(t,\"DOMException\")){const i=t;if(\"stack\"in t)o=Sr(e,t);else{const t=i.name||(Ie(i)?\"DOMError\":\"DOMException\"),s=i.message?`${t}: ${i.message}`:t;o=Pr(e,s,n,r),ct(o,s)}return\"code\"in i&&(o.tags={...o.tags,\"DOMException.code\":`${i.code}`}),o}if(Pe(t))return Sr(e,t);if(Ne(t)||Re(t)){return o=wr(e,t,n,i),lt(o,{synthetic:!0}),o}return o=Pr(e,t,n,r),ct(o,`${t}`,void 0),lt(o,{synthetic:!0}),o}function Pr(e,t,n,r){const i={};if(r&&n){const r=kr(e,n);r.length&&(i.exception={values:[{value:t,stacktrace:{frames:r}}]}),lt(i,{synthetic:!0})}if(Le(t)){const{__sentry_template_string__:e,__sentry_template_values__:n}=t;return i.logentry={message:e,params:n},i}return i.message=t,i}function Ar(e,{isUnhandledRejection:t}){const n=function(e,t=40){const n=Object.keys(Xe(e));n.sort();const r=n[0];if(!r)return\"[object has no keys]\";if(r.length>=t)return qe(r,t);for(let e=n.length;e>0;e--){const r=n.slice(0,e).join(\", \");if(!(r.length>t))return e===n.length?r:qe(r,t)}return\"\"}(e),r=t?\"promise rejection\":\"exception\";if(je(e))return`Event \\`ErrorEvent\\` captured as ${r} with message \\`${e.message}\\``;if(Re(e)){return`Event \\`${function(e){try{const t=Object.getPrototypeOf(e);return t?t.constructor.name:void 0}catch(e){}}(e)}\\` (type=${e.type}) captured as ${r}`}return`Object captured as ${r} with keys: ${n}`}class jr extends Dn{constructor(e){const t={parentSpanIsAlwaysRootSpan:!0,...e};!function(e,t,n=[t],r=\"npm\"){const i=e._metadata||{};i.sdk||(i.sdk={name:`sentry.javascript.${t}`,packages:n.map((e=>({name:`${r}:@sentry/${e}`,version:ne}))),version:ne}),e._metadata=i}(t,\"browser\",[\"browser\"],vr.SENTRY_SDK_SOURCE||\"npm\"),super(t),t.sendClientReports&&vr.document&&vr.document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===vr.document.visibilityState&&this._flushOutcomes()}))}eventFromException(e,t){return function(e,t,n,r){const i=Or(e,t,n&&n.syntheticException||void 0,r);return lt(i),i.level=\"error\",n&&n.event_id&&(i.event_id=n.event_id),ht(i)}(this._options.stackParser,e,t,this._options.attachStacktrace)}eventFromMessage(e,t=\"info\",n){return function(e,t,n=\"info\",r,i){const o=Pr(e,t,r&&r.syntheticException||void 0,i);return o.level=n,r&&r.event_id&&(o.event_id=r.event_id),ht(o)}(this._options.stackParser,e,t,n,this._options.attachStacktrace)}captureUserFeedback(e){if(!this._isEnabled())return void(br&&le.warn(\"SDK not enabled, will not capture user feedback.\"));const t=function(e,{metadata:t,tunnel:n,dsn:r}){const i={event_id:e.event_id,sent_at:(new Date).toISOString(),...t&&t.sdk&&{sdk:{name:t.sdk.name,version:t.sdk.version}},...!!n&&!!r&&{dsn:Yt(r)}},o=function(e){return[{type:\"user_report\"},e]}(e);return rn(i,[o])}(e,{metadata:this.getSdkMetadata(),dsn:this.getDsn(),tunnel:this.getOptions().tunnel});this.sendEnvelope(t)}_prepareEvent(e,t,n){return e.platform=e.platform||\"javascript\",super._prepareEvent(e,t,n)}}const Ir=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__,xr=re;let Lr,Dr,Nr,Rr;function Fr(){if(!xr.document)return;const e=we.bind(null,\"dom\"),t=Br(e,!0);xr.document.addEventListener(\"click\",t,!1),xr.document.addEventListener(\"keypress\",t,!1),[\"EventTarget\",\"Node\"].forEach((t=>{const n=xr[t],r=n&&n.prototype;r&&r.hasOwnProperty&&r.hasOwnProperty(\"addEventListener\")&&(Ge(r,\"addEventListener\",(function(t){return function(n,r,i){if(\"click\"===n||\"keypress\"==n)try{const r=this.__sentry_instrumentation_handlers__=this.__sentry_instrumentation_handlers__||{},o=r[n]=r[n]||{refCount:0};if(!o.handler){const r=Br(e);o.handler=r,t.call(this,n,r,i)}o.refCount++}catch(e){}return t.call(this,n,r,i)}})),Ge(r,\"removeEventListener\",(function(e){return function(t,n,r){if(\"click\"===t||\"keypress\"==t)try{const n=this.__sentry_instrumentation_handlers__||{},i=n[t];i&&(i.refCount--,i.refCount<=0&&(e.call(this,t,i.handler,r),i.handler=void 0,delete n[t]),0===Object.keys(n).length&&delete this.__sentry_instrumentation_handlers__)}catch(e){}return e.call(this,t,n,r)}})))}))}function Br(e,t=!1){return n=>{if(!n||n._sentryCaptured)return;const r=function(e){try{return e.target}catch(e){return null}}(n);if(function(e,t){return\"keypress\"===e&&(!t||!t.tagName||\"INPUT\"!==t.tagName&&\"TEXTAREA\"!==t.tagName&&!t.isContentEditable)}(n.type,r))return;Qe(n,\"_sentryCaptured\",!0),r&&!r._sentryId&&Qe(r,\"_sentryId\",ot());const i=\"keypress\"===n.type?\"input\":n.type;if(!function(e){if(e.type!==Dr)return!1;try{if(!e.target||e.target._sentryId!==Nr)return!1}catch(e){}return!0}(n)){e({event:n,name:i,global:t}),Dr=n.type,Nr=r?r._sentryId:void 0}clearTimeout(Lr),Lr=xr.setTimeout((()=>{Nr=void 0,Dr=void 0}),1e3)}}function Ur(e){const t=\"history\";be(t,e),_e(t,Vr)}function Vr(){if(!function(){const e=fr.chrome,t=e&&e.app&&e.app.runtime,n=\"history\"in fr&&!!fr.history.pushState&&!!fr.history.replaceState;return!t&&n}())return;const e=xr.onpopstate;function t(e){return function(...t){const n=t.length>2?t[2]:void 0;if(n){const e=Rr,t=String(n);Rr=t;we(\"history\",{from:e,to:t})}return e.apply(this,t)}}xr.onpopstate=function(...t){const n=xr.location.href,r=Rr;Rr=n;if(we(\"history\",{from:r,to:n}),e)try{return e.apply(this,t)}catch(e){}},Ge(xr.history,\"pushState\",t),Ge(xr.history,\"replaceState\",t)}const Jr={};function $r(e){Jr[e]=void 0}const qr=\"__sentry_xhr_v3__\";function zr(){if(!xr.XMLHttpRequest)return;const e=XMLHttpRequest.prototype;e.open=new Proxy(e.open,{apply(e,t,n){const r=new Error,i=1e3*it(),o=xe(n[0])?n[0].toUpperCase():void 0,s=function(e){if(xe(e))return e;try{return e.toString()}catch(e){}return}(n[1]);if(!o||!s)return e.apply(t,n);t[qr]={method:o,url:s,request_headers:{}},\"POST\"===o&&s.match(/sentry_key/)&&(t.__sentry_own_request__=!0);const a=()=>{const e=t[qr];if(e&&4===t.readyState){try{e.status_code=t.status}catch(e){}we(\"xhr\",{endTimestamp:1e3*it(),startTimestamp:i,xhr:t,virtualError:r})}};return\"onreadystatechange\"in t&&\"function\"==typeof t.onreadystatechange?t.onreadystatechange=new Proxy(t.onreadystatechange,{apply:(e,t,n)=>(a(),e.apply(t,n))}):t.addEventListener(\"readystatechange\",a),t.setRequestHeader=new Proxy(t.setRequestHeader,{apply(e,t,n){const[r,i]=n,o=t[qr];return o&&xe(r)&&xe(i)&&(o.request_headers[r.toLowerCase()]=i),e.apply(t,n)}}),e.apply(t,n)}}),e.send=new Proxy(e.send,{apply(e,t,n){const r=t[qr];if(!r)return e.apply(t,n);void 0!==n[0]&&(r.body=n[0]);return we(\"xhr\",{startTimestamp:1e3*it(),xhr:t}),e.apply(t,n)}})}function Wr(e,t=function(e){const t=Jr[e];if(t)return t;let n=xr[e];if(lr(n))return Jr[e]=n.bind(xr);const r=xr.document;if(r&&\"function\"==typeof r.createElement)try{const t=r.createElement(\"iframe\");t.hidden=!0,r.head.appendChild(t);const i=t.contentWindow;i&&i[e]&&(n=i[e]),r.head.removeChild(t)}catch(t){Ir&&le.warn(`Could not create sandbox iframe for ${e} check, bailing to window.${e}: `,t)}return n?Jr[e]=n.bind(xr):n}(\"fetch\")){let n=0,r=0;return Un(e,(function(i){const o=i.body.length;n+=o,r++;const s={body:i.body,method:\"POST\",referrerPolicy:\"origin\",headers:e.headers,keepalive:n<=6e4&&r<15,...e.fetchOptions};if(!t)return $r(\"fetch\"),pt(\"No fetch implementation available\");try{return t(e.url,s).then((e=>(n-=o,r--,{statusCode:e.status,headers:{\"x-sentry-rate-limits\":e.headers.get(\"X-Sentry-Rate-Limits\"),\"retry-after\":e.headers.get(\"Retry-After\")}})))}catch(e){return $r(\"fetch\"),n-=o,r--,pt(e)}}))}function Hr(e,t,n,r){const i={filename:e,function:\"<anonymous>\"===t?ue:t,in_app:!0};return void 0!==n&&(i.lineno=n),void 0!==r&&(i.colno=r),i}const Gr=/^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i,Qr=/^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,Kr=/\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,Yr=/^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i,Xr=/(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,Zr=function(...e){const t=e.sort(((e,t)=>e[0]-t[0])).map((e=>e[1]));return(e,n=0,r=0)=>{const i=[],o=e.split(\"\\n\");for(let e=n;e<o.length;e++){const n=o[e];if(n.length>1024)continue;const s=de.test(n)?n.replace(de,\"$1\"):n;if(!s.match(/\\S*Error: /)){for(const e of t){const t=e(s);if(t){i.push(t);break}}if(i.length>=50+r)break}}return function(e){if(!e.length)return[];const t=Array.from(e);/sentryWrapped/.test(pe(t).function||\"\")&&t.pop();t.reverse(),he.test(pe(t).function||\"\")&&(t.pop(),he.test(pe(t).function||\"\")&&t.pop());return t.slice(0,50).map((e=>({...e,filename:e.filename||pe(t).filename,function:e.function||ue})))}(i.slice(r))}}(...[[30,e=>{const t=Gr.exec(e);if(t){const[,e,n,r]=t;return Hr(e,ue,+n,+r)}const n=Qr.exec(e);if(n){if(n[2]&&0===n[2].indexOf(\"eval\")){const e=Kr.exec(n[2]);e&&(n[2]=e[1],n[3]=e[2],n[4]=e[3])}const[e,t]=ei(n[1]||ue,n[2]);return Hr(t,e,n[3]?+n[3]:void 0,n[4]?+n[4]:void 0)}}],[50,e=>{const t=Yr.exec(e);if(t){if(t[3]&&t[3].indexOf(\" > eval\")>-1){const e=Xr.exec(t[3]);e&&(t[1]=t[1]||\"eval\",t[3]=e[1],t[4]=e[2],t[5]=\"\")}let e=t[3],n=t[1]||ue;return[n,e]=ei(n,e),Hr(e,n,t[4]?+t[4]:void 0,t[5]?+t[5]:void 0)}}]]),ei=(e,t)=>{const n=-1!==e.indexOf(\"safari-extension\"),r=-1!==e.indexOf(\"safari-web-extension\");return n||r?[-1!==e.indexOf(\"@\")?e.split(\"@\")[0]:ue,n?`safari-extension:${t}`:`safari-web-extension:${t}`]:[e,t]},ti=1024,ni=(e={})=>{const t={console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0,...e};return{name:\"Breadcrumbs\",setup(e){var n;t.console&&function(e){const t=\"console\";be(t,e),_e(t,tr)}(function(e){return function(t){if(xt()!==e)return;const n={category:\"console\",data:{arguments:t.args,logger:\"console\"},level:nr(t.level),message:ze(t.args,\" \")};if(\"assert\"===t.level){if(!1!==t.args[0])return;n.message=`Assertion failed: ${ze(t.args.slice(1),\" \")||\"console.assert\"}`,n.data.arguments=t.args.slice(1)}$n(n,{input:t.args,level:t.level})}}(e)),t.dom&&(n=function(e,t){return function(n){if(xt()!==e)return;let r,i,o=\"object\"==typeof t?t.serializeAttribute:void 0,s=\"object\"==typeof t&&\"number\"==typeof t.maxStringLength?t.maxStringLength:void 0;s&&s>ti&&(br&&le.warn(`\\`dom.maxStringLength\\` cannot exceed 1024, but a value of ${s} was configured. Sentry will use 1024 instead.`),s=ti),\"string\"==typeof o&&(o=[o]);try{const e=n.event,t=function(e){return!!e&&!!e.target}(e)?e.target:e;r=Je(t,{keyAttrs:o,maxStringLength:s}),i=function(e){if(!Ve.HTMLElement)return null;let t=e;for(let e=0;e<5;e++){if(!t)return null;if(t instanceof HTMLElement){if(t.dataset.sentryComponent)return t.dataset.sentryComponent;if(t.dataset.sentryElement)return t.dataset.sentryElement}t=t.parentNode}return null}(t)}catch(e){r=\"<unknown>\"}if(0===r.length)return;const a={category:`ui.${n.name}`,message:r};i&&(a.data={\"ui.component_name\":i}),$n(a,{event:n.event,name:n.name,global:n.global})}}(e,t.dom),be(\"dom\",n),_e(\"dom\",Fr)),t.xhr&&function(e){be(\"xhr\",e),_e(\"xhr\",zr)}(function(e){return function(t){if(xt()!==e)return;const{startTimestamp:n,endTimestamp:r}=t,i=t.xhr[qr];if(!n||!r||!i)return;const{method:o,url:s,status_code:a,body:c}=i,l={method:o,url:s,status_code:a},u={xhr:t.xhr,input:c,startTimestamp:n,endTimestamp:r};$n({category:\"xhr\",data:l,type:\"http\",level:ar(a)},u)}}(e)),t.fetch&&dr(function(e){return function(t){if(xt()!==e)return;const{startTimestamp:n,endTimestamp:r}=t;if(r&&(!t.fetchData.url.match(/sentry_key/)||\"POST\"!==t.fetchData.method))if(t.error){$n({category:\"fetch\",data:t.fetchData,level:\"error\",type:\"http\"},{data:t.error,input:t.args,startTimestamp:n,endTimestamp:r})}else{const e=t.response,i={...t.fetchData,status_code:e&&e.status},o={input:t.args,response:e,startTimestamp:n,endTimestamp:r};$n({category:\"fetch\",data:i,type:\"http\",level:ar(i.status_code)},o)}}}(e)),t.history&&Ur(function(e){return function(t){if(xt()!==e)return;let n=t.from,r=t.to;const i=er(vr.location.href);let o=n?er(n):void 0;const s=er(r);o&&o.path||(o=i),i.protocol===s.protocol&&i.host===s.host&&(r=s.relative),i.protocol===o.protocol&&i.host===o.host&&(n=o.relative),$n({category:\"navigation\",data:{from:n,to:r}})}}(e)),t.sentry&&e.on(\"beforeSendEvent\",function(e){return function(t){xt()===e&&$n({category:\"sentry.\"+(\"transaction\"===t.type?\"transaction\":\"event\"),event_id:t.event_id,level:t.level,message:at(t)},{event:t})}}(e))}}};const ri=[\"EventTarget\",\"Window\",\"Node\",\"ApplicationCache\",\"AudioTrackList\",\"BroadcastChannel\",\"ChannelMergerNode\",\"CryptoOperation\",\"EventSource\",\"FileReader\",\"HTMLUnknownElement\",\"IDBDatabase\",\"IDBRequest\",\"IDBTransaction\",\"KeyOperation\",\"MediaController\",\"MessagePort\",\"ModalWindow\",\"Notification\",\"SVGElementInstance\",\"Screen\",\"SharedWorker\",\"TextTrack\",\"TextTrackCue\",\"TextTrackList\",\"WebSocket\",\"WebSocketWorker\",\"Worker\",\"XMLHttpRequest\",\"XMLHttpRequestEventTarget\",\"XMLHttpRequestUpload\"],ii=(e={})=>{const t={XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0,...e};return{name:\"BrowserApiErrors\",setupOnce(){t.setTimeout&&Ge(vr,\"setTimeout\",oi),t.setInterval&&Ge(vr,\"setInterval\",oi),t.requestAnimationFrame&&Ge(vr,\"requestAnimationFrame\",si),t.XMLHttpRequest&&\"XMLHttpRequest\"in vr&&Ge(XMLHttpRequest.prototype,\"send\",ai);const e=t.eventTarget;if(e){(Array.isArray(e)?e:ri).forEach(ci)}}}};function oi(e){return function(...t){const n=t[0];return t[0]=yr(n,{mechanism:{data:{function:ve(e)},handled:!1,type:\"instrument\"}}),e.apply(this,t)}}function si(e){return function(t){return e.apply(this,[yr(t,{mechanism:{data:{function:\"requestAnimationFrame\",handler:ve(e)},handled:!1,type:\"instrument\"}})])}}function ai(e){return function(...t){const n=this;return[\"onload\",\"onerror\",\"onprogress\",\"onreadystatechange\"].forEach((e=>{e in n&&\"function\"==typeof n[e]&&Ge(n,e,(function(t){const n={mechanism:{data:{function:e,handler:ve(t)},handled:!1,type:\"instrument\"}},r=Ye(t);return r&&(n.mechanism.data.handler=ve(r)),yr(t,n)}))})),e.apply(this,t)}}function ci(e){const t=vr[e],n=t&&t.prototype;n&&n.hasOwnProperty&&n.hasOwnProperty(\"addEventListener\")&&(Ge(n,\"addEventListener\",(function(t){return function(n,r,i){try{\"function\"==typeof r.handleEvent&&(r.handleEvent=yr(r.handleEvent,{mechanism:{data:{function:\"handleEvent\",handler:ve(r),target:e},handled:!1,type:\"instrument\"}}))}catch(e){}return t.apply(this,[n,yr(r,{mechanism:{data:{function:\"addEventListener\",handler:ve(r),target:e},handled:!1,type:\"instrument\"}}),i])}})),Ge(n,\"removeEventListener\",(function(e){return function(t,n,r){try{const i=n.__sentry_wrapped__;i&&e.call(this,t,i,r)}catch(e){}return e.call(this,t,n,r)}})))}const li=()=>({name:\"BrowserSession\",setupOnce(){void 0!==vr.document?(Cn({ignoreDuration:!0}),On(),Ur((({from:e,to:t})=>{void 0!==e&&e!==t&&(Cn({ignoreDuration:!0}),On())}))):br&&le.warn(\"Using the `browserSessionIntegration` in non-browser environments is not supported.\")}}),ui=(e={})=>{const t={onerror:!0,onunhandledrejection:!0,...e};return{name:\"GlobalHandlers\",setupOnce(){Error.stackTraceLimit=50},setup(e){t.onerror&&(!function(e){!function(e){const t=\"error\";be(t,e),_e(t,ke)}((t=>{const{stackParser:n,attachStacktrace:r}=hi();if(xt()!==e||mr())return;const{msg:i,url:o,line:s,column:a,error:c}=t,l=function(e,t,n,r){const i=e.exception=e.exception||{},o=i.values=i.values||[],s=o[0]=o[0]||{},a=s.stacktrace=s.stacktrace||{},c=a.frames=a.frames||[],l=r,u=n,d=xe(t)&&t.length>0?t:function(){try{return Ve.document.location.href}catch(e){return\"\"}}();0===c.length&&c.push({colno:l,filename:d,function:ue,in_app:!0,lineno:u});return e}(Or(n,c||i,void 0,r,!1),o,s,a);l.level=\"error\",Mn(l,{originalException:c,mechanism:{handled:!1,type:\"onerror\"}})}))}(e),di(\"onerror\")),t.onunhandledrejection&&(!function(e){!function(e){const t=\"unhandledrejection\";be(t,e),_e(t,Ce)}((t=>{const{stackParser:n,attachStacktrace:r}=hi();if(xt()!==e||mr())return;const i=function(e){if(De(e))return e;try{if(\"reason\"in e)return e.reason;if(\"detail\"in e&&\"reason\"in e.detail)return e.detail.reason}catch(e){}return e}(t),o=De(i)?{exception:{values:[{type:\"UnhandledRejection\",value:`Non-Error promise rejection captured with value: ${String(i)}`}]}}:Or(n,i,void 0,r,!0);o.level=\"error\",Mn(o,{originalException:i,mechanism:{handled:!1,type:\"onunhandledrejection\"}})}))}(e),di(\"onunhandledrejection\"))}}};function di(e){br&&le.log(`Global Handler attached: ${e}`)}function hi(){const e=xt();return e&&e.getOptions()||{stackParser:()=>[],attachStacktrace:!1}}const pi=()=>({name:\"HttpContext\",preprocessEvent(e){if(!vr.navigator&&!vr.location&&!vr.document)return;const t=e.request&&e.request.url||vr.location&&vr.location.href,{referrer:n}=vr.document||{},{userAgent:r}=vr.navigator||{},i={...e.request&&e.request.headers,...n&&{Referer:n},...r&&{\"User-Agent\":r}},o={...e.request,...t&&{url:t},headers:i};e.request=o}}),fi=(e={})=>{const t=e.limit||5,n=e.key||\"cause\";return{name:\"LinkedErrors\",preprocessEvent(e,r,i){const o=i.getOptions();Kn(_r,o.stackParser,o.maxValueLength,n,t,e,r)}}};var vi=\"new\",gi=\"loading\",mi=\"loaded\",yi=\"joining-meeting\",bi=\"joined-meeting\",_i=\"left-meeting\",wi=\"error\",Si=\"blocked\",ki=\"off\",Mi=\"sendable\",Ci=\"loading\",Ei=\"interrupted\",Ti=\"playable\",Oi=\"unknown\",Pi=\"full\",Ai=\"lobby\",ji=\"none\",Ii=\"base\",xi=\"*\",Li=\"ejected\",Di=\"nbf-room\",Ni=\"nbf-token\",Ri=\"exp-room\",Fi=\"exp-token\",Bi=\"no-room\",Ui=\"meeting-full\",Vi=\"end-of-life\",Ji=\"not-allowed\",$i=\"connection-error\",qi=\"cam-in-use\",zi=\"mic-in-use\",Wi=\"cam-mic-in-use\",Hi=\"permissions\",Gi=\"undefined-mediadevices\",Qi=\"not-found\",Ki=\"constraints\",Yi=\"unknown\",Xi=\"iframe-ready-for-launch-config\",Zi=\"iframe-launch-config\",eo=\"theme-updated\",to=\"loading\",no=\"load-attempt-failed\",ro=\"loaded\",io=\"started-camera\",oo=\"camera-error\",so=\"joining-meeting\",ao=\"joined-meeting\",co=\"left-meeting\",lo=\"participant-joined\",uo=\"participant-updated\",ho=\"participant-left\",po=\"participant-counts-updated\",fo=\"access-state-updated\",vo=\"meeting-session-summary-updated\",go=\"meeting-session-state-updated\",mo=\"meeting-session-data-error\",yo=\"waiting-participant-added\",bo=\"waiting-participant-updated\",_o=\"waiting-participant-removed\",wo=\"track-started\",So=\"track-stopped\",ko=\"transcription-started\",Mo=\"transcription-stopped\",Co=\"transcription-error\",Eo=\"recording-started\",To=\"recording-stopped\",Oo=\"recording-stats\",Po=\"recording-error\",Ao=\"recording-upload-completed\",jo=\"recording-data\",Io=\"app-message\",xo=\"transcription-message\",Lo=\"remote-media-player-started\",Do=\"remote-media-player-updated\",No=\"remote-media-player-stopped\",Ro=\"local-screen-share-started\",Fo=\"local-screen-share-stopped\",Bo=\"local-screen-share-canceled\",Uo=\"active-speaker-change\",Vo=\"active-speaker-mode-change\",Jo=\"network-quality-change\",$o=\"network-connection\",qo=\"cpu-load-change\",zo=\"face-counts-updated\",Wo=\"fullscreen\",Ho=\"exited-fullscreen\",Go=\"live-streaming-started\",Qo=\"live-streaming-updated\",Ko=\"live-streaming-stopped\",Yo=\"live-streaming-error\",Xo=\"lang-updated\",Zo=\"receive-settings-updated\",es=\"input-settings-updated\",ts=\"nonfatal-error\",ns=\"error\",rs=4096,is=102400,os=\"iframe-call-message\",ss=\"local-screen-start\",as=\"daily-method-update-live-streaming-endpoints\",cs=\"transmit-log\",ls=\"daily-custom-track\",us={NONE:\"none\",BGBLUR:\"background-blur\",BGIMAGE:\"background-image\",FACE_DETECTION:\"face-detection\"},ds={NONE:\"none\",NOISE_CANCELLATION:\"noise-cancellation\"},hs={PLAY:\"play\",PAUSE:\"pause\"},ps=[\"jpg\",\"png\",\"jpeg\"],fs=\"add-endpoints\",vs=\"remove-endpoints\",gs=\"sip-call-transfer\";function ms(){return!ys()&&\"undefined\"!=typeof window&&window.navigator&&window.navigator.userAgent?window.navigator.userAgent:\"\"}function ys(){return\"undefined\"!=typeof navigator&&navigator.product&&\"ReactNative\"===navigator.product}function bs(){return navigator&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia}function _s(){return!!(navigator&&navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)&&(function(e,t){if(!e||!t)return!0;switch(e){case\"Chrome\":return t.major>=75;case\"Safari\":return RTCRtpTransceiver.prototype.hasOwnProperty(\"currentDirection\")&&!(13===t.major&&0===t.minor&&0===t.point);case\"Firefox\":return t.major>=67}return!0}(js(),Is())||ys())}function ws(){if(ys())return!1;if(!document)return!1;var e=document.createElement(\"iframe\");return!!e.requestFullscreen||!!e.webkitRequestFullscreen}var Ss=\"none\",ks=\"software\",Ms=\"hardware\";var Cs=function(){try{var e,t=document.createElement(\"canvas\"),n=!1;(e=t.getContext(\"webgl2\",{failIfMajorPerformanceCaveat:!0}))||(n=!0,e=t.getContext(\"webgl2\"));var r=null!=e;return t.remove(),r?n?ks:Ms:Ss}catch(e){return Ss}}();function Es(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return!ys()&&(Cs!==Ss&&(e?function(){if(As())return!1;return[\"Chrome\",\"Firefox\"].includes(js())}():function(){if(As())return!1;var e=js();if(\"Safari\"===e){var t=Ns();if(t.major<15||15===t.major&&t.minor<4)return!1}if(\"Chrome\"===e){return xs().major>=77}if(\"Firefox\"===e){return Rs().major>=97}return[\"Chrome\",\"Firefox\",\"Safari\"].includes(e)}()))}function Ts(){if(ys())return!1;if(Ps())return!1;if(\"undefined\"==typeof AudioWorkletNode)return!1;switch(js()){case\"Chrome\":case\"Firefox\":return!0;case\"Safari\":var e=Is();return e.major>17||17===e.major&&e.minor>=4}return!1}function Os(){return bs()&&!function(){var e,t=js();if(!ms())return!0;switch(t){case\"Chrome\":return(e=xs()).major&&e.major>0&&e.major<75;case\"Firefox\":return(e=Rs()).major<91;case\"Safari\":return(e=Ns()).major<13||13===e.major&&e.minor<1;default:return!0}}()}function Ps(){return ms().match(/Linux; Android/)}function As(){var e,t=ms(),n=t.match(/Mac/)&&(!ys()&&\"undefined\"!=typeof window&&null!==(e=window)&&void 0!==e&&null!==(e=e.navigator)&&void 0!==e&&e.maxTouchPoints?window.navigator.maxTouchPoints:0)>=5;return!!(t.match(/Mobi/)||t.match(/Android/)||n)||(!!ms().match(/DailyAnd\\//)||void 0)}function js(){if(\"undefined\"!=typeof window){var e=ms();return Ls()?\"Safari\":e.indexOf(\"Edge\")>-1?\"Edge\":e.match(/Chrome\\//)?\"Chrome\":e.indexOf(\"Safari\")>-1||Ds()?\"Safari\":e.indexOf(\"Firefox\")>-1?\"Firefox\":e.indexOf(\"MSIE\")>-1||e.indexOf(\".NET\")>-1?\"IE\":\"Unknown Browser\"}}function Is(){switch(js()){case\"Chrome\":return xs();case\"Safari\":return Ns();case\"Firefox\":return Rs();case\"Edge\":return function(){var e=0,t=0;if(\"undefined\"!=typeof window){var n=ms().match(/Edge\\/(\\d+).(\\d+)/);if(n)try{e=parseInt(n[1]),t=parseInt(n[2])}catch(e){}}return{major:e,minor:t}}()}}function xs(){var e=0,t=0,n=0,r=0,i=!1;if(\"undefined\"!=typeof window){var o=ms(),s=o.match(/Chrome\\/(\\d+).(\\d+).(\\d+).(\\d+)/);if(s)try{e=parseInt(s[1]),t=parseInt(s[2]),n=parseInt(s[3]),r=parseInt(s[4]),i=o.indexOf(\"OPR/\")>-1}catch(e){}}return{major:e,minor:t,build:n,patch:r,opera:i}}function Ls(){return!!ms().match(/iPad|iPhone|iPod/i)&&bs()}function Ds(){return ms().indexOf(\"AppleWebKit/605.1.15\")>-1}function Ns(){var e=0,t=0,n=0;if(\"undefined\"!=typeof window){var r=ms().match(/Version\\/(\\d+).(\\d+)(.(\\d+))?/);if(r)try{e=parseInt(r[1]),t=parseInt(r[2]),n=parseInt(r[4])}catch(e){}else(Ls()||Ds())&&(e=14,t=0,n=3)}return{major:e,minor:t,point:n}}function Rs(){var e=0,t=0;if(\"undefined\"!=typeof window){var n=ms().match(/Firefox\\/(\\d+).(\\d+)/);if(n)try{e=parseInt(n[1]),t=parseInt(n[2])}catch(e){}}return{major:e,minor:t}}var Fs=function(){return o((function e(){t(this,e)}),[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){Y()}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){Y()}},{key:\"sendMessageToCallMachine\",value:function(e,t,n,r){Y()}},{key:\"sendMessageToDailyJs\",value:function(e,t){Y()}},{key:\"removeListener\",value:function(e){Y()}}])}();function Bs(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Us(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Bs(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Bs(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Vs(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Vs=function(){return!!e})()}var Js=function(){function e(){var n,r,i,o;return t(this,e),r=this,i=a(i=e),(n=s(r,Vs()?Reflect.construct(i,o||[],a(r).constructor):i.apply(r,o)))._wrappedListeners={},n._messageCallbacks={},n}return l(e,Fs),o(e,[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){var r=this,i=function(i){if(i.data&&\"iframe-call-message\"===i.data.what&&(!i.data.callClientId||i.data.callClientId===t)&&(!i.data.from||\"module\"!==i.data.from)){var o=Us({},i.data);if(delete o.from,o.callbackStamp&&r._messageCallbacks[o.callbackStamp]){var s=o.callbackStamp;r._messageCallbacks[s].call(n,o),delete r._messageCallbacks[s]}delete o.what,delete o.callbackStamp,e.call(n,o)}};this._wrappedListeners[e]=i,window.addEventListener(\"message\",i)}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){var r=function(r){var i;if(!(!r.data||r.data.what!==os||!r.data.action||r.data.from&&\"module\"!==r.data.from||r.data.callClientId&&t&&r.data.callClientId!==t||null!=r&&null!==(i=r.data)&&void 0!==i&&i.callFrameId)){var o=r.data;e.call(n,o)}};this._wrappedListeners[e]=r,window.addEventListener(\"message\",r)}},{key:\"sendMessageToCallMachine\",value:function(e,t,n,r){if(!n)throw new Error(\"undefined callClientId. Are you trying to use a DailyCall instance previously destroyed?\");var i=Us({},e);if(i.what=os,i.from=\"module\",i.callClientId=n,t){var o=K();this._messageCallbacks[o]=t,i.callbackStamp=o}var s=r?r.contentWindow:window,a=this._callMachineTargetOrigin(r);a&&s.postMessage(i,a)}},{key:\"sendMessageToDailyJs\",value:function(e,t){e.what=os,e.callClientId=t,e.from=\"embedded\",window.postMessage(e,this._targetOriginFromWindowLocation())}},{key:\"removeListener\",value:function(e){var t=this._wrappedListeners[e];t&&(window.removeEventListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"forwardPackagedMessageToCallMachine\",value:function(e,t,n){var r=Us({},e);r.callClientId=n;var i=t?t.contentWindow:window,o=this._callMachineTargetOrigin(t);o&&i.postMessage(r,o)}},{key:\"addListenerForPackagedMessagesFromCallMachine\",value:function(e,t){var n=function(n){if(n.data&&\"iframe-call-message\"===n.data.what&&(!n.data.callClientId||n.data.callClientId===t)&&(!n.data.from||\"module\"!==n.data.from)){var r=n.data;e(r)}};return this._wrappedListeners[e]=n,window.addEventListener(\"message\",n),e}},{key:\"removeListenerForPackagedMessagesFromCallMachine\",value:function(e){var t=this._wrappedListeners[e];t&&(window.removeEventListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"_callMachineTargetOrigin\",value:function(e){return e?e.src?new URL(e.src).origin:void 0:this._targetOriginFromWindowLocation()}},{key:\"_targetOriginFromWindowLocation\",value:function(){return\"file:\"===window.location.protocol?\"*\":window.location.origin}}])}();function $s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function qs(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(qs=function(){return!!e})()}var zs=function(){function e(){var n,r,i,o;return t(this,e),r=this,i=a(i=e),n=s(r,qs()?Reflect.construct(i,o||[],a(r).constructor):i.apply(r,o)),__webpack_require__.g.callMachineToDailyJsEmitter=__webpack_require__.g.callMachineToDailyJsEmitter||new I.EventEmitter,__webpack_require__.g.dailyJsToCallMachineEmitter=__webpack_require__.g.dailyJsToCallMachineEmitter||new I.EventEmitter,n._wrappedListeners={},n._messageCallbacks={},n}return l(e,Fs),o(e,[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){this._addListener(e,__webpack_require__.g.callMachineToDailyJsEmitter,t,n,\"received call machine message\")}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){this._addListener(e,__webpack_require__.g.dailyJsToCallMachineEmitter,t,n,\"received daily-js message\")}},{key:\"sendMessageToCallMachine\",value:function(e,t,n){this._sendMessage(e,__webpack_require__.g.dailyJsToCallMachineEmitter,n,t,\"sending message to call machine\")}},{key:\"sendMessageToDailyJs\",value:function(e,t){this._sendMessage(e,__webpack_require__.g.callMachineToDailyJsEmitter,t,null,\"sending message to daily-js\")}},{key:\"removeListener\",value:function(e){var t=this._wrappedListeners[e];t&&(__webpack_require__.g.callMachineToDailyJsEmitter.removeListener(\"message\",t),__webpack_require__.g.dailyJsToCallMachineEmitter.removeListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"_addListener\",value:function(e,t,n,r,i){var o=this,s=function(t){if(t.callClientId===n){if(t.callbackStamp&&o._messageCallbacks[t.callbackStamp]){var i=t.callbackStamp;o._messageCallbacks[i].call(r,t),delete o._messageCallbacks[i]}e.call(r,t)}};this._wrappedListeners[e]=s,t.addListener(\"message\",s)}},{key:\"_sendMessage\",value:function(e,t,n,r,i){var o=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$s(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);if(o.callClientId=n,r){var s=K();this._messageCallbacks[s]=r,o.callbackStamp=s}t.emit(\"message\",o)}}])}(),Ws=\"replace\",Hs=\"shallow-merge\",Gs=[Ws,Hs];var Qs=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.data,i=n.mergeStrategy,o=void 0===i?Ws:i;t(this,e),e._validateMergeStrategy(o),e._validateData(r,o),this.mergeStrategy=o,this.data=r}return o(e,[{key:\"isNoOp\",value:function(){return e.isNoOpUpdate(this.data,this.mergeStrategy)}}],[{key:\"isNoOpUpdate\",value:function(e,t){return 0===Object.keys(e).length&&t===Hs}},{key:\"_validateMergeStrategy\",value:function(e){if(!Gs.includes(e))throw Error(\"Unrecognized mergeStrategy provided. Options are: [\".concat(Gs,\"]\"))}},{key:\"_validateData\",value:function(e,t){if(!function(e){if(null==e||\"object\"!==n(e))return!1;var t=Object.getPrototypeOf(e);return null==t||t===Object.prototype}(e))throw Error(\"Meeting session data must be a plain (map-like) object\");var r;try{if(r=JSON.stringify(e),t===Ws){var i=JSON.parse(r);N(i,e)||console.warn(\"The meeting session data provided will be modified when serialized.\",i,e)}else if(t===Hs)for(var o in e)if(Object.hasOwnProperty.call(e,o)&&void 0!==e[o]){var s=JSON.parse(JSON.stringify(e[o]));N(e[o],s)||console.warn(\"At least one key in the meeting session data provided will be modified when serialized.\",s,e[o])}}catch(e){throw Error(\"Meeting session data must be serializable to JSON: \".concat(e))}if(r.length>is)throw Error(\"Meeting session data is too large (\".concat(r.length,\" characters). Maximum size suppported is \").concat(is,\".\"))}}])}();function Ks(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Ks=function(){return!!e})()}function Ys(e){var t=\"function\"==typeof Map?new Map:void 0;return Ys=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf(\"[native code]\")}catch(t){return\"function\"==typeof e}}(e))return e;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return function(e,t,n){if(Ks())return Reflect.construct.apply(null,arguments);var r=[null];r.push.apply(r,t);var i=new(e.bind.apply(e,r));return n&&c(i,n.prototype),i}(e,arguments,a(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),c(n,e)},Ys(e)}function Xs(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Xs=function(){return!!e})()}function Zs(e){var t,n=null===(t=window._daily)||void 0===t?void 0:t.pendings;if(n){var r=n.indexOf(e);-1!==r&&n.splice(r,1)}}var ea=function(){return o((function e(n){t(this,e),this._currentLoad=null,this._callClientId=n}),[{key:\"load\",value:function(){var e,t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0;if(this.loaded)return window._daily.instances[this._callClientId].callMachine.reset(),void r(!0);e=this._callClientId,window._daily.pendings.push(e),this._currentLoad&&this._currentLoad.cancel(),this._currentLoad=new ta(n,(function(){r(!1)}),(function(e,n){n||Zs(t._callClientId),i(e,n)})),this._currentLoad.start()}},{key:\"cancel\",value:function(){this._currentLoad&&this._currentLoad.cancel(),Zs(this._callClientId)}},{key:\"loaded\",get:function(){return this._currentLoad&&this._currentLoad.succeeded}}])}(),ta=function(){return o((function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0;t(this,e),this._attemptsRemaining=3,this._currentAttempt=null,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i}),[{key:\"start\",value:function(){var e=this;if(!this._currentAttempt){var t=function(n){e._currentAttempt.cancelled||(e._attemptsRemaining--,e._failureCallback(n,e._attemptsRemaining>0),e._attemptsRemaining<=0||setTimeout((function(){e._currentAttempt.cancelled||(e._currentAttempt=new ia(e._dailyConfig,e._successCallback,t),e._currentAttempt.start())}),3e3))};this._currentAttempt=new ia(this._dailyConfig,this._successCallback,t),this._currentAttempt.start()}}},{key:\"cancel\",value:function(){this._currentAttempt&&this._currentAttempt.cancel()}},{key:\"cancelled\",get:function(){return this._currentAttempt&&this._currentAttempt.cancelled}},{key:\"succeeded\",get:function(){return this._currentAttempt&&this._currentAttempt.succeeded}}])}(),na=function(){function e(){return t(this,e),n=this,i=arguments,r=a(r=e),s(n,Xs()?Reflect.construct(r,i||[],a(n).constructor):r.apply(n,i));var n,r,i}return l(e,Ys(Error)),o(e)}(),ra=2e4,ia=function(){return o((function e(n,r,i){t(this,e),this._loadAttemptImpl=ys()||!n.avoidEval?new oa(n,r,i):new sa(n,r,i)}),[{key:\"start\",value:(e=h((function*(){return this._loadAttemptImpl.start()})),function(){return e.apply(this,arguments)})},{key:\"cancel\",value:function(){this._loadAttemptImpl.cancel()}},{key:\"cancelled\",get:function(){return this._loadAttemptImpl.cancelled}},{key:\"succeeded\",get:function(){return this._loadAttemptImpl.succeeded}}]);var e}(),oa=function(){return o((function e(n,r,i){t(this,e),this.cancelled=!1,this.succeeded=!1,this._networkTimedOut=!1,this._networkTimeout=null,this._iosCache=\"undefined\"!=typeof iOSCallObjectBundleCache&&iOSCallObjectBundleCache,this._refetchHeaders=null,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i}),[{key:\"start\",value:(i=h((function*(){var e=Z(this._dailyConfig);!(yield this._tryLoadFromIOSCache(e))&&this._loadFromNetwork(e)})),function(){return i.apply(this,arguments)})},{key:\"cancel\",value:function(){clearTimeout(this._networkTimeout),this.cancelled=!0}},{key:\"_tryLoadFromIOSCache\",value:(r=h((function*(e){if(!this._iosCache)return!1;try{var t=yield this._iosCache.get(e);return!!this.cancelled||!!t&&(t.code?(Function('\"use strict\";'+t.code)(),this.succeeded=!0,this._successCallback(),!0):(this._refetchHeaders=t.refetchHeaders,!1))}catch(e){return!1}})),function(e){return r.apply(this,arguments)})},{key:\"_loadFromNetwork\",value:(n=h((function*(e){var t=this;this._networkTimeout=setTimeout((function(){t._networkTimedOut=!0,t._failureCallback({msg:\"Timed out (>\".concat(ra,\" ms) when loading call object bundle \").concat(e),type:\"timeout\"})}),ra);try{var n=this._refetchHeaders?{headers:this._refetchHeaders}:{},r=yield fetch(e,n);if(clearTimeout(this._networkTimeout),this.cancelled||this._networkTimedOut)throw new na;var i=yield this._getBundleCodeFromResponse(e,r);if(this.cancelled)throw new na;Function('\"use strict\";'+i)(),this._iosCache&&this._iosCache.set(e,i,r.headers),this.succeeded=!0,this._successCallback()}catch(t){if(clearTimeout(this._networkTimeout),t instanceof na||this.cancelled||this._networkTimedOut)return;this._failureCallback({msg:\"Failed to load call object bundle \".concat(e,\": \").concat(t),type:t.message})}})),function(e){return n.apply(this,arguments)})},{key:\"_getBundleCodeFromResponse\",value:(e=h((function*(e,t){if(t.ok)return yield t.text();if(this._iosCache&&304===t.status)return(yield this._iosCache.renew(e,t.headers)).code;throw new Error(\"Received \".concat(t.status,\" response\"))})),function(t,n){return e.apply(this,arguments)})}]);var e,n,r,i}(),sa=function(){return o((function e(n,r,i){t(this,e),this.cancelled=!1,this.succeeded=!1,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i,this._attemptId=K(),this._networkTimeout=null,this._scriptElement=null}),[{key:\"start\",value:function(){window._dailyCallMachineLoadWaitlist||(window._dailyCallMachineLoadWaitlist=new Set);var e=Z(this._dailyConfig);\"object\"===(\"undefined\"==typeof document?\"undefined\":n(document))?this._startLoading(e):this._failureCallback({msg:\"Call object bundle must be loaded in a DOM/web context\",type:\"missing context\"})}},{key:\"cancel\",value:function(){this._stopLoading(),this.cancelled=!0}},{key:\"_startLoading\",value:function(e){var t=this;this._signUpForCallMachineLoadWaitlist(),this._networkTimeout=setTimeout((function(){t._stopLoading(),t._failureCallback({msg:\"Timed out (>\".concat(ra,\" ms) when loading call object bundle \").concat(e),type:\"timeout\"})}),ra);var n=document.getElementsByTagName(\"head\")[0],r=document.createElement(\"script\");this._scriptElement=r,r.onload=function(){t._stopLoading(),t.succeeded=!0,t._successCallback()},r.onerror=function(e){t._stopLoading(),t._failureCallback({msg:\"Failed to load call object bundle \".concat(e.target.src),type:e.message})},r.src=e,n.appendChild(r)}},{key:\"_stopLoading\",value:function(){this._withdrawFromCallMachineLoadWaitlist(),clearTimeout(this._networkTimeout),this._scriptElement&&(this._scriptElement.onload=null,this._scriptElement.onerror=null)}},{key:\"_signUpForCallMachineLoadWaitlist\",value:function(){window._dailyCallMachineLoadWaitlist.add(this._attemptId)}},{key:\"_withdrawFromCallMachineLoadWaitlist\",value:function(){window._dailyCallMachineLoadWaitlist.delete(this._attemptId)}}])}(),aa=function(e,t,n){return!0===ua(e.local,t,n)},ca=function(e,t,n){return e.local.streams&&e.local.streams[t]&&e.local.streams[t].stream&&e.local.streams[t].stream[\"get\".concat(\"video\"===n?\"Video\":\"Audio\",\"Tracks\")]()[0]},la=function(e,t,n,r){var i=da(e,t,n,r);return i&&i.pendingTrack},ua=function(e,t,n){if(!e)return!1;var r=function(e){switch(e){case\"avatar\":return!0;case\"staged\":return e;default:return!!e}},i=e.public.subscribedTracks;return i&&i[t]?-1===[\"cam-audio\",\"cam-video\",\"screen-video\",\"screen-audio\",\"rmpAudio\",\"rmpVideo\"].indexOf(n)&&i[t].custom?[!0,\"staged\"].includes(i[t].custom)?r(i[t].custom):r(i[t].custom[n]):r(i[t][n]):!i||r(i.ALL)},da=function(e,t,n,r){var i=Object.values(e.streams||{}).filter((function(e){return e.participantId===t&&e.type===n&&e.pendingTrack&&e.pendingTrack.kind===r})).sort((function(e,t){return new Date(t.starttime)-new Date(e.starttime)}));return i&&i[0]},ha=function(e,t){var n=e.local.public.customTracks;if(n&&n[t])return n[t].track};function pa(e,t){for(var n=t.getState(),r=0,i=[\"cam\",\"screen\"];r<i.length;r++)for(var o=i[r],s=0,a=[\"video\",\"audio\"];s<a.length;s++){var c=a[s],l=\"cam\"===o?c:\"screen\".concat(c.charAt(0).toUpperCase()+c.slice(1)),u=e.tracks[l];if(u){var d=e.local?ca(n,o,c):la(n,e.session_id,o,c);\"playable\"===u.state&&(u.track=d),u.persistentTrack=d}}}function fa(e,t){try{var n=t.getState();for(var r in e.tracks)if(!va(r)){var i=e.tracks[r].kind;if(i){var o=e.tracks[r];if(o){var s=e.local?ha(n,r):la(n,e.session_id,r,i);\"playable\"===o.state&&(e.tracks[r].track=s),o.persistentTrack=s}}else console.error(\"unknown type for custom track\")}}catch(e){console.error(e)}}function va(e){return[\"video\",\"audio\",\"screenVideo\",\"screenAudio\"].includes(e)}function ga(e,t,n){var r=n.getState();if(e.local){if(e.audio)try{e.audioTrack=r.local.streams.cam.stream.getAudioTracks()[0],e.audioTrack||(e.audio=!1)}catch(e){}if(e.video)try{e.videoTrack=r.local.streams.cam.stream.getVideoTracks()[0],e.videoTrack||(e.video=!1)}catch(e){}if(e.screen)try{e.screenVideoTrack=r.local.streams.screen.stream.getVideoTracks()[0],e.screenAudioTrack=r.local.streams.screen.stream.getAudioTracks()[0],e.screenVideoTrack||e.screenAudioTrack||(e.screen=!1)}catch(e){}}else{var i=!0;try{var o=r.participants[e.session_id];o&&o.public&&o.public.rtcType&&\"peer-to-peer\"===o.public.rtcType.impl&&o.private&&![\"connected\",\"completed\"].includes(o.private.peeringState)&&(i=!1)}catch(e){console.error(e)}if(!i)return e.audio=!1,e.audioTrack=!1,e.video=!1,e.videoTrack=!1,e.screen=!1,void(e.screenTrack=!1);try{r.streams;if(e.audio&&aa(r,e.session_id,\"cam-audio\")){var s=la(r,e.session_id,\"cam\",\"audio\");s&&(t&&t.audioTrack&&t.audioTrack.id===s.id?e.audioTrack=s:s.muted||(e.audioTrack=s)),e.audioTrack||(e.audio=!1)}if(e.video&&aa(r,e.session_id,\"cam-video\")){var a=la(r,e.session_id,\"cam\",\"video\");a&&(t&&t.videoTrack&&t.videoTrack.id===a.id?e.videoTrack=a:a.muted||(e.videoTrack=a)),e.videoTrack||(e.video=!1)}if(e.screen&&aa(r,e.session_id,\"screen-audio\")){var c=la(r,e.session_id,\"screen\",\"audio\");c&&(t&&t.screenAudioTrack&&t.screenAudioTrack.id===c.id?e.screenAudioTrack=c:c.muted||(e.screenAudioTrack=c))}if(e.screen&&aa(r,e.session_id,\"screen-video\")){var l=la(r,e.session_id,\"screen\",\"video\");l&&(t&&t.screenVideoTrack&&t.screenVideoTrack.id===l.id?e.screenVideoTrack=l:l.muted||(e.screenVideoTrack=l))}e.screenVideoTrack||e.screenAudioTrack||(e.screen=!1)}catch(e){console.error(\"unexpected error matching up tracks\",e)}}}function ma(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if(\"string\"==typeof e)return ya(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ya(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,o=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}function ya(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var ba=new Map,_a=null;function wa(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if(\"string\"==typeof e)return Sa(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Sa(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,o=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}function Sa(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var ka=new Map,Ma=null;function Ca(e){Ta()?function(e){ba.has(e)||(ba.set(e,{}),navigator.mediaDevices.enumerateDevices().then((function(t){ba.has(e)&&(ba.get(e).lastDevicesString=JSON.stringify(t),_a||(_a=function(){var e=h((function*(){var e,t=yield navigator.mediaDevices.enumerateDevices(),n=ma(ba.keys());try{for(n.s();!(e=n.n()).done;){var r=e.value,i=JSON.stringify(t);i!==ba.get(r).lastDevicesString&&(ba.get(r).lastDevicesString=i,r(t))}}catch(e){n.e(e)}finally{n.f()}}));return function(){return e.apply(this,arguments)}}(),navigator.mediaDevices.addEventListener(\"devicechange\",_a)))})).catch((function(){})))}(e):function(e){ka.has(e)||(ka.set(e,{}),navigator.mediaDevices.enumerateDevices().then((function(t){ka.has(e)&&(ka.get(e).lastDevicesString=JSON.stringify(t),Ma||(Ma=setInterval(h((function*(){var e,t=yield navigator.mediaDevices.enumerateDevices(),n=wa(ka.keys());try{for(n.s();!(e=n.n()).done;){var r=e.value,i=JSON.stringify(t);i!==ka.get(r).lastDevicesString&&(ka.get(r).lastDevicesString=i,r(t))}}catch(e){n.e(e)}finally{n.f()}})),3e3)))})))}(e)}function Ea(e){Ta()?function(e){ba.has(e)&&(ba.delete(e),0===ba.size&&_a&&(navigator.mediaDevices.removeEventListener(\"devicechange\",_a),_a=null))}(e):function(e){ka.has(e)&&(ka.delete(e),0===ka.size&&Ma&&(clearInterval(Ma),Ma=null))}(e)}function Ta(){var e;return ys()||void 0!==(null===(e=navigator.mediaDevices)||void 0===e?void 0:e.ondevicechange)}var Oa=new Set;function Pa(e,t){var n=t.isLocalScreenVideo;return e&&\"live\"===e.readyState&&!function(e,t){return(!t.isLocalScreenVideo||\"Chrome\"!==js())&&e.muted&&!Oa.has(e.id)}(e,{isLocalScreenVideo:n})}function Aa(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ja(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Aa(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Aa(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Ia=Object.freeze({VIDEO:\"video\",AUDIO:\"audio\",SCREEN_VIDEO:\"screenVideo\",SCREEN_AUDIO:\"screenAudio\",CUSTOM_VIDEO:\"customVideo\",CUSTOM_AUDIO:\"customAudio\"}),xa=Object.freeze({PARTICIPANTS:\"participants\",STREAMING:\"streaming\",TRANSCRIPTION:\"transcription\"}),La=Object.values(Ia),Da=[\"v\",\"a\",\"sv\",\"sa\",\"cv\",\"ca\"];Object.freeze(La.reduce((function(e,t,n){return e[t]=Da[n],e}),{})),Object.freeze(Da.reduce((function(e,t,n){return e[t]=La[n],e}),{}));var Na=[Ia.VIDEO,Ia.AUDIO,Ia.SCREEN_VIDEO,Ia.SCREEN_AUDIO],Ra=Object.values(xa),Fa=[\"p\",\"s\",\"t\"];Object.freeze(Ra.reduce((function(e,t,n){return e[t]=Fa[n],e}),{})),Object.freeze(Fa.reduce((function(e,t,n){return e[t]=Ra[n],e}),{}));var Ba=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.base,i=n.byUserId,o=n.byParticipantId;t(this,e),this.base=r,this.byUserId=i,this.byParticipantId=o}return o(e,[{key:\"clone\",value:function(){var t=new e;if(this.base instanceof Ua?t.base=this.base.clone():t.base=this.base,void 0!==this.byUserId)for(var n in t.byUserId={},this.byUserId){var r=this.byUserId[n];t.byUserId[n]=r instanceof Ua?r.clone():r}if(void 0!==this.byParticipantId)for(var i in t.byParticipantId={},this.byParticipantId){var o=this.byParticipantId[i];t.byParticipantId[i]=o instanceof Ua?o.clone():o}return t}},{key:\"toJSONObject\",value:function(){var e={};if(\"boolean\"==typeof this.base?e.base=this.base:this.base instanceof Ua&&(e.base=this.base.toJSONObject()),void 0!==this.byUserId)for(var t in e.byUserId={},this.byUserId){var n=this.byUserId[t];e.byUserId[t]=n instanceof Ua?n.toJSONObject():n}if(void 0!==this.byParticipantId)for(var r in e.byParticipantId={},this.byParticipantId){var i=this.byParticipantId[r];e.byParticipantId[r]=i instanceof Ua?i.toJSONObject():i}return e}},{key:\"toMinifiedJSONObject\",value:function(){var e={};if(void 0!==this.base&&(\"boolean\"==typeof this.base?e.b=this.base:e.b=this.base.toMinifiedJSONObject()),void 0!==this.byUserId)for(var t in e.u={},this.byUserId){var n=this.byUserId[t];e.u[t]=\"boolean\"==typeof n?n:n.toMinifiedJSONObject()}if(void 0!==this.byParticipantId)for(var r in e.p={},this.byParticipantId){var i=this.byParticipantId[r];e.p[r]=\"boolean\"==typeof i?i:i.toMinifiedJSONObject()}return e}},{key:\"normalize\",value:function(){return this.base instanceof Ua&&(this.base=this.base.normalize()),this.byUserId&&(this.byUserId=Object.fromEntries(Object.entries(this.byUserId).map((function(e){var t=f(e,2),n=t[0],r=t[1];return[n,r instanceof Ua?r.normalize():r]})))),this.byParticipantId&&(this.byParticipantId=Object.fromEntries(Object.entries(this.byParticipantId).map((function(e){var t=f(e,2),n=t[0],r=t[1];return[n,r instanceof Ua?r.normalize():r]})))),this}}],[{key:\"fromJSONObject\",value:function(t){var n,r,i;if(void 0!==t.base&&(n=\"boolean\"==typeof t.base?t.base:Ua.fromJSONObject(t.base)),void 0!==t.byUserId)for(var o in r={},t.byUserId){var s=t.byUserId[o];r[o]=\"boolean\"==typeof s?s:Ua.fromJSONObject(s)}if(void 0!==t.byParticipantId)for(var a in i={},t.byParticipantId){var c=t.byParticipantId[a];i[a]=\"boolean\"==typeof c?c:Ua.fromJSONObject(c)}return new e({base:n,byUserId:r,byParticipantId:i})}},{key:\"fromMinifiedJSONObject\",value:function(t){var n,r,i;if(void 0!==t.b&&(n=\"boolean\"==typeof t.b?t.b:Ua.fromMinifiedJSONObject(t.b)),void 0!==t.u)for(var o in r={},t.u){var s=t.u[o];r[o]=\"boolean\"==typeof s?s:Ua.fromMinifiedJSONObject(s)}if(void 0!==t.p)for(var a in i={},t.p){var c=t.p[a];i[a]=\"boolean\"==typeof c?c:Ua.fromMinifiedJSONObject(c)}return new e({base:n,byUserId:r,byParticipantId:i})}},{key:\"validateJSONObject\",value:function(e){if(\"object\"!==n(e))return[!1,\"canReceive must be an object\"];for(var t=[\"base\",\"byUserId\",\"byParticipantId\"],r=0,i=Object.keys(e);r<i.length;r++){var o=i[r];if(!t.includes(o))return[!1,\"canReceive can only contain keys (\".concat(t.join(\", \"),\")\")];if(\"base\"===o){var s=f(Ua.validateJSONObject(e.base,!0),2),a=s[0],c=s[1];if(!a)return[!1,c]}else{if(\"object\"!==n(e[o]))return[!1,\"invalid (non-object) value for field '\".concat(o,\"' in canReceive\")];for(var l=0,u=Object.values(e[o]);l<u.length;l++){var d=u[l],h=f(Ua.validateJSONObject(d),2),p=h[0],v=h[1];if(!p)return[!1,v]}}}return[!0]}}])}(),Ua=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.video,i=n.audio,o=n.screenVideo,s=n.screenAudio,a=n.customVideo,c=n.customAudio;t(this,e),this.video=r,this.audio=i,this.screenVideo=o,this.screenAudio=s,this.customVideo=a,this.customAudio=c}return o(e,[{key:\"clone\",value:function(){var t=new e;return void 0!==this.video&&(t.video=this.video),void 0!==this.audio&&(t.audio=this.audio),void 0!==this.screenVideo&&(t.screenVideo=this.screenVideo),void 0!==this.screenAudio&&(t.screenAudio=this.screenAudio),void 0!==this.customVideo&&(t.customVideo=ja({},this.customVideo)),void 0!==this.customAudio&&(t.customAudio=ja({},this.customAudio)),t}},{key:\"toJSONObject\",value:function(){var e={};return void 0!==this.video&&(e.video=this.video),void 0!==this.audio&&(e.audio=this.audio),void 0!==this.screenVideo&&(e.screenVideo=this.screenVideo),void 0!==this.screenAudio&&(e.screenAudio=this.screenAudio),void 0!==this.customVideo&&(e.customVideo=ja({},this.customVideo)),void 0!==this.customAudio&&(e.customAudio=ja({},this.customAudio)),e}},{key:\"toMinifiedJSONObject\",value:function(){var e={};return void 0!==this.video&&(e.v=this.video),void 0!==this.audio&&(e.a=this.audio),void 0!==this.screenVideo&&(e.sv=this.screenVideo),void 0!==this.screenAudio&&(e.sa=this.screenAudio),void 0!==this.customVideo&&(e.cv=ja({},this.customVideo)),void 0!==this.customAudio&&(e.ca=ja({},this.customAudio)),e}},{key:\"normalize\",value:function(){function e(e,t){return e&&1===Object.keys(e).length&&e[\"*\"]===t}return!(!0!==this.video||!0!==this.audio||!0!==this.screenVideo||!0!==this.screenAudio||!e(this.customVideo,!0)||!e(this.customAudio,!0))||(!1!==this.video||!1!==this.audio||!1!==this.screenVideo||!1!==this.screenAudio||!e(this.customVideo,!1)||!e(this.customAudio,!1))&&this}}],[{key:\"fromBoolean\",value:function(t){return new e({video:t,audio:t,screenVideo:t,screenAudio:t,customVideo:{\"*\":t},customAudio:{\"*\":t}})}},{key:\"fromJSONObject\",value:function(t){return new e({video:t.video,audio:t.audio,screenVideo:t.screenVideo,screenAudio:t.screenAudio,customVideo:void 0!==t.customVideo?ja({},t.customVideo):void 0,customAudio:void 0!==t.customAudio?ja({},t.customAudio):void 0})}},{key:\"fromMinifiedJSONObject\",value:function(t){return new e({video:t.v,audio:t.a,screenVideo:t.sv,screenAudio:t.sa,customVideo:t.cv,customAudio:t.ca})}},{key:\"validateJSONObject\",value:function(e,t){if(\"boolean\"==typeof e)return[!0];if(\"object\"!==n(e))return[!1,\"invalid (non-object, non-boolean) value in canReceive\"];for(var r=Object.keys(e),i=0,o=r;i<o.length;i++){var s=o[i];if(!La.includes(s))return[!1,\"invalid media type '\".concat(s,\"' in canReceive\")];if(Na.includes(s)){if(\"boolean\"!=typeof e[s])return[!1,\"invalid (non-boolean) value for media type '\".concat(s,\"' in canReceive\")]}else{if(\"object\"!==n(e[s]))return[!1,\"invalid (non-object) value for media type '\".concat(s,\"' in canReceive\")];for(var a=0,c=Object.values(e[s]);a<c.length;a++){if(\"boolean\"!=typeof c[a])return[!1,\"invalid (non-boolean) value for entry within '\".concat(s,\"' in canReceive\")]}if(t&&void 0===e[s][\"*\"])return[!1,'canReceive \"base\" permission must specify \"*\" as an entry within \\''.concat(s,\"'\")]}}return t&&r.length!==La.length?[!1,'canReceive \"base\" permission must specify all media types: '.concat(La.join(\", \"),\" (or be set to a boolean shorthand)\")]:[!0]}}])}(),Va=[\"result\"],Ja=[\"preserveIframe\"];function $a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function qa(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$a(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function za(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(za=function(){return!!e})()}function Wa(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if(\"string\"==typeof e)return Ha(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ha(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,o=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}function Ha(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Ga={};var Qa=\"video\",Ka=\"voice\",Ya=ys()?{data:{}}:{data:{},topology:\"none\"},Xa={present:0,hidden:0},Za={maxBitrate:{min:1e5,max:25e5},maxFramerate:{min:1,max:30},scaleResolutionDownBy:{min:1,max:8}},ec=Object.keys(Za),tc=[\"state\",\"volume\",\"simulcastEncodings\"],nc={androidInCallNotification:{title:\"string\",subtitle:\"string\",iconName:\"string\",disableForCustomOverride:\"boolean\"},disableAutoDeviceManagement:{audio:\"boolean\",video:\"boolean\"}},rc={id:{iconPath:\"string\",iconPathDarkMode:\"string\",label:\"string\",tooltip:\"string\",visualState:\"'default' | 'sidebar-open' | 'active'\"}},ic={id:{allow:\"string\",controlledBy:\"'*' | 'owners' | string[]\",csp:\"string\",iconURL:\"string\",label:\"string\",loading:\"'eager' | 'lazy'\",location:\"'main' | 'sidebar'\",name:\"string\",referrerPolicy:\"string\",sandbox:\"string\",src:\"string\",srcdoc:\"string\",shared:\"string[] | 'owners' | boolean\"}},oc={customIntegrations:{validate:Pc,help:Tc()},customTrayButtons:{validate:Oc,help:\"customTrayButtons should be a dictionary of the type \".concat(JSON.stringify(rc))},url:{validate:function(e){return\"string\"==typeof e},help:\"url should be a string\"},baseUrl:{validate:function(e){return\"string\"==typeof e},help:\"baseUrl should be a string\"},token:{validate:function(e){return\"string\"==typeof e},help:\"token should be a string\",queryString:\"t\"},dailyConfig:{validate:function(e,t){try{return t.validateDailyConfig(e),!0}catch(e){console.error(\"Failed to validate dailyConfig\",e)}return!1},help:\"Unsupported dailyConfig. Check error logs for detailed info.\"},reactNativeConfig:{validate:function(e){return Ac(e,nc)},help:\"reactNativeConfig should look like \".concat(JSON.stringify(nc),\", all fields optional\")},lang:{validate:function(e){return[\"da\",\"de\",\"en-us\",\"en\",\"es\",\"fi\",\"fr\",\"it\",\"jp\",\"ka\",\"nl\",\"no\",\"pl\",\"pt\",\"pt-BR\",\"ru\",\"sv\",\"tr\",\"user\"].includes(e)},help:\"language not supported. Options are: da, de, en-us, en, es, fi, fr, it, jp, ka, nl, no, pl, pt, pt-BR, ru, sv, tr, user\"},userName:!0,userData:{validate:function(e){try{return yc(e),!0}catch(e){return console.error(e),!1}},help:\"invalid userData type provided\"},startVideoOff:!0,startAudioOff:!0,allowLocalVideo:!0,allowLocalAudio:!0,activeSpeakerMode:!0,showLeaveButton:!0,showLocalVideo:!0,showParticipantsBar:!0,showFullscreenButton:!0,showUserNameChangeUI:!0,iframeStyle:!0,customLayout:!0,cssFile:!0,cssText:!0,bodyClass:!0,videoSource:{validate:function(e,t){if(\"boolean\"==typeof e)return t._preloadCache.allowLocalVideo=e,!0;var n;if(e instanceof MediaStreamTrack)t._sharedTracks.videoTrack=e,n={customTrack:ls};else{if(delete t._sharedTracks.videoTrack,\"string\"!=typeof e)return console.error(\"videoSource must be a MediaStreamTrack, boolean, or a string\"),!1;n={deviceId:e}}return t._updatePreloadCacheInputSettings({video:{settings:n}},!1),!0}},audioSource:{validate:function(e,t){if(\"boolean\"==typeof e)return t._preloadCache.allowLocalAudio=e,!0;var n;if(e instanceof MediaStreamTrack)t._sharedTracks.audioTrack=e,n={customTrack:ls};else{if(delete t._sharedTracks.audioTrack,\"string\"!=typeof e)return console.error(\"audioSource must be a MediaStreamTrack, boolean, or a string\"),!1;n={deviceId:e}}return t._updatePreloadCacheInputSettings({audio:{settings:n}},!1),!0}},subscribeToTracksAutomatically:{validate:function(e,t){return t._preloadCache.subscribeToTracksAutomatically=e,!0}},theme:{validate:function(e){var t=[\"accent\",\"accentText\",\"background\",\"backgroundAccent\",\"baseText\",\"border\",\"mainAreaBg\",\"mainAreaBgAccent\",\"mainAreaText\",\"supportiveText\"],r=function(e){for(var n=0,r=Object.keys(e);n<r.length;n++){var i=r[n];if(!t.includes(i))return console.error('unsupported color \"'.concat(i,'\". Valid colors: ').concat(t.join(\", \"))),!1;if(!e[i].match(/^#[0-9a-f]{6}|#[0-9a-f]{3}$/i))return console.error(\"\".concat(i,' theme color should be provided in valid hex color format. Received: \"').concat(e[i],'\"')),!1}return!0};return\"object\"===n(e)&&(\"light\"in e&&\"dark\"in e||\"colors\"in e)?\"light\"in e&&\"dark\"in e?\"colors\"in e.light?\"colors\"in e.dark?r(e.light.colors)&&r(e.dark.colors):(console.error('Dark theme is missing \"colors\" property.',e),!1):(console.error('Light theme is missing \"colors\" property.',e),!1):r(e.colors):(console.error('Theme must contain either both \"light\" and \"dark\" properties, or \"colors\".',e),!1)},help:\"unsupported theme configuration. Check error logs for detailed info.\"},layoutConfig:{validate:function(e){if(\"grid\"in e){var t=e.grid;if(\"maxTilesPerPage\"in t){if(!Number.isInteger(t.maxTilesPerPage))return console.error(\"grid.maxTilesPerPage should be an integer. You passed \".concat(t.maxTilesPerPage,\".\")),!1;if(t.maxTilesPerPage>49)return console.error(\"grid.maxTilesPerPage can't be larger than 49 without sacrificing browser performance. Please contact us at https://www.daily.co/contact to talk about your use case.\"),!1}if(\"minTilesPerPage\"in t){if(!Number.isInteger(t.minTilesPerPage))return console.error(\"grid.minTilesPerPage should be an integer. You passed \".concat(t.minTilesPerPage,\".\")),!1;if(t.minTilesPerPage<1)return console.error(\"grid.minTilesPerPage can't be lower than 1.\"),!1;if(\"maxTilesPerPage\"in t&&t.minTilesPerPage>t.maxTilesPerPage)return console.error(\"grid.minTilesPerPage can't be higher than grid.maxTilesPerPage.\"),!1}}return!0},help:\"unsupported layoutConfig. Check error logs for detailed info.\"},receiveSettings:{validate:function(e){return bc(e,{allowAllParticipantsKey:!1})},help:Ec({allowAllParticipantsKey:!1})},sendSettings:{validate:function(e,t){return!!function(e,t){try{return t.validateUpdateSendSettings(e),!0}catch(e){return console.error(\"Failed to validate send settings\",e),!1}}(e,t)&&(t._preloadCache.sendSettings=e,!0)},help:\"Invalid sendSettings provided. Check error logs for detailed info.\"},inputSettings:{validate:function(e,t){var n;return!!_c(e)&&(t._inputSettings||(t._inputSettings={}),wc(e,null===(n=t.properties)||void 0===n?void 0:n.dailyConfig,t._sharedTracks),t._updatePreloadCacheInputSettings(e,!0),!0)},help:Cc()},layout:{validate:function(e){return\"custom-v1\"===e||\"browser\"===e||\"none\"===e},help:'layout may only be set to \"custom-v1\"',queryString:\"layout\"},emb:{queryString:\"emb\"},embHref:{queryString:\"embHref\"},dailyJsVersion:{queryString:\"dailyJsVersion\"},proxy:{queryString:\"proxy\"},strictMode:!0,allowMultipleCallInstances:!0},sc={styles:{validate:function(e){for(var t in e)if(\"cam\"!==t&&\"screen\"!==t)return!1;if(e.cam)for(var n in e.cam)if(\"div\"!==n&&\"video\"!==n)return!1;if(e.screen)for(var r in e.screen)if(\"div\"!==r&&\"video\"!==r)return!1;return!0},help:\"styles format should be a subset of: { cam: {div: {}, video: {}}, screen: {div: {}, video: {}} }\"},setSubscribedTracks:{validate:function(e,t){if(t._preloadCache.subscribeToTracksAutomatically)return!1;var n=[!0,!1,\"staged\"];if(n.includes(e)||!ys()&&\"avatar\"===e)return!0;var r=[\"audio\",\"video\",\"screenAudio\",\"screenVideo\",\"rmpAudio\",\"rmpVideo\"],i=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(var o in e)if(\"custom\"===o){if(!n.includes(e[o])&&!i(e[o],!0))return!1}else{var s=!t&&!r.includes(o),a=!n.includes(e[o]);if(s||a)return!1}return!0};return i(e)},help:\"setSubscribedTracks cannot be used when setSubscribeToTracksAutomatically is enabled, and should be of the form: \"+\"true\".concat(ys()?\"\":\" | 'avatar'\",\" | false | 'staged' | { [audio: true|false|'staged'], [video: true|false|'staged'], [screenAudio: true|false|'staged'], [screenVideo: true|false|'staged'] }\")},setAudio:!0,setVideo:!0,setScreenShare:{validate:function(e){return!1===e},help:\"setScreenShare must be false, as it's only meant for stopping remote participants' screen shares\"},eject:!0,updatePermissions:{validate:function(e){for(var t=0,n=Object.entries(e);t<n.length;t++){var r=f(n[t],2),i=r[0],o=r[1];switch(i){case\"hasPresence\":if(\"boolean\"!=typeof o)return!1;break;case\"canSend\":if(o instanceof Set||o instanceof Array||Array.isArray(o)){var s,a=[\"video\",\"audio\",\"screenVideo\",\"screenAudio\",\"customVideo\",\"customAudio\"],c=Wa(o);try{for(c.s();!(s=c.n()).done;){var l=s.value;if(!a.includes(l))return!1}}catch(e){c.e(e)}finally{c.f()}}else if(\"boolean\"!=typeof o)return!1;(o instanceof Array||Array.isArray(o))&&(e.canSend=new Set(o));break;case\"canReceive\":var u=f(Ba.validateJSONObject(o),2),d=u[0],h=u[1];if(!d)return console.error(h),!1;break;case\"canAdmin\":if(o instanceof Set||o instanceof Array||Array.isArray(o)){var p,v=[\"participants\",\"streaming\",\"transcription\"],g=Wa(o);try{for(g.s();!(p=g.n()).done;){var m=p.value;if(!v.includes(m))return!1}}catch(e){g.e(e)}finally{g.f()}}else if(\"boolean\"!=typeof o)return!1;(o instanceof Array||Array.isArray(o))&&(e.canAdmin=new Set(o));break;default:return!1}}return!0},help:\"updatePermissions can take hasPresence, canSend, canReceive, and canAdmin permissions. hasPresence must be a boolean. canSend can be a boolean or an Array or Set of media types (video, audio, screenVideo, screenAudio, customVideo, customAudio). canReceive must be an object specifying base, byUserId, and/or byParticipantId fields (see documentation for more details). canAdmin can be a boolean or an Array or Set of admin types (participants, streaming, transcription).\"}};Promise.any||(Promise.any=function(){var e=h((function*(e){return new Promise((function(t,n){var r=[];e.forEach((function(i){return Promise.resolve(i).then((function(e){t(e)})).catch((function(t){r.push(t),r.length===e.length&&n(r)}))}))}))}));return function(t){return e.apply(this,arguments)}}());var ac=function(){function r(e){var n,i,o,c,l,d,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(t(this,r),o=this,c=a(c=r),u(i=s(o,za()?Reflect.construct(c,l||[],a(o).constructor):c.apply(o,l)),\"startListeningForDeviceChanges\",(function(){Ca(i.handleDeviceChange)})),u(i,\"stopListeningForDeviceChanges\",(function(){Ea(i.handleDeviceChange)})),u(i,\"handleDeviceChange\",(function(e){e=e.map((function(e){return JSON.parse(JSON.stringify(e))})),i.emitDailyJSEvent({action:\"available-devices-updated\",availableDevices:e})})),u(i,\"handleNativeAppStateChange\",function(){var e=h((function*(e){if(\"destroyed\"===e)return console.warn(\"App has been destroyed before leaving the meeting. Cleaning up all the resources!\"),void(yield i.destroy());var t=\"active\"===e;i.disableReactNativeAutoDeviceManagement(\"video\")||(t?i.camUnmutedBeforeLosingNativeActiveState&&i.setLocalVideo(!0):(i.camUnmutedBeforeLosingNativeActiveState=i.localVideo(),i.camUnmutedBeforeLosingNativeActiveState&&i.setLocalVideo(!1)))}));return function(t){return e.apply(this,arguments)}}()),u(i,\"handleNativeAudioFocusChange\",(function(e){i.disableReactNativeAutoDeviceManagement(\"audio\")||(i._hasNativeAudioFocus=e,i.toggleParticipantAudioBasedOnNativeAudioFocus(),i._hasNativeAudioFocus?i.micUnmutedBeforeLosingNativeAudioFocus&&i.setLocalAudio(!0):(i.micUnmutedBeforeLosingNativeAudioFocus=i.localAudio(),i.setLocalAudio(!1)))})),u(i,\"handleNativeSystemScreenCaptureStop\",(function(){i.stopScreenShare()})),i.strictMode=void 0===p.strictMode||p.strictMode,i.allowMultipleCallInstances=null!==(n=p.allowMultipleCallInstances)&&void 0!==n&&n,Object.keys(Ga).length&&(i._logDuplicateInstanceAttempt(),!i.allowMultipleCallInstances)){if(i.strictMode)throw new Error(\"Duplicate DailyIframe instances are not allowed\");console.warn(\"Using strictMode: false to allow multiple call instances is now deprecated. Set `allowMultipleCallInstances: true`\")}if(window._daily||(window._daily={pendings:[],instances:{}}),i.callClientId=K(),Ga[(d=i).callClientId]=d,window._daily.instances[i.callClientId]={},i._sharedTracks={},window._daily.instances[i.callClientId].tracks=i._sharedTracks,p.dailyJsVersion=r.version(),i._iframe=e,i._callObjectMode=\"none\"===p.layout&&!i._iframe,i._preloadCache={subscribeToTracksAutomatically:!0,outputDeviceId:null,inputSettings:null,sendSettings:null,videoTrackForNetworkConnectivityTest:null,videoTrackForConnectionQualityTest:null},void 0!==p.showLocalVideo?i._callObjectMode?console.error(\"showLocalVideo is not available in call object mode\"):i._showLocalVideo=!!p.showLocalVideo:i._showLocalVideo=!0,void 0!==p.showParticipantsBar?i._callObjectMode?console.error(\"showParticipantsBar is not available in call object mode\"):i._showParticipantsBar=!!p.showParticipantsBar:i._showParticipantsBar=!0,void 0!==p.customIntegrations?i._callObjectMode?console.error(\"customIntegrations is not available in call object mode\"):i._customIntegrations=p.customIntegrations:i._customIntegrations={},void 0!==p.customTrayButtons?i._callObjectMode?console.error(\"customTrayButtons is not available in call object mode\"):i._customTrayButtons=p.customTrayButtons:i._customTrayButtons={},void 0!==p.activeSpeakerMode?i._callObjectMode?console.error(\"activeSpeakerMode is not available in call object mode\"):i._activeSpeakerMode=!!p.activeSpeakerMode:i._activeSpeakerMode=!1,p.receiveSettings?i._callObjectMode?i._receiveSettings=p.receiveSettings:console.error(\"receiveSettings is only available in call object mode\"):i._receiveSettings={},i.validateProperties(p),i.properties=qa({},p),i._inputSettings||(i._inputSettings={}),i._callObjectLoader=i._callObjectMode?new ea(i.callClientId):null,i._callState=vi,i._isPreparingToJoin=!1,i._accessState={access:Oi},i._meetingSessionSummary={},i._finalSummaryOfPrevSession={},i._meetingSessionState=Lc(Ya,i._callObjectMode),i._nativeInCallAudioMode=Qa,i._participants={},i._isScreenSharing=!1,i._participantCounts=Xa,i._rmpPlayerState={},i._waitingParticipants={},i._network={threshold:\"good\",quality:100,networkState:\"unknown\",stats:{}},i._activeSpeaker={},i._localAudioLevel=0,i._isLocalAudioLevelObserverRunning=!1,i._remoteParticipantsAudioLevel={},i._isRemoteParticipantsAudioLevelObserverRunning=!1,i._maxAppMessageSize=rs,i._messageChannel=ys()?new zs:new Js,i._iframe&&(i._iframe.requestFullscreen?i._iframe.addEventListener(\"fullscreenchange\",(function(){document.fullscreenElement===i._iframe?(i.emitDailyJSEvent({action:Wo}),i.sendMessageToCallMachine({action:Wo})):(i.emitDailyJSEvent({action:Ho}),i.sendMessageToCallMachine({action:Ho}))})):i._iframe.webkitRequestFullscreen&&i._iframe.addEventListener(\"webkitfullscreenchange\",(function(){document.webkitFullscreenElement===i._iframe?(i.emitDailyJSEvent({action:Wo}),i.sendMessageToCallMachine({action:Wo})):(i.emitDailyJSEvent({action:Ho}),i.sendMessageToCallMachine({action:Ho}))}))),ys()){var f=i.nativeUtils();f.addAudioFocusChangeListener&&f.removeAudioFocusChangeListener&&f.addAppStateChangeListener&&f.removeAppStateChangeListener&&f.addSystemScreenCaptureStopListener&&f.removeSystemScreenCaptureStopListener||console.warn(\"expected (add|remove)(AudioFocusChange|AppActiveStateChange|SystemScreenCaptureStop)Listener to be available in React Native\"),i._hasNativeAudioFocus=!0,f.addAudioFocusChangeListener(i.handleNativeAudioFocusChange),f.addAppStateChangeListener(i.handleNativeAppStateChange),f.addSystemScreenCaptureStopListener(i.handleNativeSystemScreenCaptureStop)}return i._callObjectMode&&i.startListeningForDeviceChanges(),i._messageChannel.addListenerForMessagesFromCallMachine(i.handleMessageFromCallMachine,i.callClientId,i),i}return l(r,x),o(r,[{key:\"destroy\",value:(ee=h((function*(){var e;try{yield this.leave()}catch(e){}var t=this._iframe;if(t){var n=t.parentElement;n&&n.removeChild(t)}if(this._messageChannel.removeListener(this.handleMessageFromCallMachine),ys()){var r=this.nativeUtils();r.removeAudioFocusChangeListener(this.handleNativeAudioFocusChange),r.removeAppStateChangeListener(this.handleNativeAppStateChange),r.removeSystemScreenCaptureStopListener(this.handleNativeSystemScreenCaptureStop)}this._callObjectMode&&this.stopListeningForDeviceChanges(),this.resetMeetingDependentVars(),this._destroyed=!0,this.emitDailyJSEvent({action:\"call-instance-destroyed\"}),delete Ga[this.callClientId],(null===(e=window)||void 0===e||null===(e=e._daily)||void 0===e?void 0:e.instances)&&delete window._daily.instances[this.callClientId],this.strictMode&&(this.callClientId=void 0)})),function(){return ee.apply(this,arguments)})},{key:\"isDestroyed\",value:function(){return!!this._destroyed}},{key:\"loadCss\",value:function(e){var t=e.bodyClass,n=e.cssFile,r=e.cssText;return gc(),this.sendMessageToCallMachine({action:\"load-css\",cssFile:this.absoluteUrl(n),bodyClass:t,cssText:r}),this}},{key:\"iframe\",value:function(){return gc(),this._iframe}},{key:\"meetingState\",value:function(){return this._callState}},{key:\"accessState\",value:function(){return fc(this._callObjectMode,\"accessState()\"),this._accessState}},{key:\"participants\",value:function(){return this._participants}},{key:\"participantCounts\",value:function(){return this._participantCounts}},{key:\"waitingParticipants\",value:function(){return fc(this._callObjectMode,\"waitingParticipants()\"),this._waitingParticipants}},{key:\"validateParticipantProperties\",value:function(e,t){for(var n in t){if(!sc[n])throw new Error(\"unrecognized updateParticipant property \".concat(n));if(sc[n].validate&&!sc[n].validate(t[n],this,this._participants[e]))throw new Error(sc[n].help)}}},{key:\"updateParticipant\",value:function(e,t){return this._participants.local&&this._participants.local.session_id===e&&(e=\"local\"),e&&t&&(this.validateParticipantProperties(e,t),this.sendMessageToCallMachine({action:\"update-participant\",id:e,properties:t})),this}},{key:\"updateParticipants\",value:function(e){var t=this._participants.local&&this._participants.local.session_id;for(var n in e)n===t&&(n=\"local\"),n&&e[n]&&this.validateParticipantProperties(n,e[n]);return this.sendMessageToCallMachine({action:\"update-participants\",participants:e}),this}},{key:\"updateWaitingParticipant\",value:(Y=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(fc(this._callObjectMode,\"updateWaitingParticipant()\"),lc(this._callState,\"updateWaitingParticipant()\"),\"string\"!=typeof t||\"object\"!==n(r))throw new Error(\"updateWaitingParticipant() must take an id string and a updates object\");return new Promise((function(n,i){e.sendMessageToCallMachine({action:\"daily-method-update-waiting-participant\",id:t,updates:r},(function(e){e.error&&i(e.error),e.id||i(new Error(\"unknown error in updateWaitingParticipant()\")),n({id:e.id})}))}))})),function(){return Y.apply(this,arguments)})},{key:\"updateWaitingParticipants\",value:(G=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(fc(this._callObjectMode,\"updateWaitingParticipants()\"),lc(this._callState,\"updateWaitingParticipants()\"),\"object\"!==n(t))throw new Error(\"updateWaitingParticipants() must take a mapping between ids and update objects\");return new Promise((function(n,r){e.sendMessageToCallMachine({action:\"daily-method-update-waiting-participants\",updatesById:t},(function(e){e.error&&r(e.error),e.ids||r(new Error(\"unknown error in updateWaitingParticipants()\")),n({ids:e.ids})}))}))})),function(){return G.apply(this,arguments)})},{key:\"requestAccess\",value:(H=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.access,r=void 0===n?{level:Pi}:n,i=t.name,o=void 0===i?\"\":i;return fc(this._callObjectMode,\"requestAccess()\"),lc(this._callState,\"requestAccess()\"),new Promise((function(t,n){e.sendMessageToCallMachine({action:\"daily-method-request-access\",access:r,name:o},(function(e){e.error&&n(e.error),e.access||n(new Error(\"unknown error in requestAccess()\")),t({access:e.access,granted:e.granted})}))}))})),function(){return H.apply(this,arguments)})},{key:\"localAudio\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.audio.state):null}},{key:\"localVideo\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.video.state):null}},{key:\"setLocalAudio\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"forceDiscardTrack\"in t&&(ys()?(console.warn(\"forceDiscardTrack option not supported in React Native; ignoring\"),t={}):e&&(console.warn(\"forceDiscardTrack option only supported when calling setLocalAudio(false); ignoring\"),t={})),this.sendMessageToCallMachine({action:\"local-audio\",state:e,options:t}),this}},{key:\"localScreenAudio\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.screenAudio.state):null}},{key:\"localScreenVideo\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.screenVideo.state):null}},{key:\"updateScreenShare\",value:function(e){if(this._isScreenSharing)return this.sendMessageToCallMachine({action:\"local-screen-update\",options:e}),this;console.warn(\"There is no screen share in progress. Try calling startScreenShare first.\")}},{key:\"setLocalVideo\",value:function(e){return this.sendMessageToCallMachine({action:\"local-video\",state:e}),this}},{key:\"_setAllowLocalAudio\",value:function(e){if(this._preloadCache.allowLocalAudio=e,this._callMachineInitialized)return this.sendMessageToCallMachine({action:\"set-allow-local-audio\",state:e}),this}},{key:\"_setAllowLocalVideo\",value:function(e){if(this._preloadCache.allowLocalVideo=e,this._callMachineInitialized)return this.sendMessageToCallMachine({action:\"set-allow-local-video\",state:e}),this}},{key:\"getReceiveSettings\",value:(W=h((function*(e){var t=this,r=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).showInheritedValues,i=void 0!==r&&r;if(fc(this._callObjectMode,\"getReceiveSettings()\"),!this._callMachineInitialized)return this._receiveSettings;switch(n(e)){case\"string\":return new Promise((function(n){t.sendMessageToCallMachine({action:\"get-single-participant-receive-settings\",id:e,showInheritedValues:i},(function(e){n(e.receiveSettings)}))}));case\"undefined\":return this._receiveSettings;default:throw new Error('first argument to getReceiveSettings() must be a participant id (or \"base\"), or there should be no arguments')}})),function(e){return W.apply(this,arguments)})},{key:\"updateReceiveSettings\",value:(z=h((function*(e){var t=this;if(fc(this._callObjectMode,\"updateReceiveSettings()\"),!bc(e,{allowAllParticipantsKey:!0}))throw new Error(Ec({allowAllParticipantsKey:!0}));return lc(this._callState,\"updateReceiveSettings()\",\"To specify receive settings earlier, use the receiveSettings config property.\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"update-receive-settings\",receiveSettings:e},(function(e){n({receiveSettings:e.receiveSettings})}))}))})),function(e){return z.apply(this,arguments)})},{key:\"_prepInputSettingsForSharing\",value:function(e,t){if(e){var n={};if(e.audio){var r,i,o;e.audio.settings&&(!Object.keys(e.audio.settings).length&&t||(n.audio={settings:qa({},e.audio.settings)})),t&&null!==(r=n.audio)&&void 0!==r&&null!==(r=r.settings)&&void 0!==r&&r.customTrack&&(n.audio.settings={customTrack:this._sharedTracks.audioTrack});var s=\"none\"===(null===(i=e.audio.processor)||void 0===i?void 0:i.type)&&(null===(o=e.audio.processor)||void 0===o?void 0:o._isDefaultWhenNone);if(e.audio.processor&&!s){var a=qa({},e.audio.processor);delete a._isDefaultWhenNone,n.audio=qa(qa({},n.audio),{},{processor:a})}}if(e.video){var c,l,u;e.video.settings&&(!Object.keys(e.video.settings).length&&t||(n.video={settings:qa({},e.video.settings)})),t&&null!==(c=n.video)&&void 0!==c&&null!==(c=c.settings)&&void 0!==c&&c.customTrack&&(n.video.settings={customTrack:this._sharedTracks.videoTrack});var d=\"none\"===(null===(l=e.video.processor)||void 0===l?void 0:l.type)&&(null===(u=e.video.processor)||void 0===u?void 0:u._isDefaultWhenNone);if(e.video.processor&&!d){var h=qa({},e.video.processor);delete h._isDefaultWhenNone,n.video=qa(qa({},n.video),{},{processor:h})}}return n}}},{key:\"getInputSettings\",value:function(){var e=this;return gc(),new Promise((function(t){t(e._getInputSettings())}))}},{key:\"_getInputSettings\",value:function(){var e,t,n,r,i,o,s={processor:{type:\"none\",_isDefaultWhenNone:!0}};this._inputSettings?(e=(null===(n=this._inputSettings)||void 0===n?void 0:n.video)||s,t=(null===(r=this._inputSettings)||void 0===r?void 0:r.audio)||s):(e=(null===(i=this._preloadCache)||void 0===i||null===(i=i.inputSettings)||void 0===i?void 0:i.video)||s,t=(null===(o=this._preloadCache)||void 0===o||null===(o=o.inputSettings)||void 0===o?void 0:o.audio)||s);var a={audio:t,video:e};return this._prepInputSettingsForSharing(a,!0)}},{key:\"_updatePreloadCacheInputSettings\",value:function(e,t){var n=this._inputSettings||{},r={};if(e.video){var i,o,s;if(r.video={},e.video.settings)r.video.settings={},t||e.video.settings.customTrack||null===(s=n.video)||void 0===s||!s.settings?r.video.settings=e.video.settings:r.video.settings=qa(qa({},n.video.settings),e.video.settings),Object.keys(r.video.settings).length||delete r.video.settings;else null!==(i=n.video)&&void 0!==i&&i.settings&&(r.video.settings=n.video.settings);e.video.processor?r.video.processor=e.video.processor:null!==(o=n.video)&&void 0!==o&&o.processor&&(r.video.processor=n.video.processor)}else n.video&&(r.video=n.video);if(e.audio){var a,c,l;if(r.audio={},e.audio.settings)r.audio.settings={},t||e.audio.settings.customTrack||null===(l=n.audio)||void 0===l||!l.settings?r.audio.settings=e.audio.settings:r.audio.settings=qa(qa({},n.audio.settings),e.audio.settings),Object.keys(r.audio.settings).length||delete r.audio.settings;else null!==(a=n.audio)&&void 0!==a&&a.settings&&(r.audio.settings=n.audio.settings);e.audio.processor?r.audio.processor=e.audio.processor:null!==(c=n.audio)&&void 0!==c&&c.processor&&(r.audio.processor=n.audio.processor)}else n.audio&&(r.audio=n.audio);this._maybeUpdateInputSettings(r)}},{key:\"_devicesFromInputSettings\",value:function(e){var t,n,r=(null==e||null===(t=e.video)||void 0===t||null===(t=t.settings)||void 0===t?void 0:t.deviceId)||null,i=(null==e||null===(n=e.audio)||void 0===n||null===(n=n.settings)||void 0===n?void 0:n.deviceId)||null,o=this._preloadCache.outputDeviceId||null;return{camera:r?{deviceId:r}:{},mic:i?{deviceId:i}:{},speaker:o?{deviceId:o}:{}}}},{key:\"updateInputSettings\",value:(q=h((function*(e){var t=this;return gc(),_c(e)?e.video||e.audio?(wc(e,this.properties.dailyConfig,this._sharedTracks),this._callObjectMode&&!this._callMachineInitialized?(this._updatePreloadCacheInputSettings(e,!0),this._getInputSettings()):new Promise((function(n,r){t.sendMessageToCallMachine({action:\"update-input-settings\",inputSettings:e},(function(i){if(i.error)r(i.error);else{if(i.returnPreloadCache)return t._updatePreloadCacheInputSettings(e,!0),void n(t._getInputSettings());t._maybeUpdateInputSettings(i.inputSettings),n(t._prepInputSettingsForSharing(i.inputSettings,!0))}}))}))):this._getInputSettings():(console.error(Cc()),Promise.reject(Cc()))})),function(e){return q.apply(this,arguments)})},{key:\"setBandwidth\",value:function(e){var t=e.kbs,n=e.trackConstraints;if(gc(),this._callMachineInitialized)return this.sendMessageToCallMachine({action:\"set-bandwidth\",kbs:t,trackConstraints:n}),this}},{key:\"getDailyLang\",value:function(){var e=this;if(gc(),this._callMachineInitialized)return new Promise((function(t){e.sendMessageToCallMachine({action:\"get-daily-lang\"},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))}},{key:\"setDailyLang\",value:function(e){return gc(),this.sendMessageToCallMachine({action:\"set-daily-lang\",lang:e}),this}},{key:\"setProxyUrl\",value:function(e){return this.sendMessageToCallMachine({action:\"set-proxy-url\",proxyUrl:e}),this}},{key:\"setIceConfig\",value:function(e){return this.sendMessageToCallMachine({action:\"set-ice-config\",iceConfig:e}),this}},{key:\"meetingSessionSummary\",value:function(){return[_i,wi].includes(this._callState)?this._finalSummaryOfPrevSession:this._meetingSessionSummary}},{key:\"getMeetingSession\",value:($=h((function*(){var e=this;return console.warn(\"getMeetingSession() is deprecated: use meetingSessionSummary(), which will return immediately\"),lc(this._callState,\"getMeetingSession()\"),new Promise((function(t){e.sendMessageToCallMachine({action:\"get-meeting-session\"},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))})),function(){return $.apply(this,arguments)})},{key:\"meetingSessionState\",value:function(){return lc(this._callState,\"meetingSessionState\"),this._meetingSessionState}},{key:\"setMeetingSessionData\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"replace\";fc(this._callObjectMode,\"setMeetingSessionData()\"),lc(this._callState,\"setMeetingSessionData\");try{!function(e,t){new Qs({data:e,mergeStrategy:t})}(e,t)}catch(e){throw console.error(e),e}try{this.sendMessageToCallMachine({action:\"set-session-data\",data:e,mergeStrategy:t})}catch(e){throw new Error(\"Error setting meeting session data: \".concat(e))}}},{key:\"setUserName\",value:function(e,t){var n=this;return this.properties.userName=e,new Promise((function(r){n.sendMessageToCallMachine({action:\"set-user-name\",name:null!=e?e:\"\",thisMeetingOnly:ys()||!!t&&!!t.thisMeetingOnly},(function(e){delete e.action,delete e.callbackStamp,r(e)}))}))}},{key:\"setUserData\",value:(J=h((function*(e){var t=this;try{yc(e)}catch(e){throw console.error(e),e}if(this.properties.userData=e,this._callMachineInitialized)return new Promise((function(n){try{t.sendMessageToCallMachine({action:\"set-user-data\",userData:e},(function(e){delete e.action,delete e.callbackStamp,n(e)}))}catch(e){throw new Error(\"Error setting user data: \".concat(e))}}))})),function(e){return J.apply(this,arguments)})},{key:\"validateAudioLevelInterval\",value:function(e){if(e&&(e<100||\"number\"!=typeof e))throw new Error(\"The interval must be a number greater than or equal to 100 milliseconds.\")}},{key:\"startLocalAudioLevelObserver\",value:function(e){var t=this;if(\"undefined\"==typeof AudioWorkletNode&&!ys())throw new Error(\"startLocalAudioLevelObserver() is not supported on this browser\");if(this.validateAudioLevelInterval(e),this._callMachineInitialized)return this._isLocalAudioLevelObserverRunning=!0,new Promise((function(n,r){t.sendMessageToCallMachine({action:\"start-local-audio-level-observer\",interval:e},(function(e){t._isLocalAudioLevelObserverRunning=!e.error,e.error?r({error:e.error}):n()}))}));this._preloadCache.localAudioLevelObserver={enabled:!0,interval:e}}},{key:\"isLocalAudioLevelObserverRunning\",value:function(){return this._isLocalAudioLevelObserverRunning}},{key:\"stopLocalAudioLevelObserver\",value:function(){this._preloadCache.localAudioLevelObserver=null,this._localAudioLevel=0,this._isLocalAudioLevelObserverRunning=!1,this.sendMessageToCallMachine({action:\"stop-local-audio-level-observer\"})}},{key:\"startRemoteParticipantsAudioLevelObserver\",value:function(e){var t=this;if(this.validateAudioLevelInterval(e),this._callMachineInitialized)return this._isRemoteParticipantsAudioLevelObserverRunning=!0,new Promise((function(n,r){t.sendMessageToCallMachine({action:\"start-remote-participants-audio-level-observer\",interval:e},(function(e){t._isRemoteParticipantsAudioLevelObserverRunning=!e.error,e.error?r({error:e.error}):n()}))}));this._preloadCache.remoteParticipantsAudioLevelObserver={enabled:!0,interval:e}}},{key:\"isRemoteParticipantsAudioLevelObserverRunning\",value:function(){return this._isRemoteParticipantsAudioLevelObserverRunning}},{key:\"stopRemoteParticipantsAudioLevelObserver\",value:function(){this._preloadCache.remoteParticipantsAudioLevelObserver=null,this._remoteParticipantsAudioLevel={},this._isRemoteParticipantsAudioLevelObserverRunning=!1,this.sendMessageToCallMachine({action:\"stop-remote-participants-audio-level-observer\"})}},{key:\"startCamera\",value:(V=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(fc(this._callObjectMode,\"startCamera()\"),dc(this._callState,this._isPreparingToJoin,\"startCamera()\",\"Did you mean to use setLocalAudio() and/or setLocalVideo() instead?\"),this.needsLoad())try{yield this.load(t)}catch(e){return Promise.reject(e)}else{if(this._didPreAuth){if(t.url&&t.url!==this.properties.url)return console.error(\"url in startCamera() is different than the one used in preAuth()\"),Promise.reject();if(t.token&&t.token!==this.properties.token)return console.error(\"token in startCamera() is different than the one used in preAuth()\"),Promise.reject()}this.validateProperties(t),this.properties=qa(qa({},this.properties),t)}return new Promise((function(t){e._preloadCache.inputSettings=e._prepInputSettingsForSharing(e._inputSettings,!1),e.sendMessageToCallMachine({action:\"start-camera\",properties:cc(e.properties,e.callClientId),preloadCache:cc(e._preloadCache,e.callClientId)},(function(e){t({camera:e.camera,mic:e.mic,speaker:e.speaker})}))}))})),function(){return V.apply(this,arguments)})},{key:\"validateCustomTrack\",value:function(e,t,n){if(n&&n.length>50)throw new Error(\"Custom track `trackName` must not be more than 50 characters\");if(t&&\"music\"!==t&&\"speech\"!==t&&!(t instanceof Object))throw new Error(\"Custom track `mode` must be either `music` | `speech` | `DailyMicAudioModeSettings` or `undefined`\");if(!!n&&[\"cam-audio\",\"cam-video\",\"screen-video\",\"screen-audio\",\"rmpAudio\",\"rmpVideo\",\"customVideoDefaults\"].includes(n))throw new Error(\"Custom track `trackName` must not match a track name already used by daily: cam-audio, cam-video, customVideoDefaults, screen-video, screen-audio, rmpAudio, rmpVideo\");if(!(e instanceof MediaStreamTrack))throw new Error(\"Custom tracks provided must be instances of MediaStreamTrack\")}},{key:\"startCustomTrack\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{track:track,mode:mode,trackName:trackName};return gc(),lc(this._callState,\"startCustomTrack()\"),this.validateCustomTrack(t.track,t.mode,t.trackName),new Promise((function(n,r){e._sharedTracks.customTrack=t.track,t.track=ls,e.sendMessageToCallMachine({action:\"start-custom-track\",properties:t},(function(e){e.error?r({error:e.error}):n(e.mediaTag)}))}))}},{key:\"stopCustomTrack\",value:function(e){var t=this;return gc(),lc(this._callState,\"stopCustomTrack()\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"stop-custom-track\",mediaTag:e},(function(e){n(e.mediaTag)}))}))}},{key:\"setCamera\",value:function(e){var t=this;return mc(),hc(this._callMachineInitialized,\"setCamera()\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"set-camera\",cameraDeviceId:e},(function(e){n({device:e.device})}))}))}},{key:\"setAudioDevice\",value:(U=h((function*(e){return mc(),this.nativeUtils().setAudioDevice(e),{deviceId:yield this.nativeUtils().getAudioDevice()}})),function(e){return U.apply(this,arguments)})},{key:\"cycleCamera\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new Promise((function(n){e.sendMessageToCallMachine({action:\"cycle-camera\",properties:t},(function(e){n({device:e.device})}))}))}},{key:\"cycleMic\",value:function(){var e=this;return gc(),new Promise((function(t){e.sendMessageToCallMachine({action:\"cycle-mic\"},(function(e){t({device:e.device})}))}))}},{key:\"getCameraFacingMode\",value:function(){var e=this;return mc(),new Promise((function(t){e.sendMessageToCallMachine({action:\"get-camera-facing-mode\"},(function(e){t(e.facingMode)}))}))}},{key:\"setInputDevicesAsync\",value:(B=h((function*(e){var t=this,n=e.audioDeviceId,r=e.videoDeviceId,i=e.audioSource,o=e.videoSource;if(gc(),void 0!==i&&(n=i),void 0!==o&&(r=o),\"boolean\"==typeof n&&(this._setAllowLocalAudio(n),n=void 0),\"boolean\"==typeof r&&(this._setAllowLocalVideo(r),r=void 0),!n&&!r)return yield this.getInputDevices();var s={};return n&&(n instanceof MediaStreamTrack?(this._sharedTracks.audioTrack=n,n=ls,s.audio={settings:{customTrack:n}}):(delete this._sharedTracks.audioTrack,s.audio={settings:{deviceId:n}})),r&&(r instanceof MediaStreamTrack?(this._sharedTracks.videoTrack=r,r=ls,s.video={settings:{customTrack:r}}):(delete this._sharedTracks.videoTrack,s.video={settings:{deviceId:r}})),this._callObjectMode&&this.needsLoad()?(this._updatePreloadCacheInputSettings(s,!1),this._devicesFromInputSettings(this._inputSettings)):new Promise((function(e){t.sendMessageToCallMachine({action:\"set-input-devices\",audioDeviceId:n,videoDeviceId:r},(function(n){if(delete n.action,delete n.callbackStamp,n.returnPreloadCache)return t._updatePreloadCacheInputSettings(s,!1),void e(t._devicesFromInputSettings(t._inputSettings));e(n)}))}))})),function(e){return B.apply(this,arguments)})},{key:\"setOutputDeviceAsync\",value:(F=h((function*(e){var t=this,n=e.outputDeviceId;return gc(),n&&(this._preloadCache.outputDeviceId=n),this._callObjectMode&&this.needsLoad()?this._devicesFromInputSettings(this._inputSettings):new Promise((function(e){t.sendMessageToCallMachine({action:\"set-output-device\",outputDeviceId:n},(function(n){delete n.action,delete n.callbackStamp,n.returnPreloadCache?e(t._devicesFromInputSettings(t._inputSettings)):e(n)}))}))})),function(e){return F.apply(this,arguments)})},{key:\"getInputDevices\",value:(R=h((function*(){var e=this;return this._callObjectMode&&this.needsLoad()?this._devicesFromInputSettings(this._inputSettings):new Promise((function(t){e.sendMessageToCallMachine({action:\"get-input-devices\"},(function(n){n.returnPreloadCache?t(e._devicesFromInputSettings(e._inputSettings)):t({camera:n.camera,mic:n.mic,speaker:n.speaker})}))}))})),function(){return R.apply(this,arguments)})},{key:\"nativeInCallAudioMode\",value:function(){return mc(),this._nativeInCallAudioMode}},{key:\"setNativeInCallAudioMode\",value:function(e){if(mc(),[Qa,Ka].includes(e)){if(e!==this._nativeInCallAudioMode)return this._nativeInCallAudioMode=e,!this.disableReactNativeAutoDeviceManagement(\"audio\")&&uc(this._callState,this._isPreparingToJoin)&&this.nativeUtils().setAudioMode(this._nativeInCallAudioMode),this}else console.error(\"invalid in-call audio mode specified: \",e)}},{key:\"preAuth\",value:(D=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(fc(this._callObjectMode,\"preAuth()\"),dc(this._callState,this._isPreparingToJoin,\"preAuth()\"),this.needsLoad()&&(yield this.load(t)),!t.url)throw new Error(\"preAuth() requires at least a url to be provided\");return this.validateProperties(t),this.properties=qa(qa({},this.properties),t),new Promise((function(t,n){e._preloadCache.inputSettings=e._prepInputSettingsForSharing(e._inputSettings,!1),e.sendMessageToCallMachine({action:\"daily-method-preauth\",properties:cc(e.properties,e.callClientId),preloadCache:cc(e._preloadCache,e.callClientId)},(function(r){return r.error?n(r.error):r.access?(e._didPreAuth=!0,void t({access:r.access})):n(new Error(\"unknown error in preAuth()\"))}))}))})),function(){return D.apply(this,arguments)})},{key:\"load\",value:(L=h((function*(e){var t=this;if(this.needsLoad()){if(this._destroyed&&(this._logUseAfterDestroy(),this.strictMode))throw new Error(\"Use after destroy\");if(e&&(this.validateProperties(e),this.properties=qa(qa({},this.properties),e)),!this._callObjectMode&&!this.properties.url)throw new Error(\"can't load iframe meeting because url property isn't set\");return this._updateCallState(gi),this.emitDailyJSEvent({action:to}),this._callObjectMode?new Promise((function(e,n){t._callObjectLoader.cancel();var r=Date.now();t._callObjectLoader.load(t.properties.dailyConfig,(function(n){t._bundleLoadTime=n?\"no-op\":Date.now()-r,t._updateCallState(mi),n&&t.emitDailyJSEvent({action:ro}),e()}),(function(e,r){if(t.emitDailyJSEvent({action:no}),!r){t._updateCallState(wi),t.resetMeetingDependentVars();var i={action:ns,errorMsg:e.msg,error:{type:\"connection-error\",msg:\"Failed to load call object bundle.\",details:{on:\"load\",sourceError:e,bundleUrl:Z(t.properties.dailyConfig)}}};t._maybeSendToSentry(i),t.emitDailyJSEvent(i),n(e.msg)}}))})):(this._iframe.src=X(this.assembleMeetingUrl(),this.properties.dailyConfig),new Promise((function(e,n){t._loadedCallback=function(r){t._callState!==wi?(t._updateCallState(mi),(t.properties.cssFile||t.properties.cssText)&&t.loadCss(t.properties),e()):n(r)}})))}})),function(e){return L.apply(this,arguments)})},{key:\"join\",value:(I=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._testCallInProgress&&this.stopTestCallQuality();var n=!1;if(this.needsLoad()){this.updateIsPreparingToJoin(!0);try{yield this.load(t)}catch(e){return this.updateIsPreparingToJoin(!1),Promise.reject(e)}}else{if(n=!(!this.properties.cssFile&&!this.properties.cssText),this._didPreAuth){if(t.url&&t.url!==this.properties.url)return console.error(\"url in join() is different than the one used in preAuth()\"),this.updateIsPreparingToJoin(!1),Promise.reject();if(t.token&&t.token!==this.properties.token)return console.error(\"token in join() is different than the one used in preAuth()\"),this.updateIsPreparingToJoin(!1),Promise.reject()}if(t.url&&!this._callObjectMode&&t.url&&t.url!==this.properties.url)return console.error(\"url in join() is different than the one used in load() (\".concat(this.properties.url,\" -> \").concat(t.url,\")\")),this.updateIsPreparingToJoin(!1),Promise.reject();this.validateProperties(t),this.properties=qa(qa({},this.properties),t)}return void 0!==t.showLocalVideo&&(this._callObjectMode?console.error(\"showLocalVideo is not available in callObject mode\"):this._showLocalVideo=!!t.showLocalVideo),void 0!==t.showParticipantsBar&&(this._callObjectMode?console.error(\"showParticipantsBar is not available in callObject mode\"):this._showParticipantsBar=!!t.showParticipantsBar),this._callState===bi||this._callState===yi?(console.warn(\"already joined meeting, call leave() before joining again\"),void this.updateIsPreparingToJoin(!1)):(this._updateCallState(yi,!1),this.emitDailyJSEvent({action:so}),this._preloadCache.inputSettings=this._prepInputSettingsForSharing(this._inputSettings||{},!1),this.sendMessageToCallMachine({action:\"join-meeting\",properties:cc(this.properties,this.callClientId),preloadCache:cc(this._preloadCache,this.callClientId)}),new Promise((function(t,r){e._joinedCallback=function(i,o){if(e._callState!==wi){if(e._updateCallState(bi),i)for(var s in i){if(e._callObjectMode){var a=e._callMachine().store;pa(i[s],a),fa(i[s],a),ga(i[s],e._participants[s],a)}e._participants[s]=qa({},i[s]),e.toggleParticipantAudioBasedOnNativeAudioFocus()}n&&e.loadCss(e.properties),t(i)}else r(o)}})))})),function(){return I.apply(this,arguments)})},{key:\"leave\",value:(j=h((function*(){var e=this;return this._testCallInProgress&&this.stopTestCallQuality(),new Promise((function(t){e._callState===_i||e._callState===wi?t():e._callObjectLoader&&!e._callObjectLoader.loaded?(e._callObjectLoader.cancel(),e._updateCallState(_i),e.resetMeetingDependentVars(),e.emitDailyJSEvent({action:_i}),t()):(e._resolveLeave=t,e.sendMessageToCallMachine({action:\"leave-meeting\"}))}))})),function(){return j.apply(this,arguments)})},{key:\"startScreenShare\",value:(A=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(hc(this._callMachineInitialized,\"startScreenShare()\"),t.screenVideoSendSettings&&this._validateVideoSendSettings(\"screenVideo\",t.screenVideoSendSettings),t.mediaStream&&(this._sharedTracks.screenMediaStream=t.mediaStream,t.mediaStream=ls),\"undefined\"!=typeof DailyNativeUtils&&void 0!==DailyNativeUtils.isIOS&&DailyNativeUtils.isIOS){var n=this.nativeUtils();if(yield n.isScreenBeingCaptured())return void this.emitDailyJSEvent({action:ts,type:\"screen-share-error\",errorMsg:\"Could not start the screen sharing. The screen is already been captured!\"});n.setSystemScreenCaptureStartCallback((function(){n.setSystemScreenCaptureStartCallback(null),e.sendMessageToCallMachine({action:ss,captureOptions:t})})),n.presentSystemScreenCapturePrompt()}else this.sendMessageToCallMachine({action:ss,captureOptions:t})})),function(){return A.apply(this,arguments)})},{key:\"stopScreenShare\",value:function(){hc(this._callMachineInitialized,\"stopScreenShare()\"),this.sendMessageToCallMachine({action:\"local-screen-stop\"})}},{key:\"startRecording\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.type;if(t&&\"cloud\"!==t&&\"raw-tracks\"!==t&&\"local\"!==t)throw new Error(\"invalid type: \".concat(t,\", allowed values 'cloud', 'raw-tracks', or 'local'\"));this.sendMessageToCallMachine(qa({action:\"local-recording-start\"},e))}},{key:\"updateRecording\",value:function(e){var t=e.layout,n=void 0===t?{preset:\"default\"}:t,r=e.instanceId;this.sendMessageToCallMachine({action:\"daily-method-update-recording\",layout:n,instanceId:r})}},{key:\"stopRecording\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(qa({action:\"local-recording-stop\"},e))}},{key:\"startLiveStreaming\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(qa({action:\"daily-method-start-live-streaming\"},e))}},{key:\"updateLiveStreaming\",value:function(e){var t=e.layout,n=void 0===t?{preset:\"default\"}:t,r=e.instanceId;this.sendMessageToCallMachine({action:\"daily-method-update-live-streaming\",layout:n,instanceId:r})}},{key:\"addLiveStreamingEndpoints\",value:function(e){var t=e.endpoints,n=e.instanceId;this.sendMessageToCallMachine({action:as,endpointsOp:fs,endpoints:t,instanceId:n})}},{key:\"removeLiveStreamingEndpoints\",value:function(e){var t=e.endpoints,n=e.instanceId;this.sendMessageToCallMachine({action:as,endpointsOp:vs,endpoints:t,instanceId:n})}},{key:\"stopLiveStreaming\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(qa({action:\"daily-method-stop-live-streaming\"},e))}},{key:\"validateDailyConfig\",value:function(e){e.camSimulcastEncodings&&(console.warn(\"camSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide camera simulcast settings.\"),this.validateSimulcastEncodings(e.camSimulcastEncodings)),e.screenSimulcastEncodings&&console.warn(\"screenSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide screen simulcast settings.\"),Ps()&&e.noAutoDefaultDeviceChange&&console.warn(\"noAutoDefaultDeviceChange is not supported on Android, and will be ignored.\")}},{key:\"validateSimulcastEncodings\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e){if(!(e instanceof Array||Array.isArray(e)))throw new Error(\"encodings must be an Array\");if(!xc(e.length,1,3))throw new Error(\"encodings must be an Array with between 1 to \".concat(3,\" layers\"));for(var r=0;r<e.length;r++){var i=e[r];for(var o in this._validateEncodingLayerHasValidProperties(i),i)if(ec.includes(o)){if(\"number\"!=typeof i[o])throw new Error(\"\".concat(o,\" must be a number\"));if(t){var s=t[o],a=s.min,c=s.max;if(!xc(i[o],a,c))throw new Error(\"\".concat(o,\" value not in range. valid range: \").concat(a,\" to \").concat(c))}}else if(![\"active\",\"scalabilityMode\"].includes(o))throw new Error(\"Invalid key \".concat(o,\", valid keys are:\")+Object.values(ec));if(n&&!i.hasOwnProperty(\"maxBitrate\"))throw new Error(\"maxBitrate is not specified\")}}}},{key:\"startRemoteMediaPlayer\",value:(P=h((function*(e){var t=this,n=e.url,r=e.settings,i=void 0===r?{state:hs.PLAY}:r;try{!function(e){if(\"string\"!=typeof e)throw new Error('url parameter must be \"string\" type')}(n),Ic(i),function(e){for(var t in e)if(!tc.includes(t))throw new Error(\"Invalid key \".concat(t,\", valid keys are: \").concat(tc));e.simulcastEncodings&&this.validateSimulcastEncodings(e.simulcastEncodings,Za,!0)}(i)}catch(e){throw console.error(\"invalid argument Error: \".concat(e)),console.error('startRemoteMediaPlayer arguments must be of the form:\\n  { url: \"playback url\",\\n  settings?:\\n  {state: \"play\"|\"pause\", simulcastEncodings?: [{}] } }'),e}return new Promise((function(e,r){t.sendMessageToCallMachine({action:\"daily-method-start-remote-media-player\",url:n,settings:i},(function(t){t.error?r({error:t.error,errorMsg:t.errorMsg}):e({session_id:t.session_id,remoteMediaPlayerState:{state:t.state,settings:t.settings}})}))}))})),function(e){return P.apply(this,arguments)})},{key:\"stopRemoteMediaPlayer\",value:(O=h((function*(e){var t=this;if(\"string\"!=typeof e)throw new Error(\" remotePlayerID must be of type string\");return new Promise((function(n,r){t.sendMessageToCallMachine({action:\"daily-method-stop-remote-media-player\",session_id:e},(function(e){e.error?r({error:e.error,errorMsg:e.errorMsg}):n()}))}))})),function(e){return O.apply(this,arguments)})},{key:\"updateRemoteMediaPlayer\",value:(T=h((function*(e){var t=this,n=e.session_id,r=e.settings;try{Ic(r)}catch(e){throw console.error(\"invalid argument Error: \".concat(e)),console.error('updateRemoteMediaPlayer arguments must be of the form:\\n  session_id: \"participant session\",\\n  { settings?: {state: \"play\"|\"pause\"} }'),e}return new Promise((function(e,i){t.sendMessageToCallMachine({action:\"daily-method-update-remote-media-player\",session_id:n,settings:r},(function(t){t.error?i({error:t.error,errorMsg:t.errorMsg}):e({session_id:t.session_id,remoteMediaPlayerState:{state:t.state,settings:t.settings}})}))}))})),function(e){return T.apply(this,arguments)})},{key:\"startTranscription\",value:function(e){lc(this._callState,\"startTranscription()\"),this.sendMessageToCallMachine(qa({action:\"daily-method-start-transcription\"},e))}},{key:\"updateTranscription\",value:function(e){if(lc(this._callState,\"updateTranscription()\"),!e)throw new Error(\"updateTranscription Error: options is mandatory\");if(\"object\"!==n(e))throw new Error(\"updateTranscription Error: options must be object type\");if(e.participants&&!Array.isArray(e.participants))throw new Error(\"updateTranscription Error: participants must be an array\");this.sendMessageToCallMachine(qa({action:\"daily-method-update-transcription\"},e))}},{key:\"stopTranscription\",value:function(e){if(lc(this._callState,\"stopTranscription()\"),e&&\"object\"!==n(e))throw new Error(\"stopTranscription Error: options must be object type\");if(e&&!e.instanceId)throw new Error('\"instanceId\" not provided');this.sendMessageToCallMachine(qa({action:\"daily-method-stop-transcription\"},e))}},{key:\"startDialOut\",value:(E=h((function*(e){var t=this;lc(this._callState,\"startDialOut()\");var n=function(e){if(e){if(!Array.isArray(e))throw new Error(\"Error starting dial out: audio codec must be an array\");if(e.length<=0)throw new Error(\"Error starting dial out: audio codec array specified but empty\");e.forEach((function(e){if(\"string\"!=typeof e)throw new Error(\"Error starting dial out: audio codec must be a string\");if(\"OPUS\"!==e&&\"PCMU\"!==e&&\"PCMA\"!==e&&\"G722\"!==e)throw new Error(\"Error starting dial out: audio codec must be one of OPUS, PCMU, PCMA, G722\")}))}};if(!e.sipUri&&!e.phoneNumber)throw new Error(\"Error starting dial out: either a sip uri or phone number must be provided\");if(e.sipUri&&e.phoneNumber)throw new Error(\"Error starting dial out: only one of sip uri or phone number must be provided\");if(e.sipUri){if(\"string\"!=typeof e.sipUri)throw new Error(\"Error starting dial out: sipUri must be a string\");if(!e.sipUri.startsWith(\"sip:\"))throw new Error(\"Error starting dial out: Invalid SIP URI, must start with 'sip:'\");if(e.video&&\"boolean\"!=typeof e.video)throw new Error(\"Error starting dial out: video must be a boolean value\");!function(e){if(e&&(n(e.audio),e.video)){if(!Array.isArray(e.video))throw new Error(\"Error starting dial out: video codec must be an array\");if(e.video.length<=0)throw new Error(\"Error starting dial out: video codec array specified but empty\");e.video.forEach((function(e){if(\"string\"!=typeof e)throw new Error(\"Error starting dial out: video codec must be a string\");if(\"H264\"!==e&&\"VP8\"!==e)throw new Error(\"Error starting dial out: video codec must be H264 or VP8\")}))}}(e.codecs)}if(e.phoneNumber){if(\"string\"!=typeof e.phoneNumber)throw new Error(\"Error starting dial out: phoneNumber must be a string\");if(!/^\\+\\d{1,}$/.test(e.phoneNumber))throw new Error(\"Error starting dial out: Invalid phone number, must be valid phone number as per E.164\");e.codecs&&n(e.codecs.audio)}if(e.callerId){if(\"string\"!=typeof e.callerId)throw new Error(\"Error starting dial out: callerId must be a string\");if(e.sipUri)throw new Error(\"Error starting dial out: callerId not allowed with sipUri\")}if(e.displayName){if(\"string\"!=typeof e.displayName)throw new Error(\"Error starting dial out: displayName must be a string\");if(e.displayName.length>=200)throw new Error(\"Error starting dial out: displayName length must be less than 200\")}if(e.userId){if(\"string\"!=typeof e.userId)throw new Error(\"Error starting dial out: userId must be a string\");if(e.userId.length>36)throw new Error(\"Error starting dial out: userId length must be less than or equal to 36\")}return new Promise((function(n,r){t.sendMessageToCallMachine(qa({action:\"dialout-start\"},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return E.apply(this,arguments)})},{key:\"stopDialOut\",value:function(e){var t=this;return lc(this._callState,\"stopDialOut()\"),new Promise((function(n,r){t.sendMessageToCallMachine(qa({action:\"dialout-stop\"},e),(function(e){e.error?r(e.error):n(e)}))}))}},{key:\"sipCallTransfer\",value:(C=h((function*(e){var t=this;if(lc(this._callState,\"sipCallTransfer()\"),!e)throw new Error(\"sipCallTransfer() requires a sessionId and toEndPoint\");return e.useSipRefer=!1,jc(e,\"sipCallTransfer\"),new Promise((function(n,r){t.sendMessageToCallMachine(qa({action:gs},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return C.apply(this,arguments)})},{key:\"sipRefer\",value:(M=h((function*(e){var t=this;if(lc(this._callState,\"sipRefer()\"),!e)throw new Error(\"sessionId and toEndPoint are mandatory parameter\");return e.useSipRefer=!0,jc(e,\"sipRefer\"),new Promise((function(n,r){t.sendMessageToCallMachine(qa({action:gs},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return M.apply(this,arguments)})},{key:\"sendDTMF\",value:(k=h((function*(e){var t=this;return lc(this._callState,\"sendDTMF()\"),function(e){var t=e.sessionId,n=e.tones;if(!t||!n)throw new Error(\"sessionId and tones are mandatory parameter\");if(\"string\"!=typeof t||\"string\"!=typeof n)throw new Error(\"sessionId and tones should be of string type\");if(n.length>20)throw new Error(\"tones string must be upto 20 characters\");var r=/[^0-9A-D*#]/g,i=n.match(r);if(i&&i[0])throw new Error(\"\".concat(i[0],\" is not valid DTMF tone\"))}(e),new Promise((function(n,r){t.sendMessageToCallMachine(qa({action:\"send-dtmf\"},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return k.apply(this,arguments)})},{key:\"getNetworkStats\",value:function(){var e=this;if(this._callState!==bi){return Promise.resolve(qa({stats:{latest:{}}},this._network))}return new Promise((function(t){e.sendMessageToCallMachine({action:\"get-calc-stats\"},(function(n){t(qa(qa({},e._network),{},{stats:n.stats}))}))}))}},{key:\"testWebsocketConnectivity\",value:(S=h((function*(){var e=this;if(pc(this._testCallInProgress,\"testWebsocketConnectivity()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}return new Promise((function(t,n){e.sendMessageToCallMachine({action:\"test-websocket-connectivity\"},(function(e){e.error?n(e.error):t(e.results)}))}))})),function(){return S.apply(this,arguments)})},{key:\"abortTestWebsocketConnectivity\",value:function(){this.sendMessageToCallMachine({action:\"abort-test-websocket-connectivity\"})}},{key:\"_validateVideoTrackForNetworkTests\",value:function(e){return e?e instanceof MediaStreamTrack?!!Pa(e,{isLocalScreenVideo:!1})||(console.error(\"Video track is not playable. This test needs a live video track.\"),!1):(console.error(\"Video track needs to be of type `MediaStreamTrack`.\"),!1):(console.error(\"Missing video track. You must provide a video track in order to run this test.\"),!1)}},{key:\"testCallQuality\",value:(w=h((function*(){var t=this;gc(),fc(this._callObjectMode,\"testCallQuality()\"),hc(this._callMachineInitialized,\"testCallQuality()\",null,!0),dc(this._callState,this._isPreparingToJoin,\"testCallQuality()\");var n=this._testCallAlreadyInProgress,r=function(e){n||(t._testCallInProgress=e)};if(r(!0),this.needsLoad())try{var i=this._callState;yield this.load(),this._callState=i}catch(e){return r(!1),Promise.reject(e)}return new Promise((function(n){t.sendMessageToCallMachine({action:\"test-call-quality\",dailyJsVersion:t.properties.dailyJsVersion},(function(i){var o=i.results,s=o.result,a=e(o,Va);if(\"failed\"===s){var c,l=qa({},a);null!==(c=a.error)&&void 0!==c&&c.details?(a.error.details=JSON.parse(a.error.details),l.error=qa(qa({},l.error),{},{details:qa({},l.error.details)}),l.error.details.duringTest=\"testCallQuality\"):(l.error=l.error?qa({},l.error):{},l.error.details={duringTest:\"testCallQuality\"}),t._maybeSendToSentry(l)}r(!1),n(qa({result:s},a))}))}))})),function(){return w.apply(this,arguments)})},{key:\"stopTestCallQuality\",value:function(){this.sendMessageToCallMachine({action:\"stop-test-call-quality\"})}},{key:\"testConnectionQuality\",value:(_=h((function*(e){var t;ys()?(console.warn(\"testConnectionQuality() is deprecated: use testPeerToPeerCallQuality() instead\"),t=yield this.testPeerToPeerCallQuality(e)):(console.warn(\"testConnectionQuality() is deprecated: use testCallQuality() instead\"),t=yield this.testCallQuality());var n={result:t.result,secondsElapsed:t.secondsElapsed};return t.data&&(n.data={maxRTT:t.data.maxRoundTripTime,packetLoss:t.data.avgRecvPacketLoss}),n})),function(e){return _.apply(this,arguments)})},{key:\"testPeerToPeerCallQuality\",value:(b=h((function*(e){var t=this;if(pc(this._testCallInProgress,\"testPeerToPeerCallQuality()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}var n=e.videoTrack,r=e.duration;if(!this._validateVideoTrackForNetworkTests(n))throw new Error(\"Video track error\");return this._sharedTracks.videoTrackForConnectionQualityTest=n,new Promise((function(e,n){t.sendMessageToCallMachine({action:\"test-p2p-call-quality\",duration:r},(function(t){t.error?n(t.error):e(t.results)}))}))})),function(e){return b.apply(this,arguments)})},{key:\"stopTestConnectionQuality\",value:function(){ys()?(console.warn(\"stopTestConnectionQuality() is deprecated: use testPeerToPeerCallQuality() and stopTestPeerToPeerCallQuality() instead\"),this.stopTestPeerToPeerCallQuality()):(console.warn(\"stopTestConnectionQuality() is deprecated: use testCallQuality() and stopTestCallQuality() instead\"),this.stopTestCallQuality())}},{key:\"stopTestPeerToPeerCallQuality\",value:function(){this.sendMessageToCallMachine({action:\"stop-test-p2p-call-quality\"})}},{key:\"testNetworkConnectivity\",value:(y=h((function*(e){var t=this;if(pc(this._testCallInProgress,\"testNetworkConnectivity()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}if(!this._validateVideoTrackForNetworkTests(e))throw new Error(\"Video track error\");return this._sharedTracks.videoTrackForNetworkConnectivityTest=e,new Promise((function(e,n){t.sendMessageToCallMachine({action:\"test-network-connectivity\"},(function(t){t.error?n(t.error):e(t.results)}))}))})),function(e){return y.apply(this,arguments)})},{key:\"abortTestNetworkConnectivity\",value:function(){this.sendMessageToCallMachine({action:\"abort-test-network-connectivity\"})}},{key:\"getCpuLoadStats\",value:function(){var e=this;return new Promise((function(t){if(e._callState===bi){e.sendMessageToCallMachine({action:\"get-cpu-load-stats\"},(function(e){t(e.cpuStats)}))}else t({cpuLoadState:void 0,cpuLoadStateReason:void 0,stats:{}})}))}},{key:\"_validateEncodingLayerHasValidProperties\",value:function(e){var t;if(!((null===(t=Object.keys(e))||void 0===t?void 0:t.length)>0))throw new Error(\"Empty encoding is not allowed. At least one of these valid keys should be specified:\"+Object.values(ec))}},{key:\"_validateVideoSendSettings\",value:function(e,t){var r=\"screenVideo\"===e?[\"default-screen-video\",\"detail-optimized\",\"motion-optimized\",\"motion-and-detail-balanced\"]:[\"default-video\",\"bandwidth-optimized\",\"bandwidth-and-quality-balanced\",\"quality-optimized\",\"adaptive-2-layers\",\"adaptive-3-layers\"],i=\"Video send settings should be either an object or one of the supported presets: \".concat(r.join());if(\"string\"==typeof t){if(!r.includes(t))throw new Error(i)}else{if(\"object\"!==n(t))throw new Error(i);if(!t.maxQuality&&!t.encodings&&void 0===t.allowAdaptiveLayers)throw new Error(\"Video send settings must contain at least maxQuality, allowAdaptiveLayers or encodings attribute\");if(t.maxQuality&&-1===[\"low\",\"medium\",\"high\"].indexOf(t.maxQuality))throw new Error(\"maxQuality must be either low, medium or high\");if(t.encodings){var o=!1;switch(Object.keys(t.encodings).length){case 1:o=!t.encodings.low;break;case 2:o=!t.encodings.low||!t.encodings.medium;break;case 3:o=!t.encodings.low||!t.encodings.medium||!t.encodings.high;break;default:o=!0}if(o)throw new Error(\"Encodings must be defined as: low, low and medium, or low, medium and high.\");t.encodings.low&&this._validateEncodingLayerHasValidProperties(t.encodings.low),t.encodings.medium&&this._validateEncodingLayerHasValidProperties(t.encodings.medium),t.encodings.high&&this._validateEncodingLayerHasValidProperties(t.encodings.high)}}}},{key:\"validateUpdateSendSettings\",value:function(e){var t=this;if(!e||0===Object.keys(e).length)throw new Error(\"Send settings must contain at least information for one track!\");Object.entries(e).forEach((function(e){var n=f(e,2),r=n[0],i=n[1];t._validateVideoSendSettings(r,i)}))}},{key:\"updateSendSettings\",value:function(e){var t=this;return this.validateUpdateSendSettings(e),this.needsLoad()?(this._preloadCache.sendSettings=e,{sendSettings:this._preloadCache.sendSettings}):new Promise((function(n,r){t.sendMessageToCallMachine({action:\"update-send-settings\",sendSettings:e},(function(e){e.error?r(e.error):n(e.sendSettings)}))}))}},{key:\"getSendSettings\",value:function(){return this._sendSettings||this._preloadCache.sendSettings}},{key:\"getLocalAudioLevel\",value:function(){return this._localAudioLevel}},{key:\"getRemoteParticipantsAudioLevel\",value:function(){return this._remoteParticipantsAudioLevel}},{key:\"getActiveSpeaker\",value:function(){return gc(),this._activeSpeaker}},{key:\"setActiveSpeakerMode\",value:function(e){return gc(),this.sendMessageToCallMachine({action:\"set-active-speaker-mode\",enabled:e}),this}},{key:\"activeSpeakerMode\",value:function(){return gc(),this._activeSpeakerMode}},{key:\"subscribeToTracksAutomatically\",value:function(){return this._preloadCache.subscribeToTracksAutomatically}},{key:\"setSubscribeToTracksAutomatically\",value:function(e){return lc(this._callState,\"setSubscribeToTracksAutomatically()\",\"Use the subscribeToTracksAutomatically configuration property.\"),this._preloadCache.subscribeToTracksAutomatically=e,this.sendMessageToCallMachine({action:\"daily-method-subscribe-to-tracks-automatically\",enabled:e}),this}},{key:\"enumerateDevices\",value:(m=h((function*(){var e=this;if(this._callObjectMode){var t=yield navigator.mediaDevices.enumerateDevices();return\"Firefox\"===js()&&Is().major>115&&Is().major<123&&(t=t.filter((function(e){return\"audiooutput\"!==e.kind}))),{devices:t.map((function(e){var t=JSON.parse(JSON.stringify(e));if(!ys()&&\"videoinput\"===e.kind&&e.getCapabilities){var n,r=e.getCapabilities();t.facing=(null==r||null===(n=r.facingMode)||void 0===n?void 0:n.length)>=1?r.facingMode[0]:void 0}return t}))}}return new Promise((function(t){e.sendMessageToCallMachine({action:\"enumerate-devices\"},(function(e){t({devices:e.devices})}))}))})),function(){return m.apply(this,arguments)})},{key:\"sendAppMessage\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"*\";if(lc(this._callState,\"sendAppMessage()\"),JSON.stringify(e).length>this._maxAppMessageSize)throw new Error(\"Message data too large. Max size is \"+this._maxAppMessageSize);return this.sendMessageToCallMachine({action:\"app-msg\",data:e,to:t}),this}},{key:\"addFakeParticipant\",value:function(e){return gc(),lc(this._callState,\"addFakeParticipant()\"),this.sendMessageToCallMachine(qa({action:\"add-fake-participant\"},e)),this}},{key:\"setShowNamesMode\",value:function(e){return vc(this._callObjectMode,\"setShowNamesMode()\"),gc(),e&&\"always\"!==e&&\"never\"!==e?(console.error('setShowNamesMode argument should be \"always\", \"never\", or false'),this):(this.sendMessageToCallMachine({action:\"set-show-names\",mode:e}),this)}},{key:\"setShowLocalVideo\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return vc(this._callObjectMode,\"setShowLocalVideo()\"),gc(),lc(this._callState,\"setShowLocalVideo()\"),\"boolean\"!=typeof e?(console.error(\"setShowLocalVideo only accepts a boolean value\"),this):(this.sendMessageToCallMachine({action:\"set-show-local-video\",show:e}),this._showLocalVideo=e,this)}},{key:\"showLocalVideo\",value:function(){return vc(this._callObjectMode,\"showLocalVideo()\"),gc(),this._showLocalVideo}},{key:\"setShowParticipantsBar\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return vc(this._callObjectMode,\"setShowParticipantsBar()\"),gc(),lc(this._callState,\"setShowParticipantsBar()\"),\"boolean\"!=typeof e?(console.error(\"setShowParticipantsBar only accepts a boolean value\"),this):(this.sendMessageToCallMachine({action:\"set-show-participants-bar\",show:e}),this._showParticipantsBar=e,this)}},{key:\"showParticipantsBar\",value:function(){return vc(this._callObjectMode,\"showParticipantsBar()\"),gc(),this._showParticipantsBar}},{key:\"customIntegrations\",value:function(){return gc(),vc(this._callObjectMode,\"customIntegrations()\"),this._customIntegrations}},{key:\"setCustomIntegrations\",value:function(e){return gc(),vc(this._callObjectMode,\"setCustomIntegrations()\"),lc(this._callState,\"setCustomIntegrations()\"),Pc(e)?(this.sendMessageToCallMachine({action:\"set-custom-integrations\",integrations:e}),this._customIntegrations=e,this):this}},{key:\"startCustomIntegrations\",value:function(e){var t=this;if(gc(),vc(this._callObjectMode,\"startCustomIntegrations()\"),lc(this._callState,\"startCustomIntegrations()\"),Array.isArray(e)&&e.some((function(e){return\"string\"!=typeof e}))||!Array.isArray(e)&&\"string\"!=typeof e)return console.error(\"startCustomIntegrations() only accepts string | string[]\"),this;var n=\"string\"==typeof e?[e]:e,r=n.filter((function(e){return!(e in t._customIntegrations)}));return r.length?(console.error(\"Can't find custom integration(s): \\\"\".concat(r.join(\", \"),'\"')),this):(this.sendMessageToCallMachine({action:\"start-custom-integrations\",ids:n}),this)}},{key:\"stopCustomIntegrations\",value:function(e){var t=this;if(gc(),vc(this._callObjectMode,\"stopCustomIntegrations()\"),lc(this._callState,\"stopCustomIntegrations()\"),Array.isArray(e)&&e.some((function(e){return\"string\"!=typeof e}))||!Array.isArray(e)&&\"string\"!=typeof e)return console.error(\"stopCustomIntegrations() only accepts string | string[]\"),this;var n=\"string\"==typeof e?[e]:e,r=n.filter((function(e){return!(e in t._customIntegrations)}));return r.length?(console.error(\"Can't find custom integration(s): \\\"\".concat(r.join(\", \"),'\"')),this):(this.sendMessageToCallMachine({action:\"stop-custom-integrations\",ids:n}),this)}},{key:\"customTrayButtons\",value:function(){return vc(this._callObjectMode,\"customTrayButtons()\"),gc(),this._customTrayButtons}},{key:\"updateCustomTrayButtons\",value:function(e){return vc(this._callObjectMode,\"updateCustomTrayButtons()\"),gc(),lc(this._callState,\"updateCustomTrayButtons()\"),Oc(e)?(this.sendMessageToCallMachine({action:\"update-custom-tray-buttons\",btns:e}),this._customTrayButtons=e,this):(console.error(\"updateCustomTrayButtons only accepts a dictionary of the type \".concat(JSON.stringify(rc))),this)}},{key:\"theme\",value:function(){return vc(this._callObjectMode,\"theme()\"),this.properties.theme}},{key:\"setTheme\",value:function(e){var t=this;return vc(this._callObjectMode,\"setTheme()\"),new Promise((function(n,r){try{t.validateProperties({theme:e}),t.properties.theme=qa({},e),t.sendMessageToCallMachine({action:\"set-theme\",theme:t.properties.theme});try{t.emitDailyJSEvent({action:eo,theme:t.properties.theme})}catch(e){console.log(\"could not emit 'theme-updated'\",e)}n(t.properties.theme)}catch(e){r(e)}}))}},{key:\"requestFullscreen\",value:(g=h((function*(){if(gc(),this._iframe&&!document.fullscreenElement&&ws())try{(yield this._iframe.requestFullscreen)?this._iframe.requestFullscreen():this._iframe.webkitRequestFullscreen()}catch(e){console.log(\"could not make video call fullscreen\",e)}})),function(){return g.apply(this,arguments)})},{key:\"exitFullscreen\",value:function(){gc(),document.fullscreenElement?document.exitFullscreen():document.webkitFullscreenElement&&document.webkitExitFullscreen()}},{key:\"getSidebarView\",value:(v=h((function*(){var e=this;return this._callObjectMode?(console.error(\"getSidebarView is not available in callObject mode\"),Promise.resolve(null)):new Promise((function(t){e.sendMessageToCallMachine({action:\"get-sidebar-view\"},(function(e){t(e.view)}))}))})),function(){return v.apply(this,arguments)})},{key:\"setSidebarView\",value:function(e){return this._callObjectMode?(console.error(\"setSidebarView is not available in callObject mode\"),this):(this.sendMessageToCallMachine({action:\"set-sidebar-view\",view:e}),this)}},{key:\"room\",value:(p=h((function*(){var e=this,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).includeRoomConfigDefaults,n=void 0===t||t;return this._accessState.access===Oi||this.needsLoad()?this.properties.url?{roomUrlPendingJoin:this.properties.url}:null:new Promise((function(t){e.sendMessageToCallMachine({action:\"lib-room-info\",includeRoomConfigDefaults:n},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))})),function(){return p.apply(this,arguments)})},{key:\"geo\",value:(d=h((function*(){try{var e=yield fetch(\"https://gs.daily.co/_ks_/x-swsl/:\");return{current:(yield e.json()).geo}}catch(e){return console.error(\"geo lookup failed\",e),{current:\"\"}}})),function(){return d.apply(this,arguments)})},{key:\"setNetworkTopology\",value:(c=h((function*(e){var t=this;return gc(),lc(this._callState,\"setNetworkTopology()\"),new Promise((function(n,r){t.sendMessageToCallMachine({action:\"set-network-topology\",opts:e},(function(e){e.error?r({error:e.error}):n({workerId:e.workerId})}))}))})),function(e){return c.apply(this,arguments)})},{key:\"getNetworkTopology\",value:(i=h((function*(){var e=this;return new Promise((function(t,n){e.needsLoad()&&t({topology:\"none\"}),e.sendMessageToCallMachine({action:\"get-network-topology\"},(function(e){e.error?n({error:e.error}):t({topology:e.topology})}))}))})),function(){return i.apply(this,arguments)})},{key:\"setPlayNewParticipantSound\",value:function(e){if(gc(),\"number\"!=typeof e&&!0!==e&&!1!==e)throw new Error(\"argument to setShouldPlayNewParticipantSound should be true, false, or a number, but is \".concat(e));this.sendMessageToCallMachine({action:\"daily-method-set-play-ding\",arg:e})}},{key:\"on\",value:function(e,t){return x.prototype.on.call(this,e,t)}},{key:\"once\",value:function(e,t){return x.prototype.once.call(this,e,t)}},{key:\"off\",value:function(e,t){return x.prototype.off.call(this,e,t)}},{key:\"validateProperties\",value:function(e){var t,n;if(null!=e&&null!==(t=e.dailyConfig)&&void 0!==t&&t.userMediaAudioConstraints){var r,i;ys()||console.warn(\"userMediaAudioConstraints is deprecated. You can override constraints with inputSettings.audio.settings, found in DailyCallOptions.\");var o=e.inputSettings||{};o.audio=(null===(r=e.inputSettings)||void 0===r?void 0:r.audio)||{},o.audio.settings=(null===(i=e.inputSettings)||void 0===i||null===(i=i.audio)||void 0===i?void 0:i.settings)||{},o.audio.settings=qa(qa({},o.audio.settings),e.dailyConfig.userMediaAudioConstraints),e.inputSettings=o,delete e.dailyConfig.userMediaAudioConstraints}if(null!=e&&null!==(n=e.dailyConfig)&&void 0!==n&&n.userMediaVideoConstraints){var s,a;ys()||console.warn(\"userMediaVideoConstraints is deprecated. You can override constraints with inputSettings.video.settings, found in DailyCallOptions.\");var c=e.inputSettings||{};c.video=(null===(s=e.inputSettings)||void 0===s?void 0:s.video)||{},c.video.settings=(null===(a=e.inputSettings)||void 0===a||null===(a=a.video)||void 0===a?void 0:a.settings)||{},c.video.settings=qa(qa({},c.video.settings),e.dailyConfig.userMediaVideoConstraints),e.inputSettings=c,delete e.dailyConfig.userMediaVideoConstraints}for(var l in e){if(!oc[l])throw new Error(\"unrecognized property '\".concat(l,\"'\"));if(oc[l].validate&&!oc[l].validate(e[l],this))throw new Error(\"property '\".concat(l,\"': \").concat(oc[l].help))}}},{key:\"assembleMeetingUrl\",value:function(){var e,t,n=qa(qa({},this.properties),{},{emb:this.callClientId,embHref:encodeURIComponent(window.location.href),proxy:null!==(e=this.properties.dailyConfig)&&void 0!==e&&e.proxyUrl?encodeURIComponent(null===(t=this.properties.dailyConfig)||void 0===t?void 0:t.proxyUrl):void 0}),r=n.url.match(/\\?/)?\"&\":\"?\";return n.url+r+Object.keys(oc).filter((function(e){return oc[e].queryString&&void 0!==n[e]})).map((function(e){return\"\".concat(oc[e].queryString,\"=\").concat(n[e])})).join(\"&\")}},{key:\"needsLoad\",value:function(){return[vi,gi,_i,wi].includes(this._callState)}},{key:\"sendMessageToCallMachine\",value:function(e,t){if(this._destroyed&&(this._logUseAfterDestroy(),this.strictMode))throw new Error(\"Use after destroy\");this._messageChannel.sendMessageToCallMachine(e,t,this.callClientId,this._iframe)}},{key:\"forwardPackagedMessageToCallMachine\",value:function(e){this._messageChannel.forwardPackagedMessageToCallMachine(e,this._iframe,this.callClientId)}},{key:\"addListenerForPackagedMessagesFromCallMachine\",value:function(e){return this._messageChannel.addListenerForPackagedMessagesFromCallMachine(e,this.callClientId)}},{key:\"removeListenerForPackagedMessagesFromCallMachine\",value:function(e){this._messageChannel.removeListenerForPackagedMessagesFromCallMachine(e)}},{key:\"handleMessageFromCallMachine\",value:function(t){switch(t.action){case Xi:this.sendMessageToCallMachine(qa({action:Zi},this.properties));break;case\"call-machine-initialized\":this._callMachineInitialized=!0;var n={action:cs,level:\"log\",code:1011,stats:{event:\"bundle load\",time:\"no-op\"===this._bundleLoadTime?0:this._bundleLoadTime,preLoaded:\"no-op\"===this._bundleLoadTime,url:Z(this.properties.dailyConfig)}};this.sendMessageToCallMachine(n),this._delayDuplicateInstanceLog&&this._logDuplicateInstanceAttempt();break;case ro:this._loadedCallback&&(this._loadedCallback(),this._loadedCallback=null),this.emitDailyJSEvent(t);break;case ao:var r,i=qa({},t);delete i.internal,this._maxAppMessageSize=(null===(r=t.internal)||void 0===r?void 0:r._maxAppMessageSize)||rs,this._joinedCallback&&(this._joinedCallback(t.participants),this._joinedCallback=null),this.emitDailyJSEvent(i);break;case lo:case uo:if(this._callState===_i)return;if(t.participant&&t.participant.session_id){var o=t.participant.local?\"local\":t.participant.session_id;if(this._callObjectMode){var s=this._callMachine().store;pa(t.participant,s),fa(t.participant,s),ga(t.participant,this._participants[o],s)}try{this.maybeParticipantTracksStopped(this._participants[o],t.participant),this.maybeParticipantTracksStarted(this._participants[o],t.participant),this.maybeEventRecordingStopped(this._participants[o],t.participant),this.maybeEventRecordingStarted(this._participants[o],t.participant)}catch(e){console.error(\"track events error\",e)}this.compareEqualForParticipantUpdateEvent(t.participant,this._participants[o])||(this._participants[o]=qa({},t.participant),this.toggleParticipantAudioBasedOnNativeAudioFocus(),this.emitDailyJSEvent(t))}break;case ho:if(t.participant&&t.participant.session_id){var a=this._participants[t.participant.session_id];a&&this.maybeParticipantTracksStopped(a,null),delete this._participants[t.participant.session_id],this.emitDailyJSEvent(t)}break;case po:N(this._participantCounts,t.participantCounts)||(this._participantCounts=t.participantCounts,this.emitDailyJSEvent(t));break;case fo:var c={access:t.access};t.awaitingAccess&&(c.awaitingAccess=t.awaitingAccess),N(this._accessState,c)||(this._accessState=c,this.emitDailyJSEvent(t));break;case vo:if(t.meetingSession){this._meetingSessionSummary=t.meetingSession,this.emitDailyJSEvent(t);var l=qa(qa({},t),{},{action:\"meeting-session-updated\"});this.emitDailyJSEvent(l)}break;case ns:var u;this._iframe&&!t.preserveIframe&&(this._iframe.src=\"\"),this._updateCallState(wi),this.resetMeetingDependentVars(),this._loadedCallback&&(this._loadedCallback(t.errorMsg),this._loadedCallback=null),t.preserveIframe;var d=e(t,Ja);null!=d&&null!==(u=d.error)&&void 0!==u&&u.details&&(d.error.details=JSON.parse(d.error.details)),this._maybeSendToSentry(t),this._joinedCallback&&(this._joinedCallback(null,d),this._joinedCallback=null),this.emitDailyJSEvent(d);break;case co:this._callState!==wi&&this._updateCallState(_i),this.resetMeetingDependentVars(),this._resolveLeave&&(this._resolveLeave(),this._resolveLeave=null),this.emitDailyJSEvent(t);break;case\"selected-devices-updated\":t.devices&&this.emitDailyJSEvent(t);break;case Jo:var h=t.state,p=t.threshold,f=t.quality,v=h.state,g=h.reasons;v===this._network.networkState&&N(g,this._network.networkStateReasons)&&p===this._network.threshold&&f===this._network.quality||(this._network.networkState=v,this._network.networkStateReasons=g,this._network.quality=f,this._network.threshold=p,t.networkState=v,g.length&&(t.networkStateReasons=g),delete t.state,this.emitDailyJSEvent(t));break;case qo:t&&t.cpuLoadState&&this.emitDailyJSEvent(t);break;case zo:t&&void 0!==t.faceCounts&&this.emitDailyJSEvent(t);break;case Uo:var m=t.activeSpeaker;this._activeSpeaker.peerId!==m.peerId&&(this._activeSpeaker.peerId=m.peerId,this.emitDailyJSEvent({action:t.action,activeSpeaker:this._activeSpeaker}));break;case\"show-local-video-changed\":if(this._callObjectMode)return;var y=t.show;this._showLocalVideo=y,this.emitDailyJSEvent({action:t.action,show:y});break;case Vo:var b=t.enabled;this._activeSpeakerMode!==b&&(this._activeSpeakerMode=b,this.emitDailyJSEvent({action:t.action,enabled:this._activeSpeakerMode}));break;case yo:case bo:case _o:this._waitingParticipants=t.allWaitingParticipants,this.emitDailyJSEvent({action:t.action,participant:t.participant});break;case Zo:N(this._receiveSettings,t.receiveSettings)||(this._receiveSettings=t.receiveSettings,this.emitDailyJSEvent({action:t.action,receiveSettings:t.receiveSettings}));break;case es:this._maybeUpdateInputSettings(t.inputSettings);break;case\"send-settings-updated\":N(this._sendSettings,t.sendSettings)||(this._sendSettings=t.sendSettings,this._preloadCache.sendSettings=null,this.emitDailyJSEvent({action:t.action,sendSettings:t.sendSettings}));break;case\"local-audio-level\":this._localAudioLevel=t.audioLevel,this._preloadCache.localAudioLevelObserver=null,this.emitDailyJSEvent(t);break;case\"remote-participants-audio-level\":this._remoteParticipantsAudioLevel=t.participantsAudioLevel,this._preloadCache.remoteParticipantsAudioLevelObserver=null,this.emitDailyJSEvent(t);break;case Lo:var _=t.session_id;this._rmpPlayerState[_]=t.playerState,this.emitDailyJSEvent(t);break;case No:delete this._rmpPlayerState[t.session_id],this.emitDailyJSEvent(t);break;case Do:var w=t.session_id,S=this._rmpPlayerState[w];S&&this.compareEqualForRMPUpdateEvent(S,t.remoteMediaPlayerState)||(this._rmpPlayerState[w]=t.remoteMediaPlayerState,this.emitDailyJSEvent(t));break;case\"custom-button-click\":case\"sidebar-view-changed\":this.emitDailyJSEvent(t);break;case go:var k=this._meetingSessionState.topology!==(t.meetingSessionState&&t.meetingSessionState.topology);this._meetingSessionState=Lc(t.meetingSessionState,this._callObjectMode),(this._callObjectMode||k)&&this.emitDailyJSEvent(t);break;case Ro:this._isScreenSharing=!0,this.emitDailyJSEvent(t);break;case Fo:case Bo:this._isScreenSharing=!1,this.emitDailyJSEvent(t);break;case Eo:case To:case Oo:case Po:case Ao:case ko:case Mo:case Co:case io:case oo:case Io:case xo:case\"test-completed\":case $o:case jo:case Go:case Qo:case Ko:case Yo:case ts:case Xo:case\"dialin-ready\":case\"dialin-connected\":case\"dialin-error\":case\"dialin-stopped\":case\"dialin-warning\":case\"dialout-connected\":case\"dialout-answered\":case\"dialout-error\":case\"dialout-stopped\":case\"dialout-warning\":this.emitDailyJSEvent(t);break;case\"request-fullscreen\":this.requestFullscreen();break;case\"request-exit-fullscreen\":this.exitFullscreen()}}},{key:\"maybeEventRecordingStopped\",value:function(e,t){var n=\"record\";e&&(t.local||!1!==t[n]||e[n]===t[n]||this.emitDailyJSEvent({action:To}))}},{key:\"maybeEventRecordingStarted\",value:function(e,t){var n=\"record\";e&&(t.local||!0!==t[n]||e[n]===t[n]||this.emitDailyJSEvent({action:Eo}))}},{key:\"_trackStatePlayable\",value:function(e){return!(!e||e.state!==Ti)}},{key:\"_trackChanged\",value:function(e,t){return!((null==e?void 0:e.id)===(null==t?void 0:t.id))}},{key:\"maybeEventTrackStopped\",value:function(e,t,n){var r,i,o=null!==(r=null==t?void 0:t.tracks[e])&&void 0!==r?r:null,s=null!==(i=null==n?void 0:n.tracks[e])&&void 0!==i?i:null,a=null==o?void 0:o.track;if(a){var c=this._trackStatePlayable(o),l=this._trackStatePlayable(s),u=this._trackChanged(a,null==s?void 0:s.track);c&&(l&&!u||this.emitDailyJSEvent({action:So,track:a,participant:null!=n?n:t,type:e}))}}},{key:\"maybeEventTrackStarted\",value:function(e,t,n){var r,i,o=null!==(r=null==t?void 0:t.tracks[e])&&void 0!==r?r:null,s=null!==(i=null==n?void 0:n.tracks[e])&&void 0!==i?i:null,a=null==s?void 0:s.track;if(a){var c=this._trackStatePlayable(o),l=this._trackStatePlayable(s),u=this._trackChanged(null==o?void 0:o.track,a);l&&(c&&!u||this.emitDailyJSEvent({action:wo,track:a,participant:n,type:e}))}}},{key:\"maybeParticipantTracksStopped\",value:function(e,t){if(e)for(var n in e.tracks)this.maybeEventTrackStopped(n,e,t)}},{key:\"maybeParticipantTracksStarted\",value:function(e,t){if(t)for(var n in t.tracks)this.maybeEventTrackStarted(n,e,t)}},{key:\"compareEqualForRMPUpdateEvent\",value:function(e,t){var n,r;return e.state===t.state&&(null===(n=e.settings)||void 0===n?void 0:n.volume)===(null===(r=t.settings)||void 0===r?void 0:r.volume)}},{key:\"emitDailyJSEvent\",value:function(e){try{e.callClientId=this.callClientId,this.emit(e.action,e)}catch(t){console.log(\"could not emit\",e,t)}}},{key:\"compareEqualForParticipantUpdateEvent\",value:function(e,t){return!!N(e,t)&&((!e.videoTrack||!t.videoTrack||e.videoTrack.id===t.videoTrack.id&&e.videoTrack.muted===t.videoTrack.muted&&e.videoTrack.enabled===t.videoTrack.enabled)&&(!e.audioTrack||!t.audioTrack||e.audioTrack.id===t.audioTrack.id&&e.audioTrack.muted===t.audioTrack.muted&&e.audioTrack.enabled===t.audioTrack.enabled))}},{key:\"nativeUtils\",value:function(){return ys()?\"undefined\"==typeof DailyNativeUtils?(console.warn(\"in React Native, DailyNativeUtils is expected to be available\"),null):DailyNativeUtils:null}},{key:\"updateIsPreparingToJoin\",value:function(e){this._updateCallState(this._callState,e)}},{key:\"_updateCallState\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._isPreparingToJoin;if(e!==this._callState||t!==this._isPreparingToJoin){var n=this._callState,r=this._isPreparingToJoin;this._callState=e,this._isPreparingToJoin=t;var i=this._callState===bi;this.updateShowAndroidOngoingMeetingNotification(i);var o=uc(n,r),s=uc(this._callState,this._isPreparingToJoin);o!==s&&(this.updateKeepDeviceAwake(s),this.updateDeviceAudioMode(s),this.updateNoOpRecordingEnsuringBackgroundContinuity(s))}}},{key:\"resetMeetingDependentVars\",value:function(){this._participants={},this._participantCounts=Xa,this._waitingParticipants={},this._activeSpeaker={},this._activeSpeakerMode=!1,this._didPreAuth=!1,this._accessState={access:Oi},this._finalSummaryOfPrevSession=this._meetingSessionSummary,this._meetingSessionSummary={},this._meetingSessionState=Lc(Ya,this._callObjectMode),this._isScreenSharing=!1,this._receiveSettings={},this._inputSettings=void 0,this._sendSettings={},this._localAudioLevel=0,this._isLocalAudioLevelObserverRunning=!1,this._remoteParticipantsAudioLevel={},this._isRemoteParticipantsAudioLevelObserverRunning=!1,this._maxAppMessageSize=rs,this._callMachineInitialized=!1,this._bundleLoadTime=void 0,this._preloadCache}},{key:\"updateKeepDeviceAwake\",value:function(e){ys()&&this.nativeUtils().setKeepDeviceAwake(e,this.callClientId)}},{key:\"updateDeviceAudioMode\",value:function(e){if(ys()&&!this.disableReactNativeAutoDeviceManagement(\"audio\")){var t=e?this._nativeInCallAudioMode:\"idle\";this.nativeUtils().setAudioMode(t)}}},{key:\"updateShowAndroidOngoingMeetingNotification\",value:function(e){if(ys()&&this.nativeUtils().setShowOngoingMeetingNotification){var t,n,r,i;if(this.properties.reactNativeConfig&&this.properties.reactNativeConfig.androidInCallNotification){var o=this.properties.reactNativeConfig.androidInCallNotification;t=o.title,n=o.subtitle,r=o.iconName,i=o.disableForCustomOverride}i&&(e=!1),this.nativeUtils().setShowOngoingMeetingNotification(e,t,n,r,this.callClientId)}}},{key:\"updateNoOpRecordingEnsuringBackgroundContinuity\",value:function(e){ys()&&this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity&&this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity(e)}},{key:\"toggleParticipantAudioBasedOnNativeAudioFocus\",value:function(){var e;if(ys()){var t=null===(e=this._callMachine())||void 0===e||null===(e=e.store)||void 0===e?void 0:e.getState();for(var n in null==t?void 0:t.streams){var r=t.streams[n];r&&r.pendingTrack&&\"audio\"===r.pendingTrack.kind&&(r.pendingTrack.enabled=this._hasNativeAudioFocus)}}}},{key:\"disableReactNativeAutoDeviceManagement\",value:function(e){return this.properties.reactNativeConfig&&this.properties.reactNativeConfig.disableAutoDeviceManagement&&this.properties.reactNativeConfig.disableAutoDeviceManagement[e]}},{key:\"absoluteUrl\",value:function(e){if(void 0!==e){var t=document.createElement(\"a\");return t.href=e,t.href}}},{key:\"sayHello\",value:function(){var e=\"hello, world.\";return console.log(e),e}},{key:\"_logUseAfterDestroy\",value:function(){var e=Object.values(Ga)[0];if(this.needsLoad()){if(e&&!e.needsLoad()){var t={action:cs,level:\"error\",code:this.strictMode?9995:9997};e.sendMessageToCallMachine(t)}else if(!this.strictMode){console.error(\"You are are attempting to use a call instance that was previously destroyed, which is unsupported. Please remove `strictMode: false` from your constructor properties to enable strict mode to track down and fix this unsupported usage.\")}}else{var n={action:cs,level:\"error\",code:this.strictMode?9995:9997};this._messageChannel.sendMessageToCallMachine(n,null,this.callClientId,this._iframe)}}},{key:\"_logDuplicateInstanceAttempt\",value:function(){for(var e=0,t=Object.values(Ga);e<t.length;e++){var n=t[e];n._callMachineInitialized?(n.sendMessageToCallMachine({action:cs,level:\"warn\",code:this.allowMultipleCallInstances?9993:9992}),n._delayDuplicateInstanceLog=!1):n._delayDuplicateInstanceLog=!0}}},{key:\"_maybeSendToSentry\",value:function(e){var t,n,i,o;if(null!==(t=e.error)&&void 0!==t&&t.type){if(![$i,Vi,Bi].includes(e.error.type))return;if(e.error.type===Bi&&e.error.msg.includes(\"deleted\"))return}var s=null!==(n=this.properties)&&void 0!==n&&n.url?new URL(this.properties.url):void 0,a=\"production\";s&&s.host.includes(\".staging.daily\")&&(a=\"staging\");var c,l,u,d,h,p=function(e){const t=[Gn(),Wn(),ii(),ni(),ui(),fi(),rr(),pi()];return!1!==e.autoSessionTracking&&t.push(li()),t}({}).filter((function(e){return![\"BrowserApiErrors\",\"Breadcrumbs\",\"GlobalHandlers\"].includes(e.name)})),f=new jr({dsn:\"https://f10f1c81e5d44a4098416c0867a8b740@o77906.ingest.sentry.io/168844\",transport:Wr,stackParser:Zr,integrations:p,environment:a}),v=new Mt;if(v.setClient(f),f.init(),this.session_id&&v.setExtra(\"sessionId\",this.session_id),this.properties){var g=qa({},this.properties);g.userName=g.userName?\"[Filtered]\":void 0,g.userData=g.userData?\"[Filtered]\":void 0,g.token=g.token?\"[Filtered]\":void 0,v.setExtra(\"properties\",g)}if(s){var m=s.searchParams.get(\"domain\");if(!m){var y=s.host.match(/(.*?)\\./);m=y&&y[1]||\"\"}m&&v.setTag(\"domain\",m)}e.error&&(v.setTag(\"fatalErrorType\",e.error.type),v.setExtra(\"errorDetails\",e.error.details),(null===(c=e.error.details)||void 0===c?void 0:c.uri)&&v.setTag(\"serverAddress\",e.error.details.uri),(null===(l=e.error.details)||void 0===l?void 0:l.workerGroup)&&v.setTag(\"workerGroup\",e.error.details.workerGroup),(null===(u=e.error.details)||void 0===u?void 0:u.geoGroup)&&v.setTag(\"geoGroup\",e.error.details.geoGroup),(null===(d=e.error.details)||void 0===d?void 0:d.on)&&v.setTag(\"connectionAttempt\",e.error.details.on),null!==(h=e.error.details)&&void 0!==h&&h.bundleUrl&&(v.setTag(\"bundleUrl\",e.error.details.bundleUrl),v.setTag(\"bundleError\",e.error.details.sourceError.type)));v.setTags({callMode:this._callObjectMode?ys()?\"reactNative\":null!==(i=this.properties)&&void 0!==i&&null!==(i=i.dailyConfig)&&void 0!==i&&null!==(i=i.callMode)&&void 0!==i&&i.includes(\"prebuilt\")?this.properties.dailyConfig.callMode:\"custom\":\"prebuilt-frame\",version:r.version()});var b=(null===(o=e.error)||void 0===o?void 0:o.msg)||e.errorMsg;v.captureException(new Error(b))}},{key:\"_callMachine\",value:function(){var e;return null===(e=window._daily)||void 0===e||null===(e=e.instances)||void 0===e||null===(e=e[this.callClientId])||void 0===e?void 0:e.callMachine}},{key:\"_maybeUpdateInputSettings\",value:function(e){if(!N(this._inputSettings,e)){var t=this._getInputSettings();this._inputSettings=e;var n=this._getInputSettings();N(t,n)||this.emitDailyJSEvent({action:es,inputSettings:n})}}}],[{key:\"supportedBrowser\",value:function(){if(ys())return{supported:!0,mobile:!0,name:\"React Native\",version:null,supportsScreenShare:!0,supportsSfu:!0,supportsVideoProcessing:!1,supportsAudioProcessing:!1};var e=Q.getParser(ms());return{supported:!!Os(),mobile:\"mobile\"===e.getPlatformType(),name:e.getBrowserName(),version:e.getBrowserVersion(),supportsFullscreen:!!ws(),supportsScreenShare:!!_s(),supportsSfu:!!Os(),supportsVideoProcessing:Es(),supportsAudioProcessing:Ts()}}},{key:\"version\",value:function(){return\"0.79.0\"}},{key:\"createCallObject\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.layout=\"none\",new r(null,e)}},{key:\"wrap\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(gc(),!e||!e.contentWindow||\"string\"!=typeof e.src)throw new Error(\"DailyIframe::Wrap needs an iframe-like first argument\");return t.layout||(t.customLayout?t.layout=\"custom-v1\":t.layout=\"browser\"),new r(e,t)}},{key:\"createFrame\",value:function(e,t){var n,i;gc(),e&&t?(n=e,i=t):e&&e.append?(n=e,i={}):(n=document.body,i=e||{});var o=i.iframeStyle;o||(o=n===document.body?{position:\"fixed\",border:\"1px solid black\",backgroundColor:\"white\",width:\"375px\",height:\"450px\",right:\"1em\",bottom:\"1em\"}:{border:0,width:\"100%\",height:\"100%\"});var s=document.createElement(\"iframe\");window.navigator&&window.navigator.userAgent.match(/Chrome\\/61\\./)?s.allow=\"microphone, camera\":s.allow=\"microphone; camera; autoplay; display-capture; screen-wake-lock\",s.style.visibility=\"hidden\",n.appendChild(s),s.style.visibility=null,Object.keys(o).forEach((function(e){return s.style[e]=o[e]})),i.layout||(i.customLayout?i.layout=\"custom-v1\":i.layout=\"browser\");try{return new r(s,i)}catch(e){throw n.removeChild(s),e}}},{key:\"createTransparentFrame\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};gc();var t=document.createElement(\"iframe\");return t.allow=\"microphone; camera; autoplay\",t.style.cssText=\"\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      border: 0;\\n      pointer-events: none;\\n    \",document.body.appendChild(t),e.layout||(e.layout=\"custom-v1\"),r.wrap(t,e)}},{key:\"getCallInstance\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return e?Ga[e]:Object.values(Ga)[0]}}]);var i,c,d,p,v,g,m,y,b,_,w,S,k,M,C,E,T,O,P,A,j,I,L,D,R,F,B,U,V,J,$,q,z,W,H,G,Y,ee}();function cc(e,t){var n={};for(var r in e)if(e[r]instanceof MediaStreamTrack)console.warn(\"MediaStreamTrack found in props or cache.\",r),n[r]=ls;else if(\"dailyConfig\"===r){if(e[r].modifyLocalSdpHook){var i=window._daily.instances[t].customCallbacks||{};i.modifyLocalSdpHook=e[r].modifyLocalSdpHook,window._daily.instances[t].customCallbacks=i,delete e[r].modifyLocalSdpHook}if(e[r].modifyRemoteSdpHook){var o=window._daily.instances[t].customCallbacks||{};o.modifyRemoteSdpHook=e[r].modifyRemoteSdpHook,window._daily.instances[t].customCallbacks=o,delete e[r].modifyRemoteSdpHook}n[r]=e[r]}else n[r]=e[r];return n}function lc(e){var t=arguments.length>2?arguments[2]:void 0;if(e!==bi){var n=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" only supported after join.\");throw t&&(n+=\" \".concat(t)),console.error(n),new Error(n)}}function uc(e,t){return[yi,bi].includes(e)||t}function dc(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"This daily-js method\",r=arguments.length>3?arguments[3]:void 0;if(uc(e,t)){var i=\"\".concat(n,\" not supported after joining a meeting.\");throw r&&(i+=\" \".concat(r)),console.error(i),new Error(i)}}function hc(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",n=arguments.length>2?arguments[2]:void 0;if(!e){var r=\"\".concat(t,arguments.length>3&&void 0!==arguments[3]&&arguments[3]?\" requires preAuth() or startCamera() to initialize call state.\":\" requires preAuth(), startCamera(), or join() to initialize call state.\");throw n&&(r+=\" \".concat(n)),console.error(r),new Error(r)}}function pc(e){if(e){var t=\"A pre-call quality test is in progress. Please try \".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" again once testing has completed. Use stopTestCallQuality() to end it early.\");throw console.error(t),new Error(t)}}function fc(e){if(!e){var t=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" is only supported on custom callObject instances\");throw console.error(t),new Error(t)}}function vc(e){if(e){var t=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" is only supported as part of Daily's Prebuilt\");throw console.error(t),new Error(t)}}function gc(){if(ys())throw new Error(\"This daily-js method is not currently supported in React Native\")}function mc(){if(!ys())throw new Error(\"This daily-js method is only supported in React Native\")}function yc(e){if(void 0===e)return!0;var t;if(\"string\"==typeof e)t=e;else try{t=JSON.stringify(e),N(JSON.parse(t),e)||console.warn(\"The userData provided will be modified when serialized.\")}catch(e){throw Error(\"userData must be serializable to JSON: \".concat(e))}if(t.length>4096)throw Error(\"userData is too large (\".concat(t.length,\" characters). Maximum size suppported is \").concat(4096,\".\"));return!0}function bc(e,t){for(var n=t.allowAllParticipantsKey,r=function(e){var t=[\"local\"];return n||t.push(\"*\"),e&&!t.includes(e)},i=function(e){return!!(void 0===e.layer||Number.isInteger(e.layer)&&e.layer>=0||\"inherit\"===e.layer)},o=function(e){return!!e&&(!(e.video&&!i(e.video))&&!(e.screenVideo&&!i(e.screenVideo)))},s=0,a=Object.entries(e);s<a.length;s++){var c=f(a[s],2),l=c[0],u=c[1];if(!r(l)||!o(u))return!1}return!0}function _c(e){if(\"object\"!==n(e))return!1;for(var t=0,r=Object.entries(e);t<r.length;t++){var i=f(r[t],2),o=i[0],s=i[1];switch(o){case\"video\":if(\"object\"!==n(s))return!1;for(var a=0,c=Object.entries(s);a<c.length;a++){var l=f(c[a],2),u=l[0],d=l[1];switch(u){case\"processor\":if(!kc(d))return!1;break;case\"settings\":if(!Mc(d))return!1;break;default:return!1}}break;case\"audio\":if(\"object\"!==n(s))return!1;for(var h=0,p=Object.entries(s);h<p.length;h++){var v=f(p[h],2),g=v[0],m=v[1];switch(g){case\"processor\":if(!Sc(m))return!1;break;case\"settings\":if(!Mc(m))return!1;break;default:return!1}}break;default:return!1}}return!0}function wc(e,t,n){var r,i=[];e.video&&e.video.processor&&(Es(null!==(r=null==t?void 0:t.useLegacyVideoProcessor)&&void 0!==r&&r)||(e.video.settings?delete e.video.processor:delete e.video,i.push(\"video\")));e.audio&&e.audio.processor&&(Ts()||(e.audio.settings?delete e.audio.processor:delete e.audio,i.push(\"audio\"))),i.length>0&&console.error(\"Ignoring settings for browser- or platform-unsupported input processor(s): \".concat(i.join(\", \"))),e.audio&&e.audio.settings&&(e.audio.settings.customTrack?(n.audioTrack=e.audio.settings.customTrack,e.audio.settings={customTrack:ls}):delete n.audioTrack),e.video&&e.video.settings&&(e.video.settings.customTrack?(n.videoTrack=e.video.settings.customTrack,e.video.settings={customTrack:ls}):delete n.videoTrack)}function Sc(e){if(ys())return console.warn(\"Video processing is not yet supported in React Native\"),!1;var t=[\"type\"];return!!e&&(\"object\"===n(e)&&(Object.keys(e).filter((function(e){return!t.includes(e)})).forEach((function(t){console.warn(\"invalid key inputSettings -> audio -> processor : \".concat(t)),delete e[t]})),!!function(e){if(\"string\"!=typeof e)return!1;if(!Object.values(ds).includes(e))return console.error(\"inputSettings audio processor type invalid\"),!1;return!0}(e.type)))}function kc(e){if(ys())return console.warn(\"Video processing is not yet supported in React Native\"),!1;var t=[\"type\",\"config\"];if(!e)return!1;if(\"object\"!==n(e))return!1;if(!function(e){if(\"string\"!=typeof e)return!1;if(!Object.values(us).includes(e))return console.error(\"inputSettings video processor type invalid\"),!1;return!0}(e.type))return!1;if(e.config){if(\"object\"!==n(e.config))return!1;if(!function(e,t){var n=Object.keys(t);if(0===n.length)return!0;var r=\"invalid object in inputSettings -> video -> processor -> config\";switch(e){case us.BGBLUR:return n.length>1||\"strength\"!==n[0]?(console.error(r),!1):!(\"number\"!=typeof t.strength||t.strength<=0||t.strength>1||isNaN(t.strength))||(console.error(\"\".concat(r,\"; expected: {0 < strength <= 1}, got: \").concat(t.strength)),!1);case us.BGIMAGE:return!(void 0!==t.source&&!function(e){if(\"default\"===e.source)return e.type=\"default\",!0;if(e.source instanceof ArrayBuffer)return!0;if(ee(e.source))return e.type=\"url\",!!function(e){var t=new URL(e),n=t.pathname;if(\"data:\"===t.protocol)try{var r=n.substring(n.indexOf(\":\")+1,n.indexOf(\";\")).split(\"/\")[1];return ps.includes(r)}catch(e){return console.error(\"failed to deduce blob content type\",e),!1}var i=n.split(\".\").at(-1).toLowerCase().trim();return ps.includes(i)}(e.source)||(console.error(\"invalid image type; supported types: [\".concat(ps.join(\", \"),\"]\")),!1);return t=e.source,n=Number(t),isNaN(n)||!Number.isInteger(n)||n<=0||n>10?(console.error(\"invalid image selection; must be an int, > 0, <= \".concat(10)),!1):(e.type=\"daily-preselect\",!0);var t,n}(t));default:return!0}}(e.type,e.config))return!1}return Object.keys(e).filter((function(e){return!t.includes(e)})).forEach((function(t){console.warn(\"invalid key inputSettings -> video -> processor : \".concat(t)),delete e[t]})),!0}function Mc(e){return\"object\"===n(e)&&(!e.customTrack||e.customTrack instanceof MediaStreamTrack)}function Cc(){var e=Object.values(us).join(\" | \"),t=Object.values(ds).join(\" | \");return\"inputSettings must be of the form: { video?: { processor?: { type: [ \".concat(e,\" ], config?: {} } }, audio?: { processor: {type: [ \").concat(t,\" ] } } }\")}function Ec(e){var t=e.allowAllParticipantsKey;return\"receiveSettings must be of the form { [<remote participant id> | \".concat(Ii).concat(t?' | \"'.concat(\"*\",'\"'):\"\",\"]: \")+'{ [video: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]], [screenVideo: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]] }}}'}function Tc(){return\"customIntegrations should be an object of type \".concat(JSON.stringify(ic),\".\")}function Oc(e){if(e&&\"object\"!==n(e)||Array.isArray(e))return console.error(\"customTrayButtons should be an Object of the type \".concat(JSON.stringify(rc),\".\")),!1;if(e)for(var t=0,r=Object.entries(e);t<r.length;t++)for(var i=f(r[t],1)[0],o=0,s=Object.entries(e[i]);o<s.length;o++){var a=f(s[o],2),c=a[0],l=a[1],u=rc.id[c];if(!u)return console.error(\"customTrayButton does not support key \".concat(c)),!1;switch(c){case\"iconPath\":case\"iconPathDarkMode\":if(!ee(l))return console.error(\"customTrayButton \".concat(c,\" should be a url.\")),!1;break;case\"visualState\":if(![\"default\",\"sidebar-open\",\"active\"].includes(l))return console.error(\"customTrayButton \".concat(c,\" should be \").concat(u,\". Got: \").concat(l)),!1;break;default:if(n(l)!==u)return console.error(\"customTrayButton \".concat(c,\" should be a \").concat(u,\".\")),!1}}return!0}function Pc(e){if(!e||e&&\"object\"!==n(e)||Array.isArray(e))return console.error(Tc()),!1;for(var t=function(e){return\"\".concat(e,\" should be \").concat(ic.id[e])},r=function(e,t){return console.error(\"customIntegration \".concat(e,\": \").concat(t))},i=0,o=Object.entries(e);i<o.length;i++){var s=f(o[i],1)[0];if(!(\"label\"in e[s]))return r(s,\"label is required\"),!1;if(!(\"location\"in e[s]))return r(s,\"location is required\"),!1;if(!(\"src\"in e[s])&&!(\"srcdoc\"in e[s]))return r(s,\"src or srcdoc is required\"),!1;for(var a=0,c=Object.entries(e[s]);a<c.length;a++){var l=f(c[a],2),u=l[0],d=l[1];switch(u){case\"allow\":case\"csp\":case\"name\":case\"referrerPolicy\":case\"sandbox\":if(\"string\"!=typeof d)return r(s,t(u)),!1;break;case\"iconURL\":if(!ee(d))return r(s,\"\".concat(u,\" should be a url\")),!1;break;case\"src\":if(\"srcdoc\"in e[s])return r(s,\"cannot have both src and srcdoc\"),!1;if(!ee(d))return r(s,'src \"'.concat(d,'\" is not a valid URL')),!1;break;case\"srcdoc\":if(\"src\"in e[s])return r(s,\"cannot have both src and srcdoc\"),!1;if(\"string\"!=typeof d)return r(s,t(u)),!1;break;case\"location\":if(![\"main\",\"sidebar\"].includes(d))return r(s,t(u)),!1;break;case\"controlledBy\":if(\"*\"!==d&&\"owners\"!==d&&(!Array.isArray(d)||d.some((function(e){return\"string\"!=typeof e}))))return r(s,t(u)),!1;break;case\"shared\":if((!Array.isArray(d)||d.some((function(e){return\"string\"!=typeof e})))&&\"owners\"!==d&&\"boolean\"!=typeof d)return r(s,t(u)),!1;break;default:if(!ic.id[u])return console.error(\"customIntegration does not support key \".concat(u)),!1}}}return!0}function Ac(e,t){if(void 0===t)return!1;switch(n(t)){case\"string\":return n(e)===t;case\"object\":if(\"object\"!==n(e))return!1;for(var r in e)if(!Ac(e[r],t[r]))return!1;return!0;default:return!1}}function jc(e,t){var n=e.sessionId,r=e.toEndPoint,i=e.callerId,o=e.useSipRefer;if(!n||!r)throw new Error(\"\".concat(t,\"() requires a sessionId and toEndPoint\"));if(\"string\"!=typeof n||\"string\"!=typeof r)throw new Error(\"Invalid paramater: sessionId and toEndPoint must be of type string\");if(o&&!r.startsWith(\"sip:\"))throw new Error('\"toEndPoint\" must be a \"sip\" address');if(!r.startsWith(\"sip:\")&&!r.startsWith(\"+\"))throw new Error(\"toEndPoint: \".concat(r,' must starts with either \"sip:\" or \"+\"'));if(i&&\"string\"!=typeof i)throw new Error(\"callerId must be of type string\");if(i&&!r.startsWith(\"+\"))throw new Error(\"callerId is only valid when transferring to a PSTN number\")}function Ic(e){if(\"object\"!==n(e))throw new Error('RemoteMediaPlayerSettings: must be \"object\" type');if(e.state&&!Object.values(hs).includes(e.state))throw new Error(\"Invalid value for RemoteMediaPlayerSettings.state, valid values are: \"+JSON.stringify(hs));if(e.volume){if(\"number\"!=typeof e.volume)throw new Error('RemoteMediaPlayerSettings.volume: must be \"number\" type');if(e.volume<0||e.volume>2)throw new Error(\"RemoteMediaPlayerSettings.volume: must be between 0.0 - 2.0\")}}function xc(e,t,n){return!(\"number\"!=typeof e||e<t||e>n)}function Lc(e,t){return e&&!t&&delete e.data,e}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@daily-co/daily-js/dist/daily-esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@pipecat-ai/client-js/dist/index.module.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@pipecat-ai/client-js/dist/index.module.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionEndpointNotSetError: function() { return /* binding */ $8ead7b33b8402751$export$be839f0100cd3132; },\n/* harmony export */   BotNotReadyError: function() { return /* binding */ $8ead7b33b8402751$export$885fb96b850e8fbb; },\n/* harmony export */   ConfigUpdateError: function() { return /* binding */ $8ead7b33b8402751$export$4eda4fd287fbbca5; },\n/* harmony export */   ConnectionTimeoutError: function() { return /* binding */ $8ead7b33b8402751$export$c67992fa684a81a6; },\n/* harmony export */   LLMActionType: function() { return /* binding */ $0908f693e3e0724c$export$43cdfb26f790451; },\n/* harmony export */   LLMHelper: function() { return /* binding */ $0908f693e3e0724c$export$3cf39a62d076dd5c; },\n/* harmony export */   LLMMessageType: function() { return /* binding */ $0908f693e3e0724c$export$441bcd2e10762760; },\n/* harmony export */   LogLevel: function() { return /* binding */ $7afbbd59ebaa42bf$export$243e62d78d3b544d; },\n/* harmony export */   MessageDispatcher: function() { return /* binding */ $b48f893ed1354c1e$export$e9a960646cc432aa; },\n/* harmony export */   RTVIActionRequest: function() { return /* binding */ $b48f893ed1354c1e$export$378529d7a8bead8b; },\n/* harmony export */   RTVIClient: function() { return /* binding */ $a7c324a73303ad55$export$fa42a01c1d60f4a1; },\n/* harmony export */   RTVIClientHelper: function() { return /* binding */ $7614fb2168c523cc$export$23bc637255b2a471; },\n/* harmony export */   RTVIError: function() { return /* binding */ $8ead7b33b8402751$export$59b4786f333aac02; },\n/* harmony export */   RTVIEvent: function() { return /* binding */ $f9fc0c57b9aaed9c$export$6b4624d233c61fcb; },\n/* harmony export */   RTVIMessage: function() { return /* binding */ $b48f893ed1354c1e$export$69aa9ab0334b212; },\n/* harmony export */   RTVIMessageType: function() { return /* binding */ $b48f893ed1354c1e$export$38b3db05cbf0e240; },\n/* harmony export */   RTVI_MESSAGE_LABEL: function() { return /* binding */ $b48f893ed1354c1e$export$882b13c7fda338f5; },\n/* harmony export */   StartBotError: function() { return /* binding */ $8ead7b33b8402751$export$e7544ab812238a61; },\n/* harmony export */   Transport: function() { return /* binding */ $4086f06442fcb7d7$export$86495b081fef8e52; },\n/* harmony export */   TransportStartError: function() { return /* binding */ $8ead7b33b8402751$export$e0624a511a2c4e9; },\n/* harmony export */   TransportWrapper: function() { return /* binding */ $4086f06442fcb7d7$export$82b6ede160a64a3c; },\n/* harmony export */   httpActionGenerator: function() { return /* binding */ $4bb349f22aee5185$export$8728b60ea57bf43e; },\n/* harmony export */   logger: function() { return /* binding */ $7afbbd59ebaa42bf$export$af88d00dbe7f521; }\n/* harmony export */ });\n/* harmony import */ var clone_deep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clone-deep */ \"(app-pages-browser)/./node_modules/clone-deep/index.js\");\n/* harmony import */ var clone_deep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(clone_deep__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"(app-pages-browser)/./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n\n\n\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ var $4bb349f22aee5185$exports = {};\n\n$parcel$export($4bb349f22aee5185$exports, \"httpActionGenerator\", () => $4bb349f22aee5185$export$8728b60ea57bf43e);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ \nasync function $4bb349f22aee5185$export$8728b60ea57bf43e(actionUrl, action, params, handleResponse) {\n    try {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI] Fetch action\", actionUrl, action);\n        const headers = new Headers({\n            ...Object.fromEntries((params.headers ?? new Headers()).entries())\n        });\n        if (!headers.has(\"Content-Type\")) headers.set(\"Content-Type\", \"application/json\");\n        headers.set(\"Cache-Control\", \"no-cache\");\n        headers.set(\"Connection\", \"keep-alive\");\n        // Perform the fetch request\n        const response = await fetch(actionUrl, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n                ...params.requestData,\n                actions: [\n                    action\n                ]\n            })\n        });\n        // Check the response content type\n        const contentType = response.headers.get(\"content-type\");\n        // Handle non-ok response status\n        if (!response.ok) {\n            const errorMessage = await response.text();\n            throw new (0, $8ead7b33b8402751$export$59b4786f333aac02)(`Failed to resolve action: ${errorMessage}`, response.status);\n        }\n        if (response.body && contentType?.includes(\"text/event-stream\")) {\n            // Parse streamed responses\n            const reader = response.body.pipeThrough(new TextDecoderStream()).getReader();\n            let buffer = \"\";\n            while(true){\n                const { value: value, done: done } = await reader.read();\n                if (done) break;\n                buffer += value;\n                let boundary = buffer.indexOf(\"\\n\\n\");\n                while(boundary !== -1){\n                    const message = buffer.slice(0, boundary);\n                    buffer = buffer.slice(boundary + 2);\n                    // Split on the first \":\" to extract the JSON part\n                    const lines = message.split(\"\\n\");\n                    let encodedData = \"\";\n                    for (const line of lines){\n                        const colonIndex = line.indexOf(\":\");\n                        if (colonIndex !== -1) encodedData += line.slice(colonIndex + 1).trim();\n                    }\n                    try {\n                        const jsonData = atob(encodedData);\n                        const parsedData = JSON.parse(jsonData);\n                        handleResponse(parsedData);\n                    } catch (error) {\n                        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).error(\"[RTVI] Failed to parse JSON:\", error);\n                        throw error;\n                    }\n                    boundary = buffer.indexOf(\"\\n\\n\");\n                }\n            }\n        } else {\n            // For regular non-streamed responses, parse and handle the data as JSON\n            const data = await response.json();\n            handleResponse(data);\n        }\n    } catch (error) {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).error(\"[RTVI] Error during fetch:\", error);\n        throw error;\n    }\n} /*\n//@TODO: implement abortController when mode changes / bad things happen\nexport async function dispatchAction(\n  this: RTVIClient,\n  action: RTVIActionRequest\n): Promise<RTVIActionResponse> {\n  const promise = new Promise((resolve, reject) => {\n    (async () => {\n      if (this.connected) {\n        return this._messageDispatcher.dispatch(action);\n      } else {\n        const actionUrl = this.constructUrl(\"action\");\n        try {\n          const result = await httpActionGenerator(\n            actionUrl,\n            action,\n            this.params,\n            (response) => {\n              this.handleMessage(response);\n            }\n          );\n          resolve(result);\n        } catch (error) {\n          reject(error);\n        }\n      }\n    })();\n  });\n\n  return promise as Promise<RTVIActionResponse>;\n}\n*/ \n\n\nvar $a7c324a73303ad55$exports = {};\n\n$parcel$export($a7c324a73303ad55$exports, \"RTVIClient\", () => $a7c324a73303ad55$export$fa42a01c1d60f4a1);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ \n\nvar $e3bad9cc25e327f7$exports = {};\n$e3bad9cc25e327f7$exports = JSON.parse(\"{\\\"name\\\":\\\"@pipecat-ai/client-js\\\",\\\"version\\\":\\\"0.4.1\\\",\\\"license\\\":\\\"BSD-2-Clause\\\",\\\"main\\\":\\\"dist/index.js\\\",\\\"module\\\":\\\"dist/index.module.js\\\",\\\"types\\\":\\\"dist/index.d.ts\\\",\\\"source\\\":\\\"src/index.ts\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/pipecat-ai/pipecat-client-web.git\\\"},\\\"files\\\":[\\\"dist\\\",\\\"package.json\\\",\\\"README.md\\\"],\\\"scripts\\\":{\\\"build\\\":\\\"jest --silent && parcel build --no-cache\\\",\\\"dev\\\":\\\"parcel watch\\\",\\\"lint\\\":\\\"eslint src/ --report-unused-disable-directives --max-warnings 0\\\",\\\"test\\\":\\\"jest\\\"},\\\"jest\\\":{\\\"preset\\\":\\\"ts-jest\\\",\\\"testEnvironment\\\":\\\"node\\\"},\\\"devDependencies\\\":{\\\"@jest/globals\\\":\\\"^29.7.0\\\",\\\"@types/clone-deep\\\":\\\"^4.0.4\\\",\\\"@types/jest\\\":\\\"^29.5.12\\\",\\\"@types/uuid\\\":\\\"^10.0.0\\\",\\\"eslint\\\":\\\"^9.11.1\\\",\\\"eslint-config-prettier\\\":\\\"^9.1.0\\\",\\\"eslint-plugin-simple-import-sort\\\":\\\"^12.1.1\\\",\\\"jest\\\":\\\"^29.7.0\\\",\\\"ts-jest\\\":\\\"^29.2.5\\\"},\\\"dependencies\\\":{\\\"@types/events\\\":\\\"^3.0.3\\\",\\\"clone-deep\\\":\\\"^4.0.1\\\",\\\"events\\\":\\\"^3.3.0\\\",\\\"typed-emitter\\\":\\\"^2.1.0\\\",\\\"uuid\\\":\\\"^10.0.0\\\"}}\");\n\n\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ var $8ead7b33b8402751$exports = {};\n\n$parcel$export($8ead7b33b8402751$exports, \"RTVIError\", () => $8ead7b33b8402751$export$59b4786f333aac02);\n$parcel$export($8ead7b33b8402751$exports, \"ConnectionTimeoutError\", () => $8ead7b33b8402751$export$c67992fa684a81a6);\n$parcel$export($8ead7b33b8402751$exports, \"StartBotError\", () => $8ead7b33b8402751$export$e7544ab812238a61);\n$parcel$export($8ead7b33b8402751$exports, \"TransportStartError\", () => $8ead7b33b8402751$export$e0624a511a2c4e9);\n$parcel$export($8ead7b33b8402751$exports, \"BotNotReadyError\", () => $8ead7b33b8402751$export$885fb96b850e8fbb);\n$parcel$export($8ead7b33b8402751$exports, \"ConfigUpdateError\", () => $8ead7b33b8402751$export$4eda4fd287fbbca5);\n$parcel$export($8ead7b33b8402751$exports, \"ActionEndpointNotSetError\", () => $8ead7b33b8402751$export$be839f0100cd3132);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ class $8ead7b33b8402751$export$59b4786f333aac02 extends Error {\n    constructor(message, status){\n        super(message);\n        this.status = status;\n    }\n}\nclass $8ead7b33b8402751$export$c67992fa684a81a6 extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message){\n        super(message ?? \"Bot did not enter ready state within the specified timeout period.\");\n    }\n}\nclass $8ead7b33b8402751$export$e7544ab812238a61 extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message, status){\n        super(message ?? `Failed to connect / invalid auth bundle from base url`, status ?? 500);\n        this.error = \"invalid-request-error\";\n    }\n}\nclass $8ead7b33b8402751$export$e0624a511a2c4e9 extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message){\n        super(message ?? \"Unable to connect to transport\");\n    }\n}\nclass $8ead7b33b8402751$export$885fb96b850e8fbb extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message){\n        super(message ?? \"Attempt to call action on transport when not in 'ready' state.\");\n    }\n}\nclass $8ead7b33b8402751$export$4eda4fd287fbbca5 extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message){\n        super(message ?? \"Unable to update configuration\");\n        this.status = 400;\n    }\n}\nclass $8ead7b33b8402751$export$be839f0100cd3132 extends $8ead7b33b8402751$export$59b4786f333aac02 {\n    constructor(message){\n        super(message ?? \"Action endpoint is not set\");\n    }\n}\n\n\nfunction $16f019d4d16917df$export$f1586721024c4dab(_target, propertyKey, descriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function(...args) {\n        if (this.state === \"ready\") return originalMethod.apply(this, args);\n        else throw new (0, $8ead7b33b8402751$export$885fb96b850e8fbb)(`Attempt to call ${propertyKey.toString()} when transport not in ready state. Await connect() first.`);\n    };\n    return descriptor;\n}\nfunction $16f019d4d16917df$export$808994d0d8c9acb3(states) {\n    return function(_target, propertyKey, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.get = function(...args) {\n            if (states.includes(this.state)) return originalMethod.apply(this, args);\n            else throw new (0, $8ead7b33b8402751$export$885fb96b850e8fbb)(`Attempt to call ${propertyKey.toString()} when transport not in ${states}.`);\n        };\n        return descriptor;\n    };\n}\nfunction $16f019d4d16917df$export$5c35b4fe6fa8c9a6(...states) {\n    states = [\n        \"ready\",\n        ...states\n    ];\n    return function(_target, propertyKey, descriptor) {\n        const originalGetter = descriptor.get;\n        descriptor.get = function() {\n            if (states.includes(this.state)) return originalGetter?.apply(this);\n            else throw new (0, $8ead7b33b8402751$export$885fb96b850e8fbb)(`Attempt to call ${propertyKey.toString()} when transport not in ${states}. Await connect() first.`);\n        };\n        return descriptor;\n    };\n}\n\n\n\nvar $f9fc0c57b9aaed9c$exports = {};\n\n$parcel$export($f9fc0c57b9aaed9c$exports, \"RTVIEvent\", () => $f9fc0c57b9aaed9c$export$6b4624d233c61fcb);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ var $f9fc0c57b9aaed9c$export$6b4624d233c61fcb;\n(function(RTVIEvent) {\n    RTVIEvent[\"MessageError\"] = \"messageError\";\n    RTVIEvent[\"Error\"] = \"error\";\n    RTVIEvent[\"Connected\"] = \"connected\";\n    RTVIEvent[\"Disconnected\"] = \"disconnected\";\n    RTVIEvent[\"TransportStateChanged\"] = \"transportStateChanged\";\n    RTVIEvent[\"Config\"] = \"config\";\n    RTVIEvent[\"ConfigDescribe\"] = \"configDescribe\";\n    RTVIEvent[\"ActionsAvailable\"] = \"actionsAvailable\";\n    RTVIEvent[\"ParticipantConnected\"] = \"participantConnected\";\n    RTVIEvent[\"ParticipantLeft\"] = \"participantLeft\";\n    RTVIEvent[\"TrackStarted\"] = \"trackStarted\";\n    RTVIEvent[\"TrackStopped\"] = \"trackStopped\";\n    RTVIEvent[\"ScreenTrackStarted\"] = \"screenTrackStarted\";\n    RTVIEvent[\"ScreenTrackStopped\"] = \"screenTrackStopped\";\n    RTVIEvent[\"ScreenShareError\"] = \"screenShareError\";\n    RTVIEvent[\"AvailableCamsUpdated\"] = \"availableCamsUpdated\";\n    RTVIEvent[\"AvailableMicsUpdated\"] = \"availableMicsUpdated\";\n    RTVIEvent[\"AvailableSpeakersUpdated\"] = \"availableSpeakersUpdated\";\n    RTVIEvent[\"CamUpdated\"] = \"camUpdated\";\n    RTVIEvent[\"MicUpdated\"] = \"micUpdated\";\n    RTVIEvent[\"SpeakerUpdated\"] = \"speakerUpdated\";\n    RTVIEvent[\"BotConnected\"] = \"botConnected\";\n    RTVIEvent[\"BotReady\"] = \"botReady\";\n    RTVIEvent[\"BotDisconnected\"] = \"botDisconnected\";\n    RTVIEvent[\"BotStartedSpeaking\"] = \"botStartedSpeaking\";\n    RTVIEvent[\"BotStoppedSpeaking\"] = \"botStoppedSpeaking\";\n    RTVIEvent[\"RemoteAudioLevel\"] = \"remoteAudioLevel\";\n    RTVIEvent[\"UserStartedSpeaking\"] = \"userStartedSpeaking\";\n    RTVIEvent[\"UserStoppedSpeaking\"] = \"userStoppedSpeaking\";\n    RTVIEvent[\"LocalAudioLevel\"] = \"localAudioLevel\";\n    RTVIEvent[\"Metrics\"] = \"metrics\";\n    RTVIEvent[\"UserTranscript\"] = \"userTranscript\";\n    RTVIEvent[\"BotTranscript\"] = \"botTranscript\";\n    RTVIEvent[\"BotLlmText\"] = \"botLlmText\";\n    RTVIEvent[\"BotLlmStarted\"] = \"botLlmStarted\";\n    RTVIEvent[\"BotLlmStopped\"] = \"botLlmStopped\";\n    RTVIEvent[\"BotTtsText\"] = \"botTtsText\";\n    RTVIEvent[\"BotTtsStarted\"] = \"botTtsStarted\";\n    RTVIEvent[\"BotTtsStopped\"] = \"botTtsStopped\";\n    RTVIEvent[\"LLMFunctionCall\"] = \"llmFunctionCall\";\n    RTVIEvent[\"LLMFunctionCallStart\"] = \"llmFunctionCallStart\";\n    RTVIEvent[\"LLMJsonCompletion\"] = \"llmJsonCompletion\";\n    RTVIEvent[\"StorageItemStored\"] = \"storageItemStored\";\n    RTVIEvent[\"BotLlmSearchResponse\"] = \"botLlmSearchResponse\";\n    RTVIEvent[\"ServerMessage\"] = \"serverMessage\";\n})($f9fc0c57b9aaed9c$export$6b4624d233c61fcb || ($f9fc0c57b9aaed9c$export$6b4624d233c61fcb = {}));\n\n\nvar $7614fb2168c523cc$exports = {};\n\n$parcel$export($7614fb2168c523cc$exports, \"RTVIClientHelper\", () => $7614fb2168c523cc$export$23bc637255b2a471);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ class $7614fb2168c523cc$export$23bc637255b2a471 {\n    constructor(options){\n        this._options = options;\n    }\n    set client(client) {\n        this._client = client;\n    }\n    set service(service) {\n        this._service = service;\n    }\n}\n\n\nvar $7afbbd59ebaa42bf$exports = {};\n\n$parcel$export($7afbbd59ebaa42bf$exports, \"LogLevel\", () => $7afbbd59ebaa42bf$export$243e62d78d3b544d);\n$parcel$export($7afbbd59ebaa42bf$exports, \"logger\", () => $7afbbd59ebaa42bf$export$af88d00dbe7f521);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ var $7afbbd59ebaa42bf$export$243e62d78d3b544d;\n(function(LogLevel) {\n    LogLevel[LogLevel[\"NONE\"] = 0] = \"NONE\";\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"INFO\"] = 3] = \"INFO\";\n    LogLevel[LogLevel[\"DEBUG\"] = 4] = \"DEBUG\";\n})($7afbbd59ebaa42bf$export$243e62d78d3b544d || ($7afbbd59ebaa42bf$export$243e62d78d3b544d = {}));\nclass $7afbbd59ebaa42bf$var$Logger {\n    constructor(){\n        this.level = $7afbbd59ebaa42bf$export$243e62d78d3b544d.DEBUG;\n    }\n    static getInstance() {\n        if (!$7afbbd59ebaa42bf$var$Logger.instance) $7afbbd59ebaa42bf$var$Logger.instance = new $7afbbd59ebaa42bf$var$Logger();\n        return $7afbbd59ebaa42bf$var$Logger.instance;\n    }\n    setLevel(level) {\n        this.level = level;\n    }\n    debug(...args) {\n        if (this.level >= $7afbbd59ebaa42bf$export$243e62d78d3b544d.DEBUG) console.debug(...args);\n    }\n    info(...args) {\n        if (this.level >= $7afbbd59ebaa42bf$export$243e62d78d3b544d.INFO) console.info(...args);\n    }\n    warn(...args) {\n        if (this.level >= $7afbbd59ebaa42bf$export$243e62d78d3b544d.WARN) console.warn(...args);\n    }\n    error(...args) {\n        if (this.level >= $7afbbd59ebaa42bf$export$243e62d78d3b544d.ERROR) console.error(...args);\n    }\n}\nconst $7afbbd59ebaa42bf$export$af88d00dbe7f521 = $7afbbd59ebaa42bf$var$Logger.getInstance();\n\n\nvar $b48f893ed1354c1e$exports = {};\n\n$parcel$export($b48f893ed1354c1e$exports, \"RTVI_MESSAGE_LABEL\", () => $b48f893ed1354c1e$export$882b13c7fda338f5);\n$parcel$export($b48f893ed1354c1e$exports, \"RTVIMessageType\", () => $b48f893ed1354c1e$export$38b3db05cbf0e240);\n$parcel$export($b48f893ed1354c1e$exports, \"RTVIMessage\", () => $b48f893ed1354c1e$export$69aa9ab0334b212);\n$parcel$export($b48f893ed1354c1e$exports, \"RTVIActionRequest\", () => $b48f893ed1354c1e$export$378529d7a8bead8b);\n$parcel$export($b48f893ed1354c1e$exports, \"MessageDispatcher\", () => $b48f893ed1354c1e$export$e9a960646cc432aa);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ \n\n\n\nconst $b48f893ed1354c1e$export$882b13c7fda338f5 = \"rtvi-ai\";\nvar $b48f893ed1354c1e$export$38b3db05cbf0e240;\n(function(RTVIMessageType) {\n    // Outbound\n    RTVIMessageType[\"CLIENT_READY\"] = \"client-ready\";\n    RTVIMessageType[\"UPDATE_CONFIG\"] = \"update-config\";\n    RTVIMessageType[\"GET_CONFIG\"] = \"get-config\";\n    RTVIMessageType[\"DESCRIBE_CONFIG\"] = \"describe-config\";\n    RTVIMessageType[\"DESCRIBE_ACTIONS\"] = \"describe-actions\";\n    RTVIMessageType[\"DISCONNECT_BOT\"] = \"disconnect-bot\";\n    RTVIMessageType[\"ACTION\"] = \"action\";\n    // Inbound\n    RTVIMessageType[\"BOT_READY\"] = \"bot-ready\";\n    RTVIMessageType[\"ERROR\"] = \"error\";\n    RTVIMessageType[\"ERROR_RESPONSE\"] = \"error-response\";\n    RTVIMessageType[\"CONFIG\"] = \"config\";\n    RTVIMessageType[\"CONFIG_AVAILABLE\"] = \"config-available\";\n    RTVIMessageType[\"CONFIG_ERROR\"] = \"config-error\";\n    RTVIMessageType[\"ACTIONS_AVAILABLE\"] = \"actions-available\";\n    RTVIMessageType[\"ACTION_RESPONSE\"] = \"action-response\";\n    RTVIMessageType[\"METRICS\"] = \"metrics\";\n    RTVIMessageType[\"USER_TRANSCRIPTION\"] = \"user-transcription\";\n    RTVIMessageType[\"BOT_TRANSCRIPTION\"] = \"bot-transcription\";\n    RTVIMessageType[\"USER_STARTED_SPEAKING\"] = \"user-started-speaking\";\n    RTVIMessageType[\"USER_STOPPED_SPEAKING\"] = \"user-stopped-speaking\";\n    RTVIMessageType[\"BOT_STARTED_SPEAKING\"] = \"bot-started-speaking\";\n    RTVIMessageType[\"BOT_STOPPED_SPEAKING\"] = \"bot-stopped-speaking\";\n    // Service-specific\n    RTVIMessageType[\"USER_LLM_TEXT\"] = \"user-llm-text\";\n    RTVIMessageType[\"BOT_LLM_TEXT\"] = \"bot-llm-text\";\n    RTVIMessageType[\"BOT_LLM_STARTED\"] = \"bot-llm-started\";\n    RTVIMessageType[\"BOT_LLM_STOPPED\"] = \"bot-llm-stopped\";\n    RTVIMessageType[\"BOT_TTS_TEXT\"] = \"bot-tts-text\";\n    RTVIMessageType[\"BOT_TTS_STARTED\"] = \"bot-tts-started\";\n    RTVIMessageType[\"BOT_TTS_STOPPED\"] = \"bot-tts-stopped\";\n    RTVIMessageType[\"BOT_LLM_SEARCH_RESPONSE\"] = \"bot-llm-search-response\";\n    // Storage\n    RTVIMessageType[\"STORAGE_ITEM_STORED\"] = \"storage-item-stored\";\n    // Server-to-client messages\n    RTVIMessageType[\"SERVER_MESSAGE\"] = \"server-message\";\n})($b48f893ed1354c1e$export$38b3db05cbf0e240 || ($b48f893ed1354c1e$export$38b3db05cbf0e240 = {}));\nclass $b48f893ed1354c1e$export$69aa9ab0334b212 {\n    constructor(type, data, id){\n        this.label = $b48f893ed1354c1e$export$882b13c7fda338f5;\n        this.type = type;\n        this.data = data;\n        this.id = id || (0, uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])().slice(0, 8);\n    }\n    // Outbound message types\n    static clientReady() {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.CLIENT_READY, {});\n    }\n    static updateConfig(config, interrupt = false) {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.UPDATE_CONFIG, {\n            config: config,\n            interrupt: interrupt\n        });\n    }\n    static describeConfig() {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.DESCRIBE_CONFIG, {});\n    }\n    static getBotConfig() {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.GET_CONFIG, {});\n    }\n    static describeActions() {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.DESCRIBE_ACTIONS, {});\n    }\n    static disconnectBot() {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.DISCONNECT_BOT, {});\n    }\n    static error(message, fatal = false) {\n        return new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.ERROR, {\n            message: message,\n            fatal: fatal\n        });\n    }\n}\nclass $b48f893ed1354c1e$export$378529d7a8bead8b extends $b48f893ed1354c1e$export$69aa9ab0334b212 {\n    constructor(data){\n        super($b48f893ed1354c1e$export$38b3db05cbf0e240.ACTION, data);\n    }\n}\nclass $b48f893ed1354c1e$export$e9a960646cc432aa {\n    constructor(client){\n        this._queue = new Array();\n        this._gcTime = 10000; // How long to wait before resolving the message\n        this._queue = [];\n        this._client = client;\n    }\n    dispatch(message) {\n        const promise = new Promise((resolve, reject)=>{\n            this._queue.push({\n                message: message,\n                timestamp: Date.now(),\n                resolve: resolve,\n                reject: reject\n            });\n        });\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] dispatch\", message);\n        this._client.sendMessage(message);\n        this._gc();\n        return promise;\n    }\n    async dispatchAction(action, onMessage) {\n        const promise = new Promise((resolve, reject)=>{\n            this._queue.push({\n                message: action,\n                timestamp: Date.now(),\n                resolve: resolve,\n                reject: reject\n            });\n        });\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] action\", action);\n        if (this._client.connected) // Send message to transport when connected\n        this._client.sendMessage(action);\n        else {\n            if (!this._client.params.endpoints?.action) {\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).error(\"[MessageDispatcher] Action endpoint is required when dispatching action in disconnected state\");\n                throw new (0, $8ead7b33b8402751$export$be839f0100cd3132)();\n            }\n            const actionUrl = this._client.constructUrl(\"action\");\n            try {\n                // Dispatch action via HTTP when disconnected\n                await (0, $4bb349f22aee5185$export$8728b60ea57bf43e)(actionUrl, action, this._client.params, (response)=>{\n                    onMessage(response);\n                });\n            // On HTTP success (resolve), send `action` message (for callbacks)\n            } catch (e) {\n                onMessage(new $b48f893ed1354c1e$export$69aa9ab0334b212($b48f893ed1354c1e$export$38b3db05cbf0e240.ERROR_RESPONSE, `Action endpoint '${actionUrl}' returned an error response`, action.id));\n            }\n        }\n        this._gc();\n        return promise;\n    }\n    _resolveReject(message, resolve = true) {\n        const queuedMessage = this._queue.find((msg)=>msg.message.id === message.id);\n        if (queuedMessage) {\n            if (resolve) {\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] Resolve\", message);\n                queuedMessage.resolve(message.type === $b48f893ed1354c1e$export$38b3db05cbf0e240.ACTION_RESPONSE ? message : message);\n            } else {\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] Reject\", message);\n                queuedMessage.reject(message);\n            }\n            // Remove message from queue\n            this._queue = this._queue.filter((msg)=>msg.message.id !== message.id);\n            (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] Queue\", this._queue);\n        }\n        return message;\n    }\n    resolve(message) {\n        return this._resolveReject(message, true);\n    }\n    reject(message) {\n        return this._resolveReject(message, false);\n    }\n    _gc() {\n        this._queue = this._queue.filter((msg)=>{\n            return Date.now() - msg.timestamp < this._gcTime;\n        });\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[MessageDispatcher] GC\", this._queue);\n    }\n}\n\n\nvar $4086f06442fcb7d7$exports = {};\n\n$parcel$export($4086f06442fcb7d7$exports, \"Transport\", () => $4086f06442fcb7d7$export$86495b081fef8e52);\n$parcel$export($4086f06442fcb7d7$exports, \"TransportWrapper\", () => $4086f06442fcb7d7$export$82b6ede160a64a3c);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ class $4086f06442fcb7d7$export$86495b081fef8e52 {\n    constructor(){\n        this._state = \"disconnected\";\n        this._expiry = undefined;\n    }\n    get expiry() {\n        return this._expiry;\n    }\n}\nclass $4086f06442fcb7d7$export$82b6ede160a64a3c {\n    constructor(transport){\n        this._transport = transport;\n        this._proxy = new Proxy(this._transport, {\n            get: (target, prop, receiver)=>{\n                if (typeof target[prop] === \"function\") {\n                    let errMsg;\n                    switch(String(prop)){\n                        // Disable methods that modify the lifecycle of the call. These operations\n                        // should be performed via the RTVI client in order to keep state in sync.\n                        case \"initialize\":\n                            errMsg = `Direct calls to initialize() are disabled and used internally by the RTVIClient.`;\n                            break;\n                        case \"initDevices\":\n                            errMsg = `Direct calls to initDevices() are disabled. Please use the RTVIClient.initDevices() wrapper or let RTVIClient.connect() call it for you.`;\n                            break;\n                        case \"sendReadyMessage\":\n                            errMsg = `Direct calls to sendReadyMessage() are disabled and used internally by the RTVIClient.`;\n                            break;\n                        case \"connect\":\n                            errMsg = `Direct calls to connect() are disabled. Please use the RTVIClient.connect() wrapper.`;\n                            break;\n                        case \"disconnect\":\n                            errMsg = `Direct calls to disconnect() are disabled. Please use the RTVIClient.disconnect() wrapper.`;\n                            break;\n                    }\n                    if (errMsg) return ()=>{\n                        throw new Error(errMsg);\n                    };\n                    // Forward other method calls\n                    return (...args)=>{\n                        return target[prop](...args);\n                    };\n                }\n                // Forward property access\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n    get proxy() {\n        return this._proxy;\n    }\n}\n\n\nvar $a7c324a73303ad55$var$__decorate =  false || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst $a7c324a73303ad55$var$defaultEndpoints = {\n    connect: \"/connect\",\n    action: \"/action\"\n};\nclass $a7c324a73303ad55$var$RTVIEventEmitter extends (0, (events__WEBPACK_IMPORTED_MODULE_1___default())) {\n}\nclass $a7c324a73303ad55$export$fa42a01c1d60f4a1 extends $a7c324a73303ad55$var$RTVIEventEmitter {\n    constructor(options){\n        super();\n        this.params = {\n            ...options.params,\n            endpoints: {\n                ...$a7c324a73303ad55$var$defaultEndpoints,\n                ...options.params.endpoints ?? {}\n            }\n        };\n        this._helpers = {};\n        this._transport = options.transport;\n        this._transportWrapper = new (0, $4086f06442fcb7d7$export$82b6ede160a64a3c)(this._transport);\n        // Wrap transport callbacks with event triggers\n        // This allows for either functional callbacks or .on / .off event listeners\n        const wrappedCallbacks = {\n            ...options.callbacks,\n            onMessageError: (message)=>{\n                options?.callbacks?.onMessageError?.(message);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).MessageError, message);\n            },\n            onError: (message)=>{\n                options?.callbacks?.onError?.(message);\n                try {\n                    this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).Error, message);\n                } catch (e) {\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"Could not emit error\", message);\n                }\n                const data = message.data;\n                if (data?.fatal) {\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).error(\"Fatal error reported. Disconnecting...\");\n                    this.disconnect();\n                }\n            },\n            onConnected: ()=>{\n                options?.callbacks?.onConnected?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).Connected);\n            },\n            onDisconnected: ()=>{\n                options?.callbacks?.onDisconnected?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).Disconnected);\n            },\n            onTransportStateChanged: (state)=>{\n                options?.callbacks?.onTransportStateChanged?.(state);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).TransportStateChanged, state);\n            },\n            onConfig: (config)=>{\n                options?.callbacks?.onConfig?.(config);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).Config, config);\n            },\n            onConfigDescribe: (configDescription)=>{\n                options?.callbacks?.onConfigDescribe?.(configDescription);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ConfigDescribe, configDescription);\n            },\n            onActionsAvailable: (actionsAvailable)=>{\n                options?.callbacks?.onActionsAvailable?.(actionsAvailable);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ActionsAvailable, actionsAvailable);\n            },\n            onParticipantJoined: (p)=>{\n                options?.callbacks?.onParticipantJoined?.(p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ParticipantConnected, p);\n            },\n            onParticipantLeft: (p)=>{\n                options?.callbacks?.onParticipantLeft?.(p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ParticipantLeft, p);\n            },\n            onTrackStarted: (track, p)=>{\n                options?.callbacks?.onTrackStarted?.(track, p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).TrackStarted, track, p);\n            },\n            onTrackStopped: (track, p)=>{\n                options?.callbacks?.onTrackStopped?.(track, p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).TrackStopped, track, p);\n            },\n            onScreenTrackStarted: (track, p)=>{\n                options?.callbacks?.onScreenTrackStarted?.(track, p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ScreenTrackStarted, track, p);\n            },\n            onScreenTrackStopped: (track, p)=>{\n                options?.callbacks?.onScreenTrackStopped?.(track, p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ScreenTrackStopped, track, p);\n            },\n            onScreenShareError: (errorMessage)=>{\n                options?.callbacks?.onScreenShareError?.(errorMessage);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ScreenShareError, errorMessage);\n            },\n            onAvailableCamsUpdated: (cams)=>{\n                options?.callbacks?.onAvailableCamsUpdated?.(cams);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).AvailableCamsUpdated, cams);\n            },\n            onAvailableMicsUpdated: (mics)=>{\n                options?.callbacks?.onAvailableMicsUpdated?.(mics);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).AvailableMicsUpdated, mics);\n            },\n            onAvailableSpeakersUpdated: (speakers)=>{\n                options?.callbacks?.onAvailableSpeakersUpdated?.(speakers);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).AvailableSpeakersUpdated, speakers);\n            },\n            onCamUpdated: (cam)=>{\n                options?.callbacks?.onCamUpdated?.(cam);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).CamUpdated, cam);\n            },\n            onMicUpdated: (mic)=>{\n                options?.callbacks?.onMicUpdated?.(mic);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).MicUpdated, mic);\n            },\n            onSpeakerUpdated: (speaker)=>{\n                options?.callbacks?.onSpeakerUpdated?.(speaker);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).SpeakerUpdated, speaker);\n            },\n            onBotConnected: (p)=>{\n                options?.callbacks?.onBotConnected?.(p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotConnected, p);\n            },\n            onBotReady: (botReadyData)=>{\n                options?.callbacks?.onBotReady?.(botReadyData);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotReady, botReadyData);\n            },\n            onBotDisconnected: (p)=>{\n                options?.callbacks?.onBotDisconnected?.(p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotDisconnected, p);\n            },\n            onBotStartedSpeaking: ()=>{\n                options?.callbacks?.onBotStartedSpeaking?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotStartedSpeaking);\n            },\n            onBotStoppedSpeaking: ()=>{\n                options?.callbacks?.onBotStoppedSpeaking?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotStoppedSpeaking);\n            },\n            onRemoteAudioLevel: (level, p)=>{\n                options?.callbacks?.onRemoteAudioLevel?.(level, p);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).RemoteAudioLevel, level, p);\n            },\n            onUserStartedSpeaking: ()=>{\n                options?.callbacks?.onUserStartedSpeaking?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).UserStartedSpeaking);\n            },\n            onUserStoppedSpeaking: ()=>{\n                options?.callbacks?.onUserStoppedSpeaking?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).UserStoppedSpeaking);\n            },\n            onLocalAudioLevel: (level)=>{\n                options?.callbacks?.onLocalAudioLevel?.(level);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).LocalAudioLevel, level);\n            },\n            onUserTranscript: (data)=>{\n                options?.callbacks?.onUserTranscript?.(data);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).UserTranscript, data);\n            },\n            onBotTranscript: (text)=>{\n                options?.callbacks?.onBotTranscript?.(text);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotTranscript, text);\n            },\n            onBotLlmText: (text)=>{\n                options?.callbacks?.onBotLlmText?.(text);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotLlmText, text);\n            },\n            onBotLlmStarted: ()=>{\n                options?.callbacks?.onBotLlmStarted?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotLlmStarted);\n            },\n            onBotLlmStopped: ()=>{\n                options?.callbacks?.onBotLlmStopped?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotLlmStopped);\n            },\n            onBotTtsText: (text)=>{\n                options?.callbacks?.onBotTtsText?.(text);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotTtsText, text);\n            },\n            onBotTtsStarted: ()=>{\n                options?.callbacks?.onBotTtsStarted?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotTtsStarted);\n            },\n            onBotTtsStopped: ()=>{\n                options?.callbacks?.onBotTtsStopped?.();\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotTtsStopped);\n            },\n            onStorageItemStored: (data)=>{\n                options?.callbacks?.onStorageItemStored?.(data);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).StorageItemStored, data);\n            }\n        };\n        // Update options to reference wrapped callbacks and config defaults\n        this._options = {\n            ...options,\n            callbacks: wrappedCallbacks,\n            enableMic: options.enableMic ?? true,\n            enableCam: options.enableCam ?? false\n        };\n        // Instantiate the transport class and bind message handler\n        this._initialize();\n        // Get package version number\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Initialized\", this.version);\n    }\n    constructUrl(endpoint) {\n        if (!this.params.baseUrl) throw new $8ead7b33b8402751$export$59b4786f333aac02(\"Base URL not set. Please set rtviClient.params.baseUrl\");\n        const baseUrl = this.params.baseUrl.replace(/\\/+$/, \"\");\n        return baseUrl + (this.params.endpoints?.[endpoint] ?? \"\");\n    }\n    setLogLevel(level) {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).setLevel(level);\n    }\n    // ------ Transport methods\n    /**\n     * Initialize local media devices\n     */ async initDevices() {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Initializing devices...\");\n        await this._transport.initDevices();\n    }\n    /**\n     * Connect the voice client session with chosen transport\n     * Call async (await) to handle errors\n     */ async connect() {\n        if ([\n            \"authenticating\",\n            \"connecting\",\n            \"connected\",\n            \"ready\"\n        ].includes(this._transport.state)) throw new $8ead7b33b8402751$export$59b4786f333aac02(\"Voice client has already been started. Please call disconnect() before starting again.\");\n        this._abortController = new AbortController();\n        // Establish transport session and await bot ready signal\n        return new Promise((resolve, reject)=>{\n            (async ()=>{\n                this._startResolve = resolve;\n                if (this._transport.state === \"disconnected\") await this._transport.initDevices();\n                this._transport.state = \"authenticating\";\n                // Set a timer for the bot to enter a ready state, otherwise abort the attempt\n                if (this._options.timeout) this._handshakeTimeout = setTimeout(async ()=>{\n                    this._abortController?.abort();\n                    await this.disconnect();\n                    this._transport.state = \"error\";\n                    reject(new $8ead7b33b8402751$export$c67992fa684a81a6());\n                }, this._options.timeout);\n                let authBundle;\n                const customConnectHandler = this._options.customConnectHandler;\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Start params\", this.params);\n                this.params = {\n                    ...this.params,\n                    requestData: {\n                        ...this.params.requestData,\n                        rtvi_client_version: this.version\n                    }\n                };\n                if (!this.params.baseUrl && !this.params.endpoints?.connect) {\n                    // If baseUrl and endpoints.connect are not set, bypass the handshake and connect directly\n                    // This is useful with transports that do not require service side auth, especially in local development\n                    // Note: this is not recommended for production use, see [docs link]\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Connecting directly (skipping handshake / auth)...\");\n                    clearTimeout(this._handshakeTimeout);\n                } else {\n                    const connectUrl = this.constructUrl(\"connect\");\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Connecting...\", connectUrl);\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Start params\", this.params);\n                    try {\n                        if (customConnectHandler) authBundle = await customConnectHandler(this.params, this._handshakeTimeout, this._abortController);\n                        else authBundle = await fetch(connectUrl, {\n                            method: \"POST\",\n                            mode: \"cors\",\n                            headers: new Headers({\n                                \"Content-Type\": \"application/json\",\n                                ...Object.fromEntries((this.params.headers ?? new Headers()).entries())\n                            }),\n                            body: JSON.stringify({\n                                config: this.params.config,\n                                ...this.params.services ? {\n                                    services: this.params.services\n                                } : {},\n                                ...this.params.requestData\n                            }),\n                            signal: this._abortController?.signal\n                        }).then((res)=>{\n                            clearTimeout(this._handshakeTimeout);\n                            if (res.ok) return res.json();\n                            return Promise.reject(res);\n                        });\n                    } catch (e) {\n                        clearTimeout(this._handshakeTimeout);\n                        // Handle errors if the request was not aborted\n                        if (this._abortController?.signal.aborted) return;\n                        this._transport.state = \"error\";\n                        if (e instanceof Response) {\n                            const errorResp = await e.json();\n                            reject(new $8ead7b33b8402751$export$e7544ab812238a61(errorResp.info ?? errorResp.detail ?? e.statusText, e.status));\n                        } else reject(new $8ead7b33b8402751$export$e7544ab812238a61());\n                        return;\n                    }\n                    (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Auth bundle received\", authBundle);\n                }\n                try {\n                    await this._transport.connect(authBundle, this._abortController);\n                    await this._transport.sendReadyMessage();\n                } catch (e) {\n                    clearTimeout(this._handshakeTimeout);\n                    this.disconnect();\n                    reject(e);\n                    return;\n                }\n            })();\n        });\n    }\n    /**\n     * Disconnect the voice client from the transport\n     * Reset / reinitialize transport and abort any pending requests\n     */ async disconnect() {\n        if (this._abortController) this._abortController.abort();\n        clearTimeout(this._handshakeTimeout);\n        await this._transport.disconnect();\n        this._messageDispatcher = new (0, $b48f893ed1354c1e$export$e9a960646cc432aa)(this);\n    }\n    _initialize() {\n        this._transport.initialize(this._options, this.handleMessage.bind(this));\n        // Create a new message dispatch queue for async message handling\n        this._messageDispatcher = new (0, $b48f893ed1354c1e$export$e9a960646cc432aa)(this);\n    }\n    /**\n     * Get the current state of the transport\n     */ get connected() {\n        return [\n            \"connected\",\n            \"ready\"\n        ].includes(this._transport.state);\n    }\n    get transport() {\n        return this._transportWrapper.proxy;\n    }\n    get state() {\n        return this._transport.state;\n    }\n    get version() {\n        return (0, (/*@__PURE__*/$parcel$interopDefault($e3bad9cc25e327f7$exports))).version;\n    }\n    // ------ Device methods\n    async getAllMics() {\n        return await this._transport.getAllMics();\n    }\n    async getAllCams() {\n        return await this._transport.getAllCams();\n    }\n    async getAllSpeakers() {\n        return await this._transport.getAllSpeakers();\n    }\n    get selectedMic() {\n        return this._transport.selectedMic;\n    }\n    get selectedCam() {\n        return this._transport.selectedCam;\n    }\n    get selectedSpeaker() {\n        return this._transport.selectedSpeaker;\n    }\n    updateMic(micId) {\n        this._transport.updateMic(micId);\n    }\n    updateCam(camId) {\n        this._transport.updateCam(camId);\n    }\n    updateSpeaker(speakerId) {\n        this._transport.updateSpeaker(speakerId);\n    }\n    enableMic(enable) {\n        this._transport.enableMic(enable);\n    }\n    get isMicEnabled() {\n        return this._transport.isMicEnabled;\n    }\n    enableCam(enable) {\n        this._transport.enableCam(enable);\n    }\n    get isCamEnabled() {\n        return this._transport.isCamEnabled;\n    }\n    tracks() {\n        return this._transport.tracks();\n    }\n    enableScreenShare(enable) {\n        return this._transport.enableScreenShare(enable);\n    }\n    get isSharingScreen() {\n        return this._transport.isSharingScreen;\n    }\n    // ------ Config methods\n    /**\n     * Request the bot to send the current configuration\n     * @returns Promise<RTVIClientConfigOption[]> - Promise that resolves with the bot's configuration\n     */ async getConfig() {\n        const configMsg = await this._messageDispatcher.dispatch((0, $b48f893ed1354c1e$export$69aa9ab0334b212).getBotConfig());\n        return configMsg.data.config;\n    }\n    /**\n     * Update pipeline and services\n     * @param config - RTVIClientConfigOption[] partial object with the new configuration\n     * @param interrupt - boolean flag to interrupt the current pipeline, or wait until the next turn\n     * @returns Promise<RTVIMessage> - Promise that resolves with the updated configuration\n     */ async updateConfig(config, interrupt = false) {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Client] Updating config\", config);\n        // Only send the partial config if the bot is ready to prevent\n        // potential racing conditions whilst pipeline is instantiating\n        return this._messageDispatcher.dispatch((0, $b48f893ed1354c1e$export$69aa9ab0334b212).updateConfig(config, interrupt));\n    }\n    /**\n     * Request bot describe the current configuration options\n     * @returns Promise<unknown> - Promise that resolves with the bot's configuration description\n     */ async describeConfig() {\n        return this._messageDispatcher.dispatch((0, $b48f893ed1354c1e$export$69aa9ab0334b212).describeConfig());\n    }\n    /**\n     * Returns configuration options for specified service key\n     * @param serviceKey - Service name to get options for (e.g. \"llm\")\n     * @param config? - Optional RTVIClientConfigOption[] to query (vs. using remote config)\n     * @returns RTVIClientConfigOption | undefined - Configuration options array for the service with specified key or undefined\n     */ async getServiceOptionsFromConfig(serviceKey, config) {\n        if (!config && this.state !== \"ready\") throw new $8ead7b33b8402751$export$885fb96b850e8fbb(\"getServiceOptionsFromConfig called without config array before bot is ready\");\n        return Promise.resolve().then(async ()=>{\n            // Check if we have registered service with name service\n            if (!serviceKey) {\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"Target service name is required\");\n                return undefined;\n            }\n            const passedConfig = config ?? await this.getConfig();\n            // Find matching service name in the config and update the messages\n            const configServiceKey = passedConfig.find((config)=>config.service === serviceKey);\n            if (!configServiceKey) {\n                (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"No service with name \" + serviceKey + \" not found in config\");\n                return undefined;\n            }\n            // Return a new object, as to not mutate existing state\n            return configServiceKey;\n        });\n    }\n    /**\n     * Returns configuration option value (unknown) for specified service key and option name\n     * @param serviceKey - Service name to get options for (e.g. \"llm\")\n     * @optional option Name of option return from the config (e.g. \"model\")\n     * @returns Promise<unknown | undefined> - Service configuration option value or undefined\n     */ async getServiceOptionValueFromConfig(serviceKey, option, config) {\n        const configServiceKey = await this.getServiceOptionsFromConfig(serviceKey, config);\n        if (!configServiceKey) {\n            (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"Service with name \" + serviceKey + \" not found in config\");\n            return undefined;\n        }\n        // Find matching option key in the service config\n        const optionValue = configServiceKey.options.find((o)=>o.name === option);\n        return optionValue ? optionValue.value : undefined;\n    }\n    _updateOrAddOption(existingOptions, newOption) {\n        const existingOptionIndex = existingOptions.findIndex((item)=>item.name === newOption.name);\n        if (existingOptionIndex !== -1) // Update existing option\n        return existingOptions.map((item, index)=>index === existingOptionIndex ? {\n                ...item,\n                value: newOption.value\n            } : item);\n        else // Add new option\n        return [\n            ...existingOptions,\n            {\n                name: newOption.name,\n                value: newOption.value\n            }\n        ];\n    }\n    /**\n     * Returns config with updated option(s) for specified service key and option name\n     * Note: does not update current config, only returns a new object (call updateConfig to apply changes)\n     * @param serviceKey - Service name to get options for (e.g. \"llm\")\n     * @param option - Service name to get options for (e.g. \"model\")\n     * @param config - Optional RTVIClientConfigOption[] to update (vs. using current config)\n     * @returns Promise<RTVIClientConfigOption[] | undefined> - Configuration options array with updated option(s) or undefined\n     */ async setServiceOptionInConfig(serviceKey, option, config) {\n        const newConfig = (0, (clone_deep__WEBPACK_IMPORTED_MODULE_0___default()))(config ?? await this.getConfig());\n        const serviceOptions = await this.getServiceOptionsFromConfig(serviceKey, newConfig);\n        if (!serviceOptions) {\n            (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"Service with name '\" + serviceKey + \"' not found in config\");\n            return newConfig;\n        }\n        const optionsArray = Array.isArray(option) ? option : [\n            option\n        ];\n        for (const opt of optionsArray){\n            const existingItem = newConfig.find((item)=>item.service === serviceKey);\n            const updatedOptions = existingItem ? this._updateOrAddOption(existingItem.options, opt) : [\n                {\n                    name: opt.name,\n                    value: opt.value\n                }\n            ];\n            if (existingItem) existingItem.options = updatedOptions;\n            else newConfig.push({\n                service: serviceKey,\n                options: updatedOptions\n            });\n        }\n        return newConfig;\n    }\n    /**\n     * Returns config object with updated properties from passed array.\n     * @param configOptions - Array of RTVIClientConfigOption[] to update\n     * @param config? - Optional RTVIClientConfigOption[] to update (vs. using current config)\n     * @returns Promise<RTVIClientConfigOption[]> - Configuration options\n     */ async setConfigOptions(configOptions, config) {\n        let accumulator = (0, (clone_deep__WEBPACK_IMPORTED_MODULE_0___default()))(config ?? await this.getConfig());\n        for (const configOption of configOptions)accumulator = await this.setServiceOptionInConfig(configOption.service, configOption.options, accumulator) || accumulator;\n        return accumulator;\n    }\n    // ------ Actions\n    /**\n     * Dispatch an action message to the bot or http single-turn endpoint\n     */ async action(action) {\n        return this._messageDispatcher.dispatchAction(new (0, $b48f893ed1354c1e$export$378529d7a8bead8b)(action), this.handleMessage.bind(this));\n    }\n    /**\n     * Describe available / registered actions the bot has\n     * @returns Promise<unknown> - Promise that resolves with the bot's actions\n     */ async describeActions() {\n        return this._messageDispatcher.dispatch((0, $b48f893ed1354c1e$export$69aa9ab0334b212).describeActions());\n    }\n    // ------ Transport methods\n    /**\n     * Get the session expiry time for the transport session (if applicable)\n     * @returns number - Expiry time in milliseconds\n     */ get transportExpiry() {\n        return this._transport.expiry;\n    }\n    // ------ Messages\n    /**\n     * Directly send a message to the bot via the transport\n     * @param message - RTVIMessage object to send\n     */ sendMessage(message) {\n        this._transport.sendMessage(message);\n    }\n    /**\n     * Disconnects the bot, but keeps the session alive\n     */ disconnectBot() {\n        this._transport.sendMessage(new (0, $b48f893ed1354c1e$export$69aa9ab0334b212)((0, $b48f893ed1354c1e$export$38b3db05cbf0e240).DISCONNECT_BOT, {}));\n    }\n    handleMessage(ev) {\n        (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(\"[RTVI Message]\", ev);\n        switch(ev.type){\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_READY:\n                clearTimeout(this._handshakeTimeout);\n                this._startResolve?.(ev.data);\n                this._options.callbacks?.onBotReady?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).CONFIG_AVAILABLE:\n                this._messageDispatcher.resolve(ev);\n                this._options.callbacks?.onConfigDescribe?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).CONFIG:\n                {\n                    const resp = this._messageDispatcher.resolve(ev);\n                    this._options.callbacks?.onConfig?.(resp.data.config);\n                    break;\n                }\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).ACTIONS_AVAILABLE:\n                this._messageDispatcher.resolve(ev);\n                this._options.callbacks?.onActionsAvailable?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).ACTION_RESPONSE:\n                this._messageDispatcher.resolve(ev);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).ERROR_RESPONSE:\n                {\n                    const resp = this._messageDispatcher.reject(ev);\n                    this._options.callbacks?.onMessageError?.(resp);\n                    break;\n                }\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).ERROR:\n                this._options.callbacks?.onError?.(ev);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).USER_STARTED_SPEAKING:\n                this._options.callbacks?.onUserStartedSpeaking?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).USER_STOPPED_SPEAKING:\n                this._options.callbacks?.onUserStoppedSpeaking?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_STARTED_SPEAKING:\n                this._options.callbacks?.onBotStartedSpeaking?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_STOPPED_SPEAKING:\n                this._options.callbacks?.onBotStoppedSpeaking?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).USER_TRANSCRIPTION:\n                {\n                    const TranscriptData = ev.data;\n                    this._options.callbacks?.onUserTranscript?.(TranscriptData);\n                    break;\n                }\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_TRANSCRIPTION:\n                this._options.callbacks?.onBotTranscript?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_LLM_TEXT:\n                this._options.callbacks?.onBotLlmText?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_LLM_STARTED:\n                this._options.callbacks?.onBotLlmStarted?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_LLM_STOPPED:\n                this._options.callbacks?.onBotLlmStopped?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_TTS_TEXT:\n                this._options.callbacks?.onBotTtsText?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_TTS_STARTED:\n                this._options.callbacks?.onBotTtsStarted?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_TTS_STOPPED:\n                this._options.callbacks?.onBotTtsStopped?.();\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).BOT_LLM_SEARCH_RESPONSE:\n                this._options.callbacks?.onBotLlmSearchResponse?.(ev.data);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).BotLlmSearchResponse, ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).METRICS:\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).Metrics, ev.data);\n                this._options.callbacks?.onMetrics?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).STORAGE_ITEM_STORED:\n                this._options.callbacks?.onStorageItemStored?.(ev.data);\n                break;\n            case (0, $b48f893ed1354c1e$export$38b3db05cbf0e240).SERVER_MESSAGE:\n                this._options.callbacks?.onServerMessage?.(ev.data);\n                this.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).ServerMessage, ev.data);\n                break;\n            default:\n                {\n                    let match = false;\n                    // Pass message to registered helpers\n                    for (const helper of Object.values(this._helpers))if (helper.getMessageTypes().includes(ev.type)) {\n                        match = true;\n                        helper.handleMessage(ev);\n                    }\n                    if (!match) this._options.callbacks?.onGenericMessage?.(ev.data);\n                }\n        }\n    }\n    // ------ Helpers\n    /**\n     * Register a new helper to the client\n     * This (optionally) provides a way to reference helpers directly\n     * from the client and use the event dispatcher\n     * @param service - Target service for this helper\n     * @param helper - Helper instance\n     * @returns RTVIClientHelper - Registered helper instance\n     */ registerHelper(service, helper) {\n        if (this._helpers[service]) throw new Error(`Helper with name '${service}' already registered`);\n        // Check helper is instance of RTVIClientHelper\n        if (!(helper instanceof (0, $7614fb2168c523cc$export$23bc637255b2a471))) throw new Error(`Helper must be an instance of RTVIClientHelper`);\n        helper.service = service;\n        helper.client = this;\n        this._helpers[service] = helper;\n        return this._helpers[service];\n    }\n    getHelper(service) {\n        const helper = this._helpers[service];\n        if (!helper) {\n            (0, $7afbbd59ebaa42bf$export$af88d00dbe7f521).debug(`Helper targeting service '${service}' not found`);\n            return undefined;\n        }\n        return helper;\n    }\n    unregisterHelper(service) {\n        if (!this._helpers[service]) return;\n        delete this._helpers[service];\n    }\n}\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"getConfig\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"updateConfig\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"describeConfig\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"describeActions\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$5c35b4fe6fa8c9a6)(\"connected\", \"ready\")\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"transportExpiry\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"sendMessage\", null);\n$a7c324a73303ad55$var$__decorate([\n    (0, $16f019d4d16917df$export$f1586721024c4dab)\n], $a7c324a73303ad55$export$fa42a01c1d60f4a1.prototype, \"disconnectBot\", null);\n\n\n\n\n\nvar $0908f693e3e0724c$exports = {};\n\n$parcel$export($0908f693e3e0724c$exports, \"LLMMessageType\", () => $0908f693e3e0724c$export$441bcd2e10762760);\n$parcel$export($0908f693e3e0724c$exports, \"LLMActionType\", () => $0908f693e3e0724c$export$43cdfb26f790451);\n$parcel$export($0908f693e3e0724c$exports, \"LLMHelper\", () => $0908f693e3e0724c$export$3cf39a62d076dd5c);\n/**\n * Copyright (c) 2024, Daily.\n *\n * SPDX-License-Identifier: BSD-2-Clause\n */ \n\n\n\nvar $0908f693e3e0724c$export$441bcd2e10762760;\n(function(LLMMessageType) {\n    LLMMessageType[\"LLM_FUNCTION_CALL\"] = \"llm-function-call\";\n    LLMMessageType[\"LLM_FUNCTION_CALL_START\"] = \"llm-function-call-start\";\n    LLMMessageType[\"LLM_FUNCTION_CALL_RESULT\"] = \"llm-function-call-result\";\n    LLMMessageType[\"LLM_JSON_COMPLETION\"] = \"llm-json-completion\";\n})($0908f693e3e0724c$export$441bcd2e10762760 || ($0908f693e3e0724c$export$441bcd2e10762760 = {}));\nvar $0908f693e3e0724c$export$43cdfb26f790451;\n(function(LLMActionType) {\n    LLMActionType[\"APPEND_TO_MESSAGES\"] = \"append_to_messages\";\n    LLMActionType[\"GET_CONTEXT\"] = \"get_context\";\n    LLMActionType[\"SET_CONTEXT\"] = \"set_context\";\n    LLMActionType[\"RUN\"] = \"run\";\n})($0908f693e3e0724c$export$43cdfb26f790451 || ($0908f693e3e0724c$export$43cdfb26f790451 = {}));\nclass $0908f693e3e0724c$export$3cf39a62d076dd5c extends (0, $7614fb2168c523cc$export$23bc637255b2a471) {\n    constructor(options){\n        super(options);\n        this._functionCallCallback = null;\n    }\n    getMessageTypes() {\n        return Object.values($0908f693e3e0724c$export$441bcd2e10762760);\n    }\n    // --- Actions\n    /**\n     * Retrieve the bot's current LLM context.\n     * @returns Promise<LLMContext>\n     */ async getContext() {\n        if (this._client.state !== \"ready\") throw new $8ead7b33b8402751$export$885fb96b850e8fbb(\"getContext called while transport not in ready state\");\n        const actionResponseMsg = await this._client.action({\n            service: this._service,\n            action: $0908f693e3e0724c$export$43cdfb26f790451.GET_CONTEXT\n        });\n        return actionResponseMsg.data.result;\n    }\n    /**\n     * Update the bot's LLM context.\n     * If this is called while the transport is not in the ready state, the local context will be updated\n     * @param context LLMContext - The new context\n     * @param interrupt boolean - Whether to interrupt the bot, or wait until it has finished speaking\n     * @returns Promise<boolean>\n     */ async setContext(context, interrupt = false) {\n        if (this._client.state !== \"ready\") throw new $8ead7b33b8402751$export$885fb96b850e8fbb(\"setContext called while transport not in ready state\");\n        const actionResponse = await this._client.action({\n            service: this._service,\n            action: $0908f693e3e0724c$export$43cdfb26f790451.SET_CONTEXT,\n            arguments: [\n                {\n                    name: \"messages\",\n                    value: context.messages\n                },\n                {\n                    name: \"interrupt\",\n                    value: interrupt\n                }\n            ]\n        });\n        return !!actionResponse.data.result;\n    }\n    /**\n     * Append a new message to the LLM context.\n     * If this is called while the transport is not in the ready state, the local context will be updated\n     * @param context LLMContextMessage\n     * @param runImmediately boolean - wait until pipeline is idle before running\n     * @returns boolean\n     */ async appendToMessages(message, runImmediately = false) {\n        if (this._client.state !== \"ready\") throw new $8ead7b33b8402751$export$885fb96b850e8fbb(\"setContext called while transport not in ready state\");\n        const actionResponse = await this._client.action({\n            service: this._service,\n            action: $0908f693e3e0724c$export$43cdfb26f790451.APPEND_TO_MESSAGES,\n            arguments: [\n                {\n                    name: \"messages\",\n                    value: [\n                        message\n                    ]\n                },\n                {\n                    name: \"run_immediately\",\n                    value: runImmediately\n                }\n            ]\n        });\n        return !!actionResponse.data.result;\n    }\n    /**\n     * Run the bot's current LLM context.\n     * Useful when appending messages to the context without runImmediately set to true.\n     * Will do nothing if the bot is not in the ready state.\n     * @param interrupt boolean - Whether to interrupt the bot, or wait until it has finished speaking\n     * @returns Promise<unknown>\n     */ async run(interrupt = false) {\n        if (this._client.state !== \"ready\") return;\n        return this._client.action({\n            service: this._service,\n            action: $0908f693e3e0724c$export$43cdfb26f790451.RUN,\n            arguments: [\n                {\n                    name: \"interrupt\",\n                    value: interrupt\n                }\n            ]\n        });\n    }\n    // --- Handlers\n    /**\n     * If the LLM wants to call a function, RTVI will invoke the callback defined\n     * here. Whatever the callback returns will be sent to the LLM as the function result.\n     * @param callback\n     * @returns void\n     */ handleFunctionCall(callback) {\n        this._functionCallCallback = callback;\n    }\n    handleMessage(ev) {\n        switch(ev.type){\n            case $0908f693e3e0724c$export$441bcd2e10762760.LLM_JSON_COMPLETION:\n                this._options.callbacks?.onLLMJsonCompletion?.(ev.data);\n                this._client.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).LLMJsonCompletion, ev.data);\n                break;\n            case $0908f693e3e0724c$export$441bcd2e10762760.LLM_FUNCTION_CALL:\n                {\n                    const d = ev.data;\n                    this._options.callbacks?.onLLMFunctionCall?.(ev.data);\n                    this._client.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).LLMFunctionCall, ev.data);\n                    if (this._functionCallCallback) {\n                        const fn = {\n                            functionName: d.function_name,\n                            arguments: d.args\n                        };\n                        if (this._client.state === \"ready\") this._functionCallCallback(fn).then((result)=>{\n                            this._client.sendMessage(new (0, $b48f893ed1354c1e$export$69aa9ab0334b212)($0908f693e3e0724c$export$441bcd2e10762760.LLM_FUNCTION_CALL_RESULT, {\n                                function_name: d.function_name,\n                                tool_call_id: d.tool_call_id,\n                                arguments: d.args,\n                                result: result\n                            }));\n                        });\n                        else throw new $8ead7b33b8402751$export$885fb96b850e8fbb(\"Attempted to send a function call result from bot while transport not in ready state\");\n                    }\n                    break;\n                }\n            case $0908f693e3e0724c$export$441bcd2e10762760.LLM_FUNCTION_CALL_START:\n                {\n                    const e = ev.data;\n                    this._options.callbacks?.onLLMFunctionCallStart?.(e.function_name);\n                    this._client.emit((0, $f9fc0c57b9aaed9c$export$6b4624d233c61fcb).LLMFunctionCallStart, e.function_name);\n                    break;\n                }\n        }\n    }\n}\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@pipecat-ai/client-js/dist/index.module.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@pipecat-ai/websocket-transport/dist/index.module.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@pipecat-ai/websocket-transport/dist/index.module.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DailyMediaManager: function() { return /* binding */ $22ece045290c996a$export$c95c65abc5f47125; },\n/* harmony export */   ProtobufFrameSerializer: function() { return /* binding */ $a6c080dc51c9687f$export$4b2026f8e11b148a; },\n/* harmony export */   TwilioSerializer: function() { return /* binding */ $5b926fa33e35e45c$export$44a8a077420336af; },\n/* harmony export */   WavMediaManager: function() { return /* binding */ $fc49a56cd8739127$export$45c5b9bfba2f6304; },\n/* harmony export */   WebSocketTransport: function() { return /* binding */ $7f42eda74f1b1632$export$de21836fc42c6f9c; }\n/* harmony export */ });\n/* harmony import */ var _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @daily-co/daily-js */ \"(app-pages-browser)/./node_modules/@daily-co/daily-js/dist/daily-esm.js\");\n/* harmony import */ var _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pipecat-ai/client-js */ \"(app-pages-browser)/./node_modules/@pipecat-ai/client-js/dist/index.module.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ \"(app-pages-browser)/./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @protobuf-ts/runtime */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type.js\");\n/* harmony import */ var _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @protobuf-ts/runtime */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js\");\n/* harmony import */ var _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @protobuf-ts/runtime */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js\");\n/* harmony import */ var x_law__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! x-law */ \"(app-pages-browser)/./node_modules/x-law/dist/index.js\");\n\n\n\n\n\n\n// export * from \"./realTimeWebSocketTransport\";\n// export * from \"../../../lib/wavtools/dist/index.d.ts\";\n/**\n * Raw wav audio file contents\n * @typedef {Object} WavPackerAudioType\n * @property {Blob} blob\n * @property {string} url\n * @property {number} channelCount\n * @property {number} sampleRate\n * @property {number} duration\n */ /**\n * Utility class for assembling PCM16 \"audio/wav\" data\n * @class\n */ class $6d4b7449a1e1544a$export$13afda237b1c9846 {\n    /**\n   * Converts Float32Array of amplitude data to ArrayBuffer in Int16Array format\n   * @param {Float32Array} float32Array\n   * @returns {ArrayBuffer}\n   */ static floatTo16BitPCM(float32Array) {\n        const buffer = new ArrayBuffer(float32Array.length * 2);\n        const view = new DataView(buffer);\n        let offset = 0;\n        for(let i = 0; i < float32Array.length; i++, offset += 2){\n            let s = Math.max(-1, Math.min(1, float32Array[i]));\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n        }\n        return buffer;\n    }\n    /**\n   * Concatenates two ArrayBuffers\n   * @param {ArrayBuffer} leftBuffer\n   * @param {ArrayBuffer} rightBuffer\n   * @returns {ArrayBuffer}\n   */ static mergeBuffers(leftBuffer, rightBuffer) {\n        const tmpArray = new Uint8Array(leftBuffer.byteLength + rightBuffer.byteLength);\n        tmpArray.set(new Uint8Array(leftBuffer), 0);\n        tmpArray.set(new Uint8Array(rightBuffer), leftBuffer.byteLength);\n        return tmpArray.buffer;\n    }\n    /**\n   * Packs data into an Int16 format\n   * @private\n   * @param {number} size 0 = 1x Int16, 1 = 2x Int16\n   * @param {number} arg value to pack\n   * @returns\n   */ _packData(size, arg) {\n        return [\n            new Uint8Array([\n                arg,\n                arg >> 8\n            ]),\n            new Uint8Array([\n                arg,\n                arg >> 8,\n                arg >> 16,\n                arg >> 24\n            ])\n        ][size];\n    }\n    /**\n   * Packs audio into \"audio/wav\" Blob\n   * @param {number} sampleRate\n   * @param {{bitsPerSample: number, channels: Array<Float32Array>, data: Int16Array}} audio\n   * @returns {WavPackerAudioType}\n   */ pack(sampleRate, audio) {\n        if (!audio?.bitsPerSample) throw new Error(`Missing \"bitsPerSample\"`);\n        else if (!audio?.channels) throw new Error(`Missing \"channels\"`);\n        else if (!audio?.data) throw new Error(`Missing \"data\"`);\n        const { bitsPerSample: bitsPerSample, channels: channels, data: data } = audio;\n        const output = [\n            // Header\n            'RIFF',\n            this._packData(1, 52),\n            'WAVE',\n            // chunk 1\n            'fmt ',\n            this._packData(1, 16),\n            this._packData(0, 1),\n            this._packData(0, channels.length),\n            this._packData(1, sampleRate),\n            this._packData(1, sampleRate * channels.length * bitsPerSample / 8),\n            this._packData(0, channels.length * bitsPerSample / 8),\n            this._packData(0, bitsPerSample),\n            // chunk 2\n            'data',\n            this._packData(1, channels[0].length * channels.length * bitsPerSample / 8),\n            data\n        ];\n        const blob = new Blob(output, {\n            type: 'audio/mpeg'\n        });\n        const url = URL.createObjectURL(blob);\n        return {\n            blob: blob,\n            url: url,\n            channelCount: channels.length,\n            sampleRate: sampleRate,\n            duration: data.byteLength / (channels.length * sampleRate * 2)\n        };\n    }\n}\nglobalThis.WavPacker = $6d4b7449a1e1544a$export$13afda237b1c9846;\n\n\n/**\n * Constants for help with visualization\n * Helps map frequency ranges from Fast Fourier Transform\n * to human-interpretable ranges, notably music ranges and\n * human vocal ranges.\n */ // Eighth octave frequencies\nconst $03f71ce85e00ada6$var$octave8Frequencies = [\n    4186.01,\n    4434.92,\n    4698.63,\n    4978.03,\n    5274.04,\n    5587.65,\n    5919.91,\n    6271.93,\n    6644.88,\n    7040.0,\n    7458.62,\n    7902.13\n];\n// Labels for each of the above frequencies\nconst $03f71ce85e00ada6$var$octave8FrequencyLabels = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B'\n];\nconst $03f71ce85e00ada6$export$776c63898ae5b636 = [];\nconst $03f71ce85e00ada6$export$facd167cc27ea9b0 = [];\nfor(let i = 1; i <= 8; i++)for(let f = 0; f < $03f71ce85e00ada6$var$octave8Frequencies.length; f++){\n    const freq = $03f71ce85e00ada6$var$octave8Frequencies[f];\n    $03f71ce85e00ada6$export$776c63898ae5b636.push(freq / Math.pow(2, 8 - i));\n    $03f71ce85e00ada6$export$facd167cc27ea9b0.push($03f71ce85e00ada6$var$octave8FrequencyLabels[f] + i);\n}\n/**\n * Subset of the note frequencies between 32 and 2000 Hz\n * 6 octave range: C1 to B6\n */ const $03f71ce85e00ada6$var$voiceFrequencyRange = [\n    32.0,\n    2000.0\n];\nconst $03f71ce85e00ada6$export$dbc1581ed2cfa183 = $03f71ce85e00ada6$export$776c63898ae5b636.filter((_, i)=>{\n    return $03f71ce85e00ada6$export$776c63898ae5b636[i] > $03f71ce85e00ada6$var$voiceFrequencyRange[0] && $03f71ce85e00ada6$export$776c63898ae5b636[i] < $03f71ce85e00ada6$var$voiceFrequencyRange[1];\n});\nconst $03f71ce85e00ada6$export$30a6f2881311088f = $03f71ce85e00ada6$export$facd167cc27ea9b0.filter((_, i)=>{\n    return $03f71ce85e00ada6$export$776c63898ae5b636[i] > $03f71ce85e00ada6$var$voiceFrequencyRange[0] && $03f71ce85e00ada6$export$776c63898ae5b636[i] < $03f71ce85e00ada6$var$voiceFrequencyRange[1];\n});\n\n\nclass $f32f064564ee62f6$export$2c3136da0bf130f9 {\n    /**\n   * Retrieves frequency domain data from an AnalyserNode adjusted to a decibel range\n   * returns human-readable formatting and labels\n   * @param {AnalyserNode} analyser\n   * @param {number} sampleRate\n   * @param {Float32Array} [fftResult]\n   * @param {\"frequency\"|\"music\"|\"voice\"} [analysisType]\n   * @param {number} [minDecibels] default -100\n   * @param {number} [maxDecibels] default -30\n   * @returns {AudioAnalysisOutputType}\n   */ static getFrequencies(analyser, sampleRate, fftResult, analysisType = 'frequency', minDecibels = -100, maxDecibels = -30) {\n        if (!fftResult) {\n            fftResult = new Float32Array(analyser.frequencyBinCount);\n            analyser.getFloatFrequencyData(fftResult);\n        }\n        const nyquistFrequency = sampleRate / 2;\n        const frequencyStep = 1 / fftResult.length * nyquistFrequency;\n        let outputValues;\n        let frequencies;\n        let labels;\n        if (analysisType === 'music' || analysisType === 'voice') {\n            const useFrequencies = analysisType === 'voice' ? (0, $03f71ce85e00ada6$export$dbc1581ed2cfa183) : (0, $03f71ce85e00ada6$export$776c63898ae5b636);\n            const aggregateOutput = Array(useFrequencies.length).fill(minDecibels);\n            for(let i = 0; i < fftResult.length; i++){\n                const frequency = i * frequencyStep;\n                const amplitude = fftResult[i];\n                for(let n = useFrequencies.length - 1; n >= 0; n--)if (frequency > useFrequencies[n]) {\n                    aggregateOutput[n] = Math.max(aggregateOutput[n], amplitude);\n                    break;\n                }\n            }\n            outputValues = aggregateOutput;\n            frequencies = analysisType === 'voice' ? (0, $03f71ce85e00ada6$export$dbc1581ed2cfa183) : (0, $03f71ce85e00ada6$export$776c63898ae5b636);\n            labels = analysisType === 'voice' ? (0, $03f71ce85e00ada6$export$30a6f2881311088f) : (0, $03f71ce85e00ada6$export$facd167cc27ea9b0);\n        } else {\n            outputValues = Array.from(fftResult);\n            frequencies = outputValues.map((_, i)=>frequencyStep * i);\n            labels = frequencies.map((f)=>`${f.toFixed(2)} Hz`);\n        }\n        // We normalize to {0, 1}\n        const normalizedOutput = outputValues.map((v)=>{\n            return Math.max(0, Math.min((v - minDecibels) / (maxDecibels - minDecibels), 1));\n        });\n        const values = new Float32Array(normalizedOutput);\n        return {\n            values: values,\n            frequencies: frequencies,\n            labels: labels\n        };\n    }\n    /**\n   * Creates a new AudioAnalysis instance for an HTMLAudioElement\n   * @param {HTMLAudioElement} audioElement\n   * @param {AudioBuffer|null} [audioBuffer] If provided, will cache all frequency domain data from the buffer\n   * @returns {AudioAnalysis}\n   */ constructor(audioElement, audioBuffer = null){\n        this.fftResults = [];\n        if (audioBuffer) {\n            /**\n       * Modified from\n       * https://stackoverflow.com/questions/75063715/using-the-web-audio-api-to-analyze-a-song-without-playing\n       *\n       * We do this to populate FFT values for the audio if provided an `audioBuffer`\n       * The reason to do this is that Safari fails when using `createMediaElementSource`\n       * This has a non-zero RAM cost so we only opt-in to run it on Safari, Chrome is better\n       */ const { length: length, sampleRate: sampleRate } = audioBuffer;\n            const offlineAudioContext = new OfflineAudioContext({\n                length: length,\n                sampleRate: sampleRate\n            });\n            const source = offlineAudioContext.createBufferSource();\n            source.buffer = audioBuffer;\n            const analyser = offlineAudioContext.createAnalyser();\n            analyser.fftSize = 8192;\n            analyser.smoothingTimeConstant = 0.1;\n            source.connect(analyser);\n            // limit is :: 128 / sampleRate;\n            // but we just want 60fps - cuts ~1s from 6MB to 1MB of RAM\n            const renderQuantumInSeconds = 1 / 60;\n            const durationInSeconds = length / sampleRate;\n            const analyze = (index)=>{\n                const suspendTime = renderQuantumInSeconds * index;\n                if (suspendTime < durationInSeconds) offlineAudioContext.suspend(suspendTime).then(()=>{\n                    const fftResult = new Float32Array(analyser.frequencyBinCount);\n                    analyser.getFloatFrequencyData(fftResult);\n                    this.fftResults.push(fftResult);\n                    analyze(index + 1);\n                });\n                if (index === 1) offlineAudioContext.startRendering();\n                else offlineAudioContext.resume();\n            };\n            source.start(0);\n            analyze(1);\n            this.audio = audioElement;\n            this.context = offlineAudioContext;\n            this.analyser = analyser;\n            this.sampleRate = sampleRate;\n            this.audioBuffer = audioBuffer;\n        } else {\n            const audioContext = new AudioContext();\n            const track = audioContext.createMediaElementSource(audioElement);\n            const analyser = audioContext.createAnalyser();\n            analyser.fftSize = 8192;\n            analyser.smoothingTimeConstant = 0.1;\n            track.connect(analyser);\n            analyser.connect(audioContext.destination);\n            this.audio = audioElement;\n            this.context = audioContext;\n            this.analyser = analyser;\n            this.sampleRate = this.context.sampleRate;\n            this.audioBuffer = null;\n        }\n    }\n    /**\n   * Gets the current frequency domain data from the playing audio track\n   * @param {\"frequency\"|\"music\"|\"voice\"} [analysisType]\n   * @param {number} [minDecibels] default -100\n   * @param {number} [maxDecibels] default -30\n   * @returns {AudioAnalysisOutputType}\n   */ getFrequencies(analysisType = 'frequency', minDecibels = -100, maxDecibels = -30) {\n        let fftResult = null;\n        if (this.audioBuffer && this.fftResults.length) {\n            const pct = this.audio.currentTime / this.audio.duration;\n            const index = Math.min(pct * this.fftResults.length | 0, this.fftResults.length - 1);\n            fftResult = this.fftResults[index];\n        }\n        return $f32f064564ee62f6$export$2c3136da0bf130f9.getFrequencies(this.analyser, this.sampleRate, fftResult, analysisType, minDecibels, maxDecibels);\n    }\n    /**\n   * Resume the internal AudioContext if it was suspended due to the lack of\n   * user interaction when the AudioAnalysis was instantiated.\n   * @returns {Promise<true>}\n   */ async resumeIfSuspended() {\n        if (this.context.state === 'suspended') await this.context.resume();\n        return true;\n    }\n}\nglobalThis.AudioAnalysis = $f32f064564ee62f6$export$2c3136da0bf130f9;\n\n\nconst $29a8a70a9466b14f$export$50b76700e2b15e9 = `\nclass StreamProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n    this.hasStarted = false;\n    this.hasInterrupted = false;\n    this.outputBuffers = [];\n    this.bufferLength = 128;\n    this.write = { buffer: new Float32Array(this.bufferLength), trackId: null };\n    this.writeOffset = 0;\n    this.trackSampleOffsets = {};\n    this.port.onmessage = (event) => {\n      if (event.data) {\n        const payload = event.data;\n        if (payload.event === 'write') {\n          const int16Array = payload.buffer;\n          const float32Array = new Float32Array(int16Array.length);\n          for (let i = 0; i < int16Array.length; i++) {\n            float32Array[i] = int16Array[i] / 0x8000; // Convert Int16 to Float32\n          }\n          this.writeData(float32Array, payload.trackId);\n        } else if (\n          payload.event === 'offset' ||\n          payload.event === 'interrupt'\n        ) {\n          const requestId = payload.requestId;\n          const trackId = this.write.trackId;\n          const offset = this.trackSampleOffsets[trackId] || 0;\n          this.port.postMessage({\n            event: 'offset',\n            requestId,\n            trackId,\n            offset,\n          });\n          if (payload.event === 'interrupt') {\n            this.hasInterrupted = true;\n          }\n        } else {\n          throw new Error(\\`Unhandled event \"\\${payload.event}\"\\`);\n        }\n      }\n    };\n  }\n\n  writeData(float32Array, trackId = null) {\n    let { buffer } = this.write;\n    let offset = this.writeOffset;\n    for (let i = 0; i < float32Array.length; i++) {\n      buffer[offset++] = float32Array[i];\n      if (offset >= buffer.length) {\n        this.outputBuffers.push(this.write);\n        this.write = { buffer: new Float32Array(this.bufferLength), trackId };\n        buffer = this.write.buffer;\n        offset = 0;\n      }\n    }\n    this.writeOffset = offset;\n    return true;\n  }\n\n  process(inputs, outputs, parameters) {\n    const output = outputs[0];\n    const outputChannelData = output[0];\n    const outputBuffers = this.outputBuffers;\n    if (this.hasInterrupted) {\n      this.port.postMessage({ event: 'stop' });\n      return false;\n    } else if (outputBuffers.length) {\n      this.hasStarted = true;\n      const { buffer, trackId } = outputBuffers.shift();\n      for (let i = 0; i < outputChannelData.length; i++) {\n        outputChannelData[i] = buffer[i] || 0;\n      }\n      if (trackId) {\n        this.trackSampleOffsets[trackId] =\n          this.trackSampleOffsets[trackId] || 0;\n        this.trackSampleOffsets[trackId] += buffer.length;\n      }\n      return true;\n    } else if (this.hasStarted) {\n      this.port.postMessage({ event: 'stop' });\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n\nregisterProcessor('stream_processor', StreamProcessor);\n`;\nconst $29a8a70a9466b14f$var$script = new Blob([\n    $29a8a70a9466b14f$export$50b76700e2b15e9\n], {\n    type: 'application/javascript'\n});\nconst $29a8a70a9466b14f$var$src = URL.createObjectURL($29a8a70a9466b14f$var$script);\nconst $29a8a70a9466b14f$export$bfa8c596114d74df = $29a8a70a9466b14f$var$src;\n\n\n\nclass $d0a969833958d9e7$export$9698d62c78b8f366 {\n    /**\n   * Creates a new WavStreamPlayer instance\n   * @param {{sampleRate?: number}} options\n   * @returns {WavStreamPlayer}\n   */ constructor({ sampleRate: sampleRate = 44100 } = {}){\n        this.scriptSrc = (0, $29a8a70a9466b14f$export$bfa8c596114d74df);\n        this.sampleRate = sampleRate;\n        this.context = null;\n        this.stream = null;\n        this.analyser = null;\n        this.trackSampleOffsets = {};\n        this.interruptedTrackIds = {};\n    }\n    /**\n   * Connects the audio context and enables output to speakers\n   * @returns {Promise<true>}\n   */ async connect() {\n        this.context = new AudioContext({\n            sampleRate: this.sampleRate\n        });\n        if (this._speakerID) this.context.setSinkId(this._speakerID);\n        if (this.context.state === \"suspended\") await this.context.resume();\n        try {\n            await this.context.audioWorklet.addModule(this.scriptSrc);\n        } catch (e) {\n            console.error(e);\n            throw new Error(`Could not add audioWorklet module: ${this.scriptSrc}`);\n        }\n        const analyser = this.context.createAnalyser();\n        analyser.fftSize = 8192;\n        analyser.smoothingTimeConstant = 0.1;\n        this.analyser = analyser;\n        return true;\n    }\n    /**\n   * Gets the current frequency domain data from the playing track\n   * @param {\"frequency\"|\"music\"|\"voice\"} [analysisType]\n   * @param {number} [minDecibels] default -100\n   * @param {number} [maxDecibels] default -30\n   * @returns {import('./analysis/audio_analysis.js').AudioAnalysisOutputType}\n   */ getFrequencies(analysisType = \"frequency\", minDecibels = -100, maxDecibels = -30) {\n        if (!this.analyser) throw new Error(\"Not connected, please call .connect() first\");\n        return (0, $f32f064564ee62f6$export$2c3136da0bf130f9).getFrequencies(this.analyser, this.sampleRate, null, analysisType, minDecibels, maxDecibels);\n    }\n    /**\n   * @param {string} speaker deviceId\n   */ async updateSpeaker(speaker) {\n        const _prevSpeaker = this._speakerID;\n        this._speakerID = speaker;\n        if (this.context) try {\n            if (speaker === \"default\") await this.context.setSinkId();\n            else await this.context.setSinkId(speaker);\n        } catch (e) {\n            console.error(`Could not set sinkId to ${speaker}: ${e}`);\n            this._speakerID = _prevSpeaker;\n        }\n    }\n    /**\n   * Starts audio streaming\n   * @private\n   * @returns {Promise<true>}\n   */ _start() {\n        const streamNode = new AudioWorkletNode(this.context, \"stream_processor\");\n        streamNode.connect(this.context.destination);\n        streamNode.port.onmessage = (e)=>{\n            const { event: event } = e.data;\n            if (event === \"stop\") {\n                streamNode.disconnect();\n                this.stream = null;\n            } else if (event === \"offset\") {\n                const { requestId: requestId, trackId: trackId, offset: offset } = e.data;\n                const currentTime = offset / this.sampleRate;\n                this.trackSampleOffsets[requestId] = {\n                    trackId: trackId,\n                    offset: offset,\n                    currentTime: currentTime\n                };\n            }\n        };\n        this.analyser.disconnect();\n        streamNode.connect(this.analyser);\n        this.stream = streamNode;\n        return true;\n    }\n    /**\n   * Adds 16BitPCM data to the currently playing audio stream\n   * You can add chunks beyond the current play point and they will be queued for play\n   * @param {ArrayBuffer|Int16Array} arrayBuffer\n   * @param {string} [trackId]\n   * @returns {Int16Array}\n   */ add16BitPCM(arrayBuffer, trackId = \"default\") {\n        if (typeof trackId !== \"string\") throw new Error(`trackId must be a string`);\n        else if (this.interruptedTrackIds[trackId]) return;\n        if (!this.stream) this._start();\n        let buffer;\n        if (arrayBuffer instanceof Int16Array) buffer = arrayBuffer;\n        else if (arrayBuffer instanceof ArrayBuffer) buffer = new Int16Array(arrayBuffer);\n        else throw new Error(`argument must be Int16Array or ArrayBuffer`);\n        this.stream.port.postMessage({\n            event: \"write\",\n            buffer: buffer,\n            trackId: trackId\n        });\n        return buffer;\n    }\n    /**\n   * Gets the offset (sample count) of the currently playing stream\n   * @param {boolean} [interrupt]\n   * @returns {{trackId: string|null, offset: number, currentTime: number}}\n   */ async getTrackSampleOffset(interrupt = false) {\n        if (!this.stream) return null;\n        const requestId = crypto.randomUUID();\n        this.stream.port.postMessage({\n            event: interrupt ? \"interrupt\" : \"offset\",\n            requestId: requestId\n        });\n        let trackSampleOffset;\n        while(!trackSampleOffset){\n            trackSampleOffset = this.trackSampleOffsets[requestId];\n            await new Promise((r)=>setTimeout(()=>r(), 1));\n        }\n        const { trackId: trackId } = trackSampleOffset;\n        if (interrupt && trackId) this.interruptedTrackIds[trackId] = true;\n        return trackSampleOffset;\n    }\n    /**\n   * Strips the current stream and returns the sample offset of the audio\n   * @param {boolean} [interrupt]\n   * @returns {{trackId: string|null, offset: number, currentTime: number}}\n   */ async interrupt() {\n        return this.getTrackSampleOffset(true);\n    }\n}\nglobalThis.WavStreamPlayer = $d0a969833958d9e7$export$9698d62c78b8f366;\n\n\nconst $8e1d1e6ff08f6fb5$var$AudioProcessorWorklet = `\nclass AudioProcessor extends AudioWorkletProcessor {\n\n  constructor() {\n    super();\n    this.port.onmessage = this.receive.bind(this);\n    this.initialize();\n  }\n\n  initialize() {\n    this.foundAudio = false;\n    this.recording = false;\n    this.chunks = [];\n  }\n\n  /**\n   * Concatenates sampled chunks into channels\n   * Format is chunk[Left[], Right[]]\n   */\n  readChannelData(chunks, channel = -1, maxChannels = 9) {\n    let channelLimit;\n    if (channel !== -1) {\n      if (chunks[0] && chunks[0].length - 1 < channel) {\n        throw new Error(\n          \\`Channel \\${channel} out of range: max \\${chunks[0].length}\\`\n        );\n      }\n      channelLimit = channel + 1;\n    } else {\n      channel = 0;\n      channelLimit = Math.min(chunks[0] ? chunks[0].length : 1, maxChannels);\n    }\n    const channels = [];\n    for (let n = channel; n < channelLimit; n++) {\n      const length = chunks.reduce((sum, chunk) => {\n        return sum + chunk[n].length;\n      }, 0);\n      const buffers = chunks.map((chunk) => chunk[n]);\n      const result = new Float32Array(length);\n      let offset = 0;\n      for (let i = 0; i < buffers.length; i++) {\n        result.set(buffers[i], offset);\n        offset += buffers[i].length;\n      }\n      channels[n] = result;\n    }\n    return channels;\n  }\n\n  /**\n   * Combines parallel audio data into correct format,\n   * channels[Left[], Right[]] to float32Array[LRLRLRLR...]\n   */\n  formatAudioData(channels) {\n    if (channels.length === 1) {\n      // Simple case is only one channel\n      const float32Array = channels[0].slice();\n      const meanValues = channels[0].slice();\n      return { float32Array, meanValues };\n    } else {\n      const float32Array = new Float32Array(\n        channels[0].length * channels.length\n      );\n      const meanValues = new Float32Array(channels[0].length);\n      for (let i = 0; i < channels[0].length; i++) {\n        const offset = i * channels.length;\n        let meanValue = 0;\n        for (let n = 0; n < channels.length; n++) {\n          float32Array[offset + n] = channels[n][i];\n          meanValue += channels[n][i];\n        }\n        meanValues[i] = meanValue / channels.length;\n      }\n      return { float32Array, meanValues };\n    }\n  }\n\n  /**\n   * Converts 32-bit float data to 16-bit integers\n   */\n  floatTo16BitPCM(float32Array) {\n    const buffer = new ArrayBuffer(float32Array.length * 2);\n    const view = new DataView(buffer);\n    let offset = 0;\n    for (let i = 0; i < float32Array.length; i++, offset += 2) {\n      let s = Math.max(-1, Math.min(1, float32Array[i]));\n      view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n    return buffer;\n  }\n\n  /**\n   * Retrieves the most recent amplitude values from the audio stream\n   * @param {number} channel\n   */\n  getValues(channel = -1) {\n    const channels = this.readChannelData(this.chunks, channel);\n    const { meanValues } = this.formatAudioData(channels);\n    return { meanValues, channels };\n  }\n\n  /**\n   * Exports chunks as an audio/wav file\n   */\n  export() {\n    const channels = this.readChannelData(this.chunks);\n    const { float32Array, meanValues } = this.formatAudioData(channels);\n    const audioData = this.floatTo16BitPCM(float32Array);\n    return {\n      meanValues: meanValues,\n      audio: {\n        bitsPerSample: 16,\n        channels: channels,\n        data: audioData,\n      },\n    };\n  }\n\n  receive(e) {\n    const { event, id } = e.data;\n    let receiptData = {};\n    switch (event) {\n      case 'start':\n        this.recording = true;\n        break;\n      case 'stop':\n        this.recording = false;\n        break;\n      case 'clear':\n        this.initialize();\n        break;\n      case 'export':\n        receiptData = this.export();\n        break;\n      case 'read':\n        receiptData = this.getValues();\n        break;\n      default:\n        break;\n    }\n    // Always send back receipt\n    this.port.postMessage({ event: 'receipt', id, data: receiptData });\n  }\n\n  sendChunk(chunk) {\n    const channels = this.readChannelData([chunk]);\n    const { float32Array, meanValues } = this.formatAudioData(channels);\n    const rawAudioData = this.floatTo16BitPCM(float32Array);\n    const monoAudioData = this.floatTo16BitPCM(meanValues);\n    this.port.postMessage({\n      event: 'chunk',\n      data: {\n        mono: monoAudioData,\n        raw: rawAudioData,\n      },\n    });\n  }\n\n  process(inputList, outputList, parameters) {\n    // Copy input to output (e.g. speakers)\n    // Note that this creates choppy sounds with Mac products\n    const sourceLimit = Math.min(inputList.length, outputList.length);\n    for (let inputNum = 0; inputNum < sourceLimit; inputNum++) {\n      const input = inputList[inputNum];\n      const output = outputList[inputNum];\n      const channelCount = Math.min(input.length, output.length);\n      for (let channelNum = 0; channelNum < channelCount; channelNum++) {\n        input[channelNum].forEach((sample, i) => {\n          output[channelNum][i] = sample;\n        });\n      }\n    }\n    const inputs = inputList[0];\n    // There's latency at the beginning of a stream before recording starts\n    // Make sure we actually receive audio data before we start storing chunks\n    let sliceIndex = 0;\n    if (!this.foundAudio) {\n      for (const channel of inputs) {\n        sliceIndex = 0; // reset for each channel\n        if (this.foundAudio) {\n          break;\n        }\n        if (channel) {\n          for (const value of channel) {\n            if (value !== 0) {\n              // find only one non-zero entry in any channel\n              this.foundAudio = true;\n              break;\n            } else {\n              sliceIndex++;\n            }\n          }\n        }\n      }\n    }\n    if (inputs && inputs[0] && this.foundAudio && this.recording) {\n      // We need to copy the TypedArray, because the \\`process\\`\n      // internals will reuse the same buffer to hold each input\n      const chunk = inputs.map((input) => input.slice(sliceIndex));\n      this.chunks.push(chunk);\n      this.sendChunk(chunk);\n    }\n    return true;\n  }\n}\n\nregisterProcessor('audio_processor', AudioProcessor);\n`;\nconst $8e1d1e6ff08f6fb5$var$script = new Blob([\n    $8e1d1e6ff08f6fb5$var$AudioProcessorWorklet\n], {\n    type: 'application/javascript'\n});\nconst $8e1d1e6ff08f6fb5$var$src = URL.createObjectURL($8e1d1e6ff08f6fb5$var$script);\nconst $8e1d1e6ff08f6fb5$export$1f65f50a8cbff43c = $8e1d1e6ff08f6fb5$var$src;\n\n\n\n\nclass $62bc376044a05513$export$439b217ca659a877 {\n    /**\n   * Create a new WavRecorder instance\n   * @param {{sampleRate?: number, outputToSpeakers?: boolean, debug?: boolean}} [options]\n   * @returns {WavRecorder}\n   */ constructor({ sampleRate: sampleRate = 44100, outputToSpeakers: outputToSpeakers = false, debug: debug = false } = {}){\n        // Script source\n        this.scriptSrc = (0, $8e1d1e6ff08f6fb5$export$1f65f50a8cbff43c);\n        // Config\n        this.sampleRate = sampleRate;\n        this.outputToSpeakers = outputToSpeakers;\n        this.debug = !!debug;\n        this._deviceChangeCallback = null;\n        this._devices = [];\n        this.deviceSelection = null;\n        // State variables\n        this.stream = null;\n        this.processor = null;\n        this.source = null;\n        this.node = null;\n        this.recording = false;\n        // Event handling with AudioWorklet\n        this._lastEventId = 0;\n        this.eventReceipts = {};\n        this.eventTimeout = 5000;\n        // Process chunks of audio\n        this._chunkProcessor = ()=>{};\n        this._chunkProcessorSize = void 0;\n        this._chunkProcessorBuffer = {\n            raw: new ArrayBuffer(0),\n            mono: new ArrayBuffer(0)\n        };\n    }\n    /**\n   * Decodes audio data from multiple formats to a Blob, url, Float32Array and AudioBuffer\n   * @param {Blob|Float32Array|Int16Array|ArrayBuffer|number[]} audioData\n   * @param {number} sampleRate\n   * @param {number} fromSampleRate\n   * @returns {Promise<DecodedAudioType>}\n   */ static async decode(audioData, sampleRate = 44100, fromSampleRate = -1) {\n        const context = new AudioContext({\n            sampleRate: sampleRate\n        });\n        let arrayBuffer;\n        let blob;\n        if (audioData instanceof Blob) {\n            if (fromSampleRate !== -1) throw new Error(`Can not specify \"fromSampleRate\" when reading from Blob`);\n            blob = audioData;\n            arrayBuffer = await blob.arrayBuffer();\n        } else if (audioData instanceof ArrayBuffer) {\n            if (fromSampleRate !== -1) throw new Error(`Can not specify \"fromSampleRate\" when reading from ArrayBuffer`);\n            arrayBuffer = audioData;\n            blob = new Blob([\n                arrayBuffer\n            ], {\n                type: 'audio/wav'\n            });\n        } else {\n            let float32Array;\n            let data;\n            if (audioData instanceof Int16Array) {\n                data = audioData;\n                float32Array = new Float32Array(audioData.length);\n                for(let i = 0; i < audioData.length; i++)float32Array[i] = audioData[i] / 0x8000;\n            } else if (audioData instanceof Float32Array) float32Array = audioData;\n            else if (audioData instanceof Array) float32Array = new Float32Array(audioData);\n            else throw new Error(`\"audioData\" must be one of: Blob, Float32Arrray, Int16Array, ArrayBuffer, Array<number>`);\n            if (fromSampleRate === -1) throw new Error(`Must specify \"fromSampleRate\" when reading from Float32Array, In16Array or Array`);\n            else if (fromSampleRate < 3000) throw new Error(`Minimum \"fromSampleRate\" is 3000 (3kHz)`);\n            if (!data) data = (0, $6d4b7449a1e1544a$export$13afda237b1c9846).floatTo16BitPCM(float32Array);\n            const audio = {\n                bitsPerSample: 16,\n                channels: [\n                    float32Array\n                ],\n                data: data\n            };\n            const packer = new (0, $6d4b7449a1e1544a$export$13afda237b1c9846)();\n            const result = packer.pack(fromSampleRate, audio);\n            blob = result.blob;\n            arrayBuffer = await blob.arrayBuffer();\n        }\n        const audioBuffer = await context.decodeAudioData(arrayBuffer);\n        const values = audioBuffer.getChannelData(0);\n        const url = URL.createObjectURL(blob);\n        return {\n            blob: blob,\n            url: url,\n            values: values,\n            audioBuffer: audioBuffer\n        };\n    }\n    /**\n   * Logs data in debug mode\n   * @param {...any} arguments\n   * @returns {true}\n   */ log() {\n        if (this.debug) this.log(...arguments);\n        return true;\n    }\n    /**\n   * Retrieves the current sampleRate for the recorder\n   * @returns {number}\n   */ getSampleRate() {\n        return this.sampleRate;\n    }\n    /**\n   * Retrieves the current status of the recording\n   * @returns {\"ended\"|\"paused\"|\"recording\"}\n   */ getStatus() {\n        if (!this.processor) return 'ended';\n        else if (!this.recording) return 'paused';\n        else return 'recording';\n    }\n    /**\n   * Sends an event to the AudioWorklet\n   * @private\n   * @param {string} name\n   * @param {{[key: string]: any}} data\n   * @param {AudioWorkletNode} [_processor]\n   * @returns {Promise<{[key: string]: any}>}\n   */ async _event(name, data = {}, _processor = null) {\n        _processor = _processor || this.processor;\n        if (!_processor) throw new Error('Can not send events without recording first');\n        const message = {\n            event: name,\n            id: this._lastEventId++,\n            data: data\n        };\n        _processor.port.postMessage(message);\n        const t0 = new Date().valueOf();\n        while(!this.eventReceipts[message.id]){\n            if (new Date().valueOf() - t0 > this.eventTimeout) throw new Error(`Timeout waiting for \"${name}\" event`);\n            await new Promise((res)=>setTimeout(()=>res(true), 1));\n        }\n        const payload = this.eventReceipts[message.id];\n        delete this.eventReceipts[message.id];\n        return payload;\n    }\n    /**\n   * Sets device change callback, remove if callback provided is `null`\n   * @param {(Array<MediaDeviceInfo & {default: boolean}>): void|null} callback\n   * @returns {true}\n   */ listenForDeviceChange(callback) {\n        if (callback === null && this._deviceChangeCallback) {\n            navigator.mediaDevices.removeEventListener('devicechange', this._deviceChangeCallback);\n            this._deviceChangeCallback = null;\n        } else if (callback !== null) {\n            // Basically a debounce; we only want this called once when devices change\n            // And we only want the most recent callback() to be executed\n            // if a few are operating at the same time\n            let lastId = 0;\n            let lastDevices = [];\n            const serializeDevices = (devices)=>devices.map((d)=>d.deviceId).sort().join(',');\n            const cb = async ()=>{\n                let id = ++lastId;\n                const devices = await this.listDevices();\n                if (id === lastId) {\n                    if (serializeDevices(lastDevices) !== serializeDevices(devices)) {\n                        lastDevices = devices;\n                        callback(devices.slice());\n                    }\n                }\n            };\n            navigator.mediaDevices.addEventListener('devicechange', cb);\n            cb();\n            this._deviceChangeCallback = cb;\n        }\n        return true;\n    }\n    /**\n   * Manually request permission to use the microphone\n   * @returns {Promise<true>}\n   */ async requestPermission() {\n        const permissionStatus = await navigator.permissions.query({\n            name: 'microphone'\n        });\n        if (permissionStatus.state === 'denied') window.alert('You must grant microphone access to use this feature.');\n        else if (permissionStatus.state === 'prompt') try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            const tracks = stream.getTracks();\n            tracks.forEach((track)=>track.stop());\n        } catch (e) {\n            window.alert('You must grant microphone access to use this feature.');\n        }\n        return true;\n    }\n    /**\n   * List all eligible devices for recording, will request permission to use microphone\n   * @returns {Promise<Array<MediaDeviceInfo & {default: boolean}>>}\n   */ async listDevices() {\n        if (!navigator.mediaDevices || !('enumerateDevices' in navigator.mediaDevices)) throw new Error('Could not request user devices');\n        await this.requestPermission();\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioDevices = devices.filter((device)=>device.kind === 'audioinput');\n        return audioDevices;\n    // const defaultDeviceIndex = audioDevices.findIndex(\n    //   (device) => device.deviceId === 'default'\n    // );\n    // const deviceList = [];\n    // if (defaultDeviceIndex !== -1) {\n    //   let defaultDevice = audioDevices.splice(defaultDeviceIndex, 1)[0];\n    //   let existingIndex = audioDevices.findIndex(\n    //     (device) => device.groupId === defaultDevice.groupId\n    //   );\n    //   if (existingIndex !== -1) {\n    //     defaultDevice = audioDevices.splice(existingIndex, 1)[0];\n    //   }\n    //   defaultDevice.default = true;\n    //   deviceList.push(defaultDevice);\n    // }\n    // return deviceList.concat(audioDevices);\n    }\n    /**\n   * Begins a recording session and requests microphone permissions if not already granted\n   * Microphone recording indicator will appear on browser tab but status will be \"paused\"\n   * @param {string} [deviceId] if no device provided, default device will be used\n   * @returns {Promise<true>}\n   */ async begin(deviceId) {\n        if (this.processor) throw new Error(`Already connected: please call .end() to start a new session`);\n        if (!navigator.mediaDevices || !('getUserMedia' in navigator.mediaDevices)) throw new Error('Could not request user media');\n        deviceId = deviceId ?? this.deviceSelection?.deviceId;\n        try {\n            const config = {\n                audio: true\n            };\n            if (deviceId) config.audio = {\n                deviceId: {\n                    exact: deviceId\n                }\n            };\n            this.stream = await navigator.mediaDevices.getUserMedia(config);\n        } catch (err) {\n            throw new Error('Could not start media stream');\n        }\n        this.listDevices().then((devices)=>{\n            deviceId = this.stream.getAudioTracks()[0].getSettings().deviceId;\n            console.log('find current device', devices, deviceId, this.stream.getAudioTracks()[0].getSettings());\n            this.deviceSelection = devices.find((d)=>d.deviceId === deviceId);\n            console.log('current device', this.deviceSelection);\n        });\n        const context = new AudioContext({\n            sampleRate: this.sampleRate\n        });\n        const source = context.createMediaStreamSource(this.stream);\n        // Load and execute the module script.\n        try {\n            await context.audioWorklet.addModule(this.scriptSrc);\n        } catch (e) {\n            console.error(e);\n            throw new Error(`Could not add audioWorklet module: ${this.scriptSrc}`);\n        }\n        const processor = new AudioWorkletNode(context, 'audio_processor');\n        processor.port.onmessage = (e)=>{\n            const { event: event, id: id, data: data } = e.data;\n            if (event === 'receipt') this.eventReceipts[id] = data;\n            else if (event === 'chunk') {\n                if (this._chunkProcessorSize) {\n                    const buffer = this._chunkProcessorBuffer;\n                    this._chunkProcessorBuffer = {\n                        raw: (0, $6d4b7449a1e1544a$export$13afda237b1c9846).mergeBuffers(buffer.raw, data.raw),\n                        mono: (0, $6d4b7449a1e1544a$export$13afda237b1c9846).mergeBuffers(buffer.mono, data.mono)\n                    };\n                    if (this._chunkProcessorBuffer.mono.byteLength >= this._chunkProcessorSize) {\n                        this._chunkProcessor(this._chunkProcessorBuffer);\n                        this._chunkProcessorBuffer = {\n                            raw: new ArrayBuffer(0),\n                            mono: new ArrayBuffer(0)\n                        };\n                    }\n                } else this._chunkProcessor(data);\n            }\n        };\n        const node = source.connect(processor);\n        const analyser = context.createAnalyser();\n        analyser.fftSize = 8192;\n        analyser.smoothingTimeConstant = 0.1;\n        node.connect(analyser);\n        if (this.outputToSpeakers) {\n            // eslint-disable-next-line no-console\n            console.warn(\"Warning: Output to speakers may affect sound quality,\\nespecially due to system audio feedback preventative measures.\\nuse only for debugging\");\n            analyser.connect(context.destination);\n        }\n        this.source = source;\n        this.node = node;\n        this.analyser = analyser;\n        this.processor = processor;\n        console.log('begin completed');\n        return true;\n    }\n    /**\n   * Gets the current frequency domain data from the recording track\n   * @param {\"frequency\"|\"music\"|\"voice\"} [analysisType]\n   * @param {number} [minDecibels] default -100\n   * @param {number} [maxDecibels] default -30\n   * @returns {import('./analysis/audio_analysis.js').AudioAnalysisOutputType}\n   */ getFrequencies(analysisType = 'frequency', minDecibels = -100, maxDecibels = -30) {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        return (0, $f32f064564ee62f6$export$2c3136da0bf130f9).getFrequencies(this.analyser, this.sampleRate, null, analysisType, minDecibels, maxDecibels);\n    }\n    /**\n   * Pauses the recording\n   * Keeps microphone stream open but halts storage of audio\n   * @returns {Promise<true>}\n   */ async pause() {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        else if (!this.recording) throw new Error('Already paused: please call .record() first');\n        if (this._chunkProcessorBuffer.raw.byteLength) this._chunkProcessor(this._chunkProcessorBuffer);\n        this.log('Pausing ...');\n        await this._event('stop');\n        this.recording = false;\n        return true;\n    }\n    /**\n   * Start recording stream and storing to memory from the connected audio source\n   * @param {(data: { mono: Int16Array; raw: Int16Array }) => any} [chunkProcessor]\n   * @param {number} [chunkSize] chunkProcessor will not be triggered until this size threshold met in mono audio\n   * @returns {Promise<true>}\n   */ async record(chunkProcessor = ()=>{}, chunkSize = 8192) {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        else if (this.recording) throw new Error('Already recording: please call .pause() first');\n        else if (typeof chunkProcessor !== 'function') throw new Error(`chunkProcessor must be a function`);\n        this._chunkProcessor = chunkProcessor;\n        this._chunkProcessorSize = chunkSize;\n        this._chunkProcessorBuffer = {\n            raw: new ArrayBuffer(0),\n            mono: new ArrayBuffer(0)\n        };\n        this.log('Recording ...');\n        await this._event('start');\n        this.recording = true;\n        return true;\n    }\n    /**\n   * Clears the audio buffer, empties stored recording\n   * @returns {Promise<true>}\n   */ async clear() {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        await this._event('clear');\n        return true;\n    }\n    /**\n   * Reads the current audio stream data\n   * @returns {Promise<{meanValues: Float32Array, channels: Array<Float32Array>}>}\n   */ async read() {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        this.log('Reading ...');\n        const result = await this._event('read');\n        return result;\n    }\n    /**\n   * Saves the current audio stream to a file\n   * @param {boolean} [force] Force saving while still recording\n   * @returns {Promise<import('./wav_packer.js').WavPackerAudioType>}\n   */ async save(force = false) {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        if (!force && this.recording) throw new Error('Currently recording: please call .pause() first, or call .save(true) to force');\n        this.log('Exporting ...');\n        const exportData = await this._event('export');\n        const packer = new (0, $6d4b7449a1e1544a$export$13afda237b1c9846)();\n        const result = packer.pack(this.sampleRate, exportData.audio);\n        return result;\n    }\n    /**\n   * Ends the current recording session and saves the result\n   * @returns {Promise<import('./wav_packer.js').WavPackerAudioType>}\n   */ async end() {\n        if (!this.processor) throw new Error('Session ended: please call .begin() first');\n        const _processor = this.processor;\n        this.log('Stopping ...');\n        await this._event('stop');\n        this.recording = false;\n        const tracks = this.stream.getTracks();\n        tracks.forEach((track)=>track.stop());\n        this.log('Exporting ...');\n        const exportData = await this._event('export', {}, _processor);\n        this.processor.disconnect();\n        this.source.disconnect();\n        this.node.disconnect();\n        this.analyser.disconnect();\n        this.stream = null;\n        this.processor = null;\n        this.source = null;\n        this.node = null;\n        const packer = new (0, $6d4b7449a1e1544a$export$13afda237b1c9846)();\n        const result = packer.pack(this.sampleRate, exportData.audio);\n        return result;\n    }\n    /**\n   * Performs a full cleanup of WavRecorder instance\n   * Stops actively listening via microphone and removes existing listeners\n   * @returns {Promise<true>}\n   */ async quit() {\n        this.listenForDeviceChange(null);\n        // we do not reset this on end so that selections persist across starts\n        this.deviceSelection = null;\n        if (this.processor) await this.end();\n        return true;\n    }\n}\nglobalThis.WavRecorder = $62bc376044a05513$export$439b217ca659a877;\n\n\n\n\n\nclass $5fc11d7bc0d20724$export$2934cf2d25c67a48 {\n    /**\n   * Create a new MediaStreamRecorder instance\n   * @param {{sampleRate?: number, outputToSpeakers?: boolean, debug?: boolean}} [options]\n   * @returns {MediaStreamRecorder}\n   */ constructor({ sampleRate: sampleRate = 44100, outputToSpeakers: outputToSpeakers = false, debug: debug = false } = {}){\n        // Script source\n        this.scriptSrc = (0, $8e1d1e6ff08f6fb5$export$1f65f50a8cbff43c);\n        // Config\n        this.sampleRate = sampleRate;\n        this.outputToSpeakers = outputToSpeakers;\n        this.debug = !!debug;\n        // State variables\n        this.stream = null;\n        this.processor = null;\n        this.source = null;\n        this.node = null;\n        this.recording = false;\n        // Event handling with AudioWorklet\n        this._lastEventId = 0;\n        this.eventReceipts = {};\n        this.eventTimeout = 5000;\n        // Process chunks of audio\n        this._chunkProcessor = ()=>{};\n        this._chunkProcessorSize = void 0;\n        this._chunkProcessorBuffer = {\n            raw: new ArrayBuffer(0),\n            mono: new ArrayBuffer(0)\n        };\n    }\n    /**\n   * Logs data in debug mode\n   * @param {...any} arguments\n   * @returns {true}\n   */ log() {\n        if (this.debug) this.log(...arguments);\n        return true;\n    }\n    /**\n   * Retrieves the current sampleRate for the recorder\n   * @returns {number}\n   */ getSampleRate() {\n        return this.sampleRate;\n    }\n    /**\n   * Retrieves the current status of the recording\n   * @returns {\"ended\"|\"paused\"|\"recording\"}\n   */ getStatus() {\n        if (!this.processor) return \"ended\";\n        else if (!this.recording) return \"paused\";\n        else return \"recording\";\n    }\n    /**\n   * Sends an event to the AudioWorklet\n   * @private\n   * @param {string} name\n   * @param {{[key: string]: any}} data\n   * @param {AudioWorkletNode} [_processor]\n   * @returns {Promise<{[key: string]: any}>}\n   */ async _event(name, data = {}, _processor = null) {\n        _processor = _processor || this.processor;\n        if (!_processor) throw new Error(\"Can not send events without recording first\");\n        const message = {\n            event: name,\n            id: this._lastEventId++,\n            data: data\n        };\n        _processor.port.postMessage(message);\n        const t0 = new Date().valueOf();\n        while(!this.eventReceipts[message.id]){\n            if (new Date().valueOf() - t0 > this.eventTimeout) throw new Error(`Timeout waiting for \"${name}\" event`);\n            await new Promise((res)=>setTimeout(()=>res(true), 1));\n        }\n        const payload = this.eventReceipts[message.id];\n        delete this.eventReceipts[message.id];\n        return payload;\n    }\n    /**\n   * Begins a recording session for the given audioTrack\n   * Microphone recording indicator will appear on browser tab but status will be \"paused\"\n   * @param {MediaStreamTrack} [audioTrack] if no device provided, default device will be used\n   * @returns {Promise<true>}\n   */ async begin(audioTrack) {\n        if (this.processor) throw new Error(`Already connected: please call .end() to start a new session`);\n        if (!audioTrack || audioTrack.kind !== \"audio\") throw new Error(\"No audio track provided\");\n        this.stream = new MediaStream([\n            audioTrack\n        ]);\n        const context = new AudioContext({\n            sampleRate: this.sampleRate\n        });\n        const source = context.createMediaStreamSource(this.stream);\n        // Load and execute the module script.\n        try {\n            await context.audioWorklet.addModule(this.scriptSrc);\n        } catch (e) {\n            console.error(e);\n            throw new Error(`Could not add audioWorklet module: ${this.scriptSrc}`);\n        }\n        const processor = new AudioWorkletNode(context, \"audio_processor\");\n        processor.port.onmessage = (e)=>{\n            const { event: event, id: id, data: data } = e.data;\n            if (event === \"receipt\") this.eventReceipts[id] = data;\n            else if (event === \"chunk\") {\n                if (this._chunkProcessorSize) {\n                    const buffer = this._chunkProcessorBuffer;\n                    this._chunkProcessorBuffer = {\n                        raw: (0, $6d4b7449a1e1544a$export$13afda237b1c9846).mergeBuffers(buffer.raw, data.raw),\n                        mono: (0, $6d4b7449a1e1544a$export$13afda237b1c9846).mergeBuffers(buffer.mono, data.mono)\n                    };\n                    if (this._chunkProcessorBuffer.mono.byteLength >= this._chunkProcessorSize) {\n                        this._chunkProcessor(this._chunkProcessorBuffer);\n                        this._chunkProcessorBuffer = {\n                            raw: new ArrayBuffer(0),\n                            mono: new ArrayBuffer(0)\n                        };\n                    }\n                } else this._chunkProcessor(data);\n            }\n        };\n        const node = source.connect(processor);\n        const analyser = context.createAnalyser();\n        analyser.fftSize = 8192;\n        analyser.smoothingTimeConstant = 0.1;\n        node.connect(analyser);\n        if (this.outputToSpeakers) {\n            // eslint-disable-next-line no-console\n            console.warn(\"Warning: Output to speakers may affect sound quality,\\nespecially due to system audio feedback preventative measures.\\nuse only for debugging\");\n            analyser.connect(context.destination);\n        }\n        this.source = source;\n        this.node = node;\n        this.analyser = analyser;\n        this.processor = processor;\n        return true;\n    }\n    /**\n   * Gets the current frequency domain data from the recording track\n   * @param {\"frequency\"|\"music\"|\"voice\"} [analysisType]\n   * @param {number} [minDecibels] default -100\n   * @param {number} [maxDecibels] default -30\n   * @returns {import('./analysis/audio_analysis.js').AudioAnalysisOutputType}\n   */ getFrequencies(analysisType = \"frequency\", minDecibels = -100, maxDecibels = -30) {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        return (0, $f32f064564ee62f6$export$2c3136da0bf130f9).getFrequencies(this.analyser, this.sampleRate, null, analysisType, minDecibels, maxDecibels);\n    }\n    /**\n   * Pauses the recording\n   * Keeps microphone stream open but halts storage of audio\n   * @returns {Promise<true>}\n   */ async pause() {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        else if (!this.recording) throw new Error(\"Already paused: please call .record() first\");\n        if (this._chunkProcessorBuffer.raw.byteLength) this._chunkProcessor(this._chunkProcessorBuffer);\n        this.log(\"Pausing ...\");\n        await this._event(\"stop\");\n        this.recording = false;\n        return true;\n    }\n    /**\n   * Start recording stream and storing to memory from the connected audio source\n   * @param {(data: { mono: Int16Array; raw: Int16Array }) => any} [chunkProcessor]\n   * @param {number} [chunkSize] chunkProcessor will not be triggered until this size threshold met in mono audio\n   * @returns {Promise<true>}\n   */ async record(chunkProcessor = ()=>{}, chunkSize = 8192) {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        else if (this.recording) throw new Error(\"Already recording: HELLO please call .pause() first\");\n        else if (typeof chunkProcessor !== \"function\") throw new Error(`chunkProcessor must be a function`);\n        this._chunkProcessor = chunkProcessor;\n        this._chunkProcessorSize = chunkSize;\n        this._chunkProcessorBuffer = {\n            raw: new ArrayBuffer(0),\n            mono: new ArrayBuffer(0)\n        };\n        this.log(\"Recording ...\");\n        await this._event(\"start\");\n        this.recording = true;\n        return true;\n    }\n    /**\n   * Clears the audio buffer, empties stored recording\n   * @returns {Promise<true>}\n   */ async clear() {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        await this._event(\"clear\");\n        return true;\n    }\n    /**\n   * Reads the current audio stream data\n   * @returns {Promise<{meanValues: Float32Array, channels: Array<Float32Array>}>}\n   */ async read() {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        this.log(\"Reading ...\");\n        const result = await this._event(\"read\");\n        return result;\n    }\n    /**\n   * Saves the current audio stream to a file\n   * @param {boolean} [force] Force saving while still recording\n   * @returns {Promise<import('./wav_packer.js').WavPackerAudioType>}\n   */ async save(force = false) {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        if (!force && this.recording) throw new Error(\"Currently recording: please call .pause() first, or call .save(true) to force\");\n        this.log(\"Exporting ...\");\n        const exportData = await this._event(\"export\");\n        const packer = new (0, $6d4b7449a1e1544a$export$13afda237b1c9846)();\n        const result = packer.pack(this.sampleRate, exportData.audio);\n        return result;\n    }\n    /**\n   * Ends the current recording session and saves the result\n   * @returns {Promise<import('./wav_packer.js').WavPackerAudioType>}\n   */ async end() {\n        if (!this.processor) throw new Error(\"Session ended: please call .begin() first\");\n        const _processor = this.processor;\n        this.log(\"Stopping ...\");\n        await this._event(\"stop\");\n        this.recording = false;\n        this.log(\"Exporting ...\");\n        const exportData = await this._event(\"export\", {}, _processor);\n        this.processor.disconnect();\n        this.source.disconnect();\n        this.node.disconnect();\n        this.analyser.disconnect();\n        this.stream = null;\n        this.processor = null;\n        this.source = null;\n        this.node = null;\n        const packer = new (0, $6d4b7449a1e1544a$export$13afda237b1c9846)();\n        const result = packer.pack(this.sampleRate, exportData.audio);\n        return result;\n    }\n    /**\n   * Performs a full cleanup of WavRecorder instance\n   * Stops actively listening via microphone and removes existing listeners\n   * @returns {Promise<true>}\n   */ async quit() {\n        this.listenForDeviceChange(null);\n        if (this.processor) await this.end();\n        return true;\n    }\n}\nglobalThis.WavRecorder = WavRecorder;\n\n\n\n\nvar $fc49a56cd8739127$var$__extends =  false || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar $fc49a56cd8739127$var$__awaiter =  false || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $fc49a56cd8739127$var$__generator =  false || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $fc49a56cd8739127$export$4a0c46dbbe2ddb67 = /** @class */ function() {\n    function MediaManager() {\n        this._callbacks = {};\n        this._micEnabled = true;\n        this._camEnabled = false;\n    }\n    MediaManager.prototype.setUserAudioCallback = function(userAudioCallback) {\n        this._userAudioCallback = userAudioCallback;\n    };\n    MediaManager.prototype.setRTVIOptions = function(options, override) {\n        var _a, _b, _c;\n        if (override === void 0) override = false;\n        if (this._options && !override) return;\n        this._options = options;\n        this._callbacks = (_a = options.callbacks) !== null && _a !== void 0 ? _a : {};\n        this._micEnabled = (_b = options.enableMic) !== null && _b !== void 0 ? _b : true;\n        this._camEnabled = (_c = options.enableCam) !== null && _c !== void 0 ? _c : false;\n    };\n    return MediaManager;\n}();\nvar $fc49a56cd8739127$export$45c5b9bfba2f6304 = /** @class */ function(_super) {\n    $fc49a56cd8739127$var$__extends(WavMediaManager, _super);\n    function WavMediaManager(recorderChunkSize, recorderSampleRate) {\n        if (recorderChunkSize === void 0) recorderChunkSize = undefined;\n        if (recorderSampleRate === void 0) recorderSampleRate = 24000;\n        var _this = _super.call(this) || this;\n        _this._initialized = false;\n        _this._recorderChunkSize = undefined;\n        _this._recorderChunkSize = recorderChunkSize;\n        _this._wavRecorder = new (0, $62bc376044a05513$export$439b217ca659a877)({\n            sampleRate: recorderSampleRate\n        });\n        _this._wavStreamPlayer = new (0, $d0a969833958d9e7$export$9698d62c78b8f366)({\n            sampleRate: 24000\n        });\n        return _this;\n    }\n    WavMediaManager.prototype.initialize = function() {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            return $fc49a56cd8739127$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.begin()\n                        ];\n                    case 1:\n                        _a.sent();\n                        this._wavRecorder.listenForDeviceChange(null);\n                        this._wavRecorder.listenForDeviceChange(this._handleAvailableDevicesUpdated.bind(this));\n                        return [\n                            4 /*yield*/ ,\n                            this._wavStreamPlayer.connect()\n                        ];\n                    case 2:\n                        _a.sent();\n                        this._initialized = true;\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype.connect = function() {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            var isAlreadyRecording;\n            return $fc49a56cd8739127$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!!this._initialized) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this.initialize()\n                        ];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        isAlreadyRecording = this._wavRecorder.getStatus() == \"recording\";\n                        if (!(this._micEnabled && !isAlreadyRecording)) return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._startRecording()\n                        ];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype.disconnect = function() {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            return $fc49a56cd8739127$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this._initialized) return [\n                            2 /*return*/ \n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.end()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            this._wavStreamPlayer.interrupt()\n                        ];\n                    case 2:\n                        _a.sent();\n                        this._initialized = false;\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype.userStartedSpeaking = function() {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            return $fc49a56cd8739127$var$__generator(this, function(_a) {\n                return [\n                    2 /*return*/ ,\n                    this._wavStreamPlayer.interrupt()\n                ];\n            });\n        });\n    };\n    WavMediaManager.prototype.bufferBotAudio = function(data, id) {\n        return this._wavStreamPlayer.add16BitPCM(data, id);\n    };\n    WavMediaManager.prototype.getAllMics = function() {\n        return this._wavRecorder.listDevices();\n    };\n    WavMediaManager.prototype.getAllCams = function() {\n        // TODO: Video not supported yet\n        return Promise.resolve([]);\n    };\n    WavMediaManager.prototype.getAllSpeakers = function() {\n        // TODO: Implement speaker support\n        return Promise.resolve([]);\n    };\n    WavMediaManager.prototype.updateMic = function(micId) {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            var prevMic, curMic;\n            var _a, _b;\n            return $fc49a56cd8739127$var$__generator(this, function(_c) {\n                switch(_c.label){\n                    case 0:\n                        prevMic = this._wavRecorder.deviceSelection;\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.end()\n                        ];\n                    case 1:\n                        _c.sent();\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.begin(micId)\n                        ];\n                    case 2:\n                        _c.sent();\n                        if (!this._micEnabled) return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._startRecording()\n                        ];\n                    case 3:\n                        _c.sent();\n                        _c.label = 4;\n                    case 4:\n                        curMic = this._wavRecorder.deviceSelection;\n                        if (curMic && prevMic && prevMic.label !== curMic.label) (_b = (_a = this._callbacks).onMicUpdated) === null || _b === void 0 || _b.call(_a, curMic);\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype.updateCam = function(camId) {\n    // TODO: Video not supported yet\n    };\n    WavMediaManager.prototype.updateSpeaker = function(speakerId) {\n    // TODO: Implement speaker support\n    };\n    Object.defineProperty(WavMediaManager.prototype, \"selectedMic\", {\n        get: function() {\n            var _a;\n            return (_a = this._wavRecorder.deviceSelection) !== null && _a !== void 0 ? _a : {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WavMediaManager.prototype, \"selectedCam\", {\n        get: function() {\n            // TODO: Video not supported yet\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WavMediaManager.prototype, \"selectedSpeaker\", {\n        get: function() {\n            // TODO: Implement speaker support\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WavMediaManager.prototype.enableMic = function(enable) {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, Promise, function() {\n            var _this = this;\n            return $fc49a56cd8739127$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        this._micEnabled = enable;\n                        if (!this._wavRecorder.stream) return [\n                            2 /*return*/ \n                        ];\n                        this._wavRecorder.stream.getAudioTracks().forEach(function(track) {\n                            var _a, _b;\n                            track.enabled = enable;\n                            if (!enable) (_b = (_a = _this._callbacks).onTrackStopped) === null || _b === void 0 || _b.call(_a, track, $fc49a56cd8739127$var$localParticipant());\n                        });\n                        if (!enable) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._startRecording()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.pause()\n                        ];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype.enableCam = function(enable) {\n    // TODO: Video not supported yet\n    };\n    Object.defineProperty(WavMediaManager.prototype, \"isCamEnabled\", {\n        get: function() {\n            // TODO: Video not supported yet\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WavMediaManager.prototype, \"isMicEnabled\", {\n        get: function() {\n            return this._micEnabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WavMediaManager.prototype.tracks = function() {\n        var _a;\n        var tracks = (_a = this._wavRecorder.stream) === null || _a === void 0 ? void 0 : _a.getTracks()[0];\n        return {\n            local: tracks ? {\n                audio: tracks\n            } : {}\n        };\n    };\n    WavMediaManager.prototype._startRecording = function() {\n        return $fc49a56cd8739127$var$__awaiter(this, void 0, void 0, function() {\n            var track;\n            var _this = this;\n            var _a, _b, _c;\n            return $fc49a56cd8739127$var$__generator(this, function(_d) {\n                switch(_d.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._wavRecorder.record(function(data) {\n                                _this._userAudioCallback(data.mono);\n                            }, this._recorderChunkSize)\n                        ];\n                    case 1:\n                        _d.sent();\n                        track = (_a = this._wavRecorder.stream) === null || _a === void 0 ? void 0 : _a.getAudioTracks()[0];\n                        if (track) (_c = (_b = this._callbacks).onTrackStarted) === null || _c === void 0 || _c.call(_b, track, $fc49a56cd8739127$var$localParticipant());\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WavMediaManager.prototype._handleAvailableDevicesUpdated = function(devices) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this._callbacks).onAvailableCamsUpdated) === null || _b === void 0 || _b.call(_a, devices.filter(function(d) {\n            return d.kind === \"videoinput\";\n        }));\n        (_d = (_c = this._callbacks).onAvailableMicsUpdated) === null || _d === void 0 || _d.call(_c, devices.filter(function(d) {\n            return d.kind === \"audioinput\";\n        }));\n        // if the current device went away or we're using the default and\n        // the default changed, reset the mic.\n        var defaultDevice = devices.find(function(d) {\n            return d.deviceId === \"default\";\n        });\n        var currentDevice = this._wavRecorder.deviceSelection;\n        if (currentDevice && (!devices.some(function(d) {\n            return d.deviceId === currentDevice.deviceId;\n        }) || currentDevice.deviceId === \"default\" && currentDevice.label !== (defaultDevice === null || defaultDevice === void 0 ? void 0 : defaultDevice.label))) this.updateMic(\"\");\n    };\n    return WavMediaManager;\n}($fc49a56cd8739127$export$4a0c46dbbe2ddb67);\nvar $fc49a56cd8739127$var$localParticipant = function() {\n    return {\n        id: \"local\",\n        name: \"\",\n        local: true\n    };\n};\n\n\n\n\n\nvar $22ece045290c996a$var$__extends =  false || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar $22ece045290c996a$var$__awaiter =  false || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $22ece045290c996a$var$__generator =  false || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $22ece045290c996a$export$c95c65abc5f47125 = /** @class */ function(_super) {\n    $22ece045290c996a$var$__extends(DailyMediaManager, _super);\n    function DailyMediaManager(enablePlayer, enableRecording, onTrackStartedCallback, onTrackStoppedCallback, recorderChunkSize, recorderSampleRate, playerSampleRate) {\n        if (enablePlayer === void 0) enablePlayer = true;\n        if (enableRecording === void 0) enableRecording = true;\n        if (recorderChunkSize === void 0) recorderChunkSize = undefined;\n        if (recorderSampleRate === void 0) recorderSampleRate = 24000;\n        if (playerSampleRate === void 0) playerSampleRate = 24000;\n        var _a;\n        var _this = _super.call(this) || this;\n        _this._selectedCam = {};\n        _this._selectedMic = {};\n        _this._selectedSpeaker = {};\n        _this._remoteAudioLevelInterval = null;\n        _this._recorderChunkSize = undefined;\n        _this._initialized = false;\n        _this._connected = false;\n        _this._currentAudioTrack = null;\n        _this._connectResolve = null;\n        _this.onTrackStartedCallback = onTrackStartedCallback;\n        _this.onTrackStoppedCallback = onTrackStoppedCallback;\n        _this._recorderChunkSize = recorderChunkSize;\n        _this._daily = (_a = (0, _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]).getCallInstance()) !== null && _a !== void 0 ? _a : (0, _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]).createCallObject();\n        if (enableRecording) _this._mediaStreamRecorder = new (0, $5fc11d7bc0d20724$export$2934cf2d25c67a48)({\n            sampleRate: recorderSampleRate\n        });\n        if (enablePlayer) _this._wavStreamPlayer = new (0, $d0a969833958d9e7$export$9698d62c78b8f366)({\n            sampleRate: playerSampleRate\n        });\n        _this._daily.on(\"track-started\", _this.handleTrackStarted.bind(_this));\n        _this._daily.on(\"track-stopped\", _this.handleTrackStopped.bind(_this));\n        _this._daily.on(\"available-devices-updated\", _this._handleAvailableDevicesUpdated.bind(_this));\n        _this._daily.on(\"selected-devices-updated\", _this._handleSelectedDevicesUpdated.bind(_this));\n        _this._daily.on(\"local-audio-level\", _this._handleLocalAudioLevel.bind(_this));\n        return _this;\n    }\n    DailyMediaManager.prototype.initialize = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var infos, devices, cams, mics, speakers;\n            var _this = this;\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            return $22ece045290c996a$var$__generator(this, function(_o) {\n                switch(_o.label){\n                    case 0:\n                        if (this._initialized) {\n                            console.warn(\"DailyMediaManager already initialized\");\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.startCamera({\n                                startVideoOff: !this._camEnabled,\n                                startAudioOff: !this._micEnabled\n                            })\n                        ];\n                    case 1:\n                        infos = _o.sent();\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.enumerateDevices()\n                        ];\n                    case 2:\n                        devices = _o.sent().devices;\n                        cams = devices.filter(function(d) {\n                            return d.kind === \"videoinput\";\n                        });\n                        mics = devices.filter(function(d) {\n                            return d.kind === \"audioinput\";\n                        });\n                        speakers = devices.filter(function(d) {\n                            return d.kind === \"audiooutput\";\n                        });\n                        (_b = (_a = this._callbacks).onAvailableCamsUpdated) === null || _b === void 0 || _b.call(_a, cams);\n                        (_d = (_c = this._callbacks).onAvailableMicsUpdated) === null || _d === void 0 || _d.call(_c, mics);\n                        (_f = (_e = this._callbacks).onAvailableSpeakersUpdated) === null || _f === void 0 || _f.call(_e, speakers);\n                        this._selectedCam = infos.camera;\n                        (_h = (_g = this._callbacks).onCamUpdated) === null || _h === void 0 || _h.call(_g, infos.camera);\n                        this._selectedMic = infos.mic;\n                        (_k = (_j = this._callbacks).onMicUpdated) === null || _k === void 0 || _k.call(_j, infos.mic);\n                        this._selectedSpeaker = infos.speaker;\n                        (_m = (_l = this._callbacks).onSpeakerUpdated) === null || _m === void 0 || _m.call(_l, infos.speaker);\n                        if (!!this._daily.isLocalAudioLevelObserverRunning()) return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.startLocalAudioLevelObserver(100)\n                        ];\n                    case 3:\n                        _o.sent();\n                        _o.label = 4;\n                    case 4:\n                        if (!this._wavStreamPlayer) return [\n                            3 /*break*/ ,\n                            6\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._wavStreamPlayer.connect()\n                        ];\n                    case 5:\n                        _o.sent();\n                        if (!this._remoteAudioLevelInterval) this._remoteAudioLevelInterval = setInterval(function() {\n                            var _a;\n                            var frequencies = _this._wavStreamPlayer.getFrequencies();\n                            var aveVal = 0;\n                            if ((_a = frequencies.values) === null || _a === void 0 ? void 0 : _a.length) aveVal = frequencies.values.reduce(function(a, c) {\n                                return a + c;\n                            }, 0) / frequencies.values.length;\n                            _this._handleRemoteAudioLevel(aveVal);\n                        }, 100);\n                        _o.label = 6;\n                    case 6:\n                        this._initialized = true;\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.connect = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var _this = this;\n            return $22ece045290c996a$var$__generator(this, function(_a) {\n                if (this._connected) {\n                    console.warn(\"DailyMediaManager already connected\");\n                    return [\n                        2 /*return*/ \n                    ];\n                }\n                this._connected = true;\n                if (!this._initialized) return [\n                    2 /*return*/ ,\n                    new Promise(function(resolve) {\n                        (function() {\n                            return $22ece045290c996a$var$__awaiter(_this, void 0, void 0, function() {\n                                return $22ece045290c996a$var$__generator(this, function(_a) {\n                                    switch(_a.label){\n                                        case 0:\n                                            this._connectResolve = resolve;\n                                            return [\n                                                4 /*yield*/ ,\n                                                this.initialize()\n                                            ];\n                                        case 1:\n                                            _a.sent();\n                                            return [\n                                                2 /*return*/ \n                                            ];\n                                    }\n                                });\n                            });\n                        })();\n                    })\n                ];\n                if (this._micEnabled) this._startRecording();\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    DailyMediaManager.prototype.disconnect = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var _a, _b;\n            return $22ece045290c996a$var$__generator(this, function(_c) {\n                switch(_c.label){\n                    case 0:\n                        if (this._remoteAudioLevelInterval) clearInterval(this._remoteAudioLevelInterval);\n                        this._remoteAudioLevelInterval = null;\n                        this._daily.leave();\n                        this._currentAudioTrack = null;\n                        return [\n                            4 /*yield*/ ,\n                            (_a = this._mediaStreamRecorder) === null || _a === void 0 ? void 0 : _a.end()\n                        ];\n                    case 1:\n                        _c.sent();\n                        (_b = this._wavStreamPlayer) === null || _b === void 0 || _b.interrupt();\n                        this._initialized = false;\n                        this._connected = false;\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.userStartedSpeaking = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var _a;\n            return $22ece045290c996a$var$__generator(this, function(_b) {\n                return [\n                    2 /*return*/ ,\n                    (_a = this._wavStreamPlayer) === null || _a === void 0 ? void 0 : _a.interrupt()\n                ];\n            });\n        });\n    };\n    DailyMediaManager.prototype.bufferBotAudio = function(data, id) {\n        var _a;\n        return (_a = this._wavStreamPlayer) === null || _a === void 0 ? void 0 : _a.add16BitPCM(data, id);\n    };\n    DailyMediaManager.prototype.getAllMics = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var devices;\n            return $22ece045290c996a$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.enumerateDevices()\n                        ];\n                    case 1:\n                        devices = _a.sent().devices;\n                        return [\n                            2 /*return*/ ,\n                            devices.filter(function(device) {\n                                return device.kind === \"audioinput\";\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.getAllCams = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var devices;\n            return $22ece045290c996a$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.enumerateDevices()\n                        ];\n                    case 1:\n                        devices = _a.sent().devices;\n                        return [\n                            2 /*return*/ ,\n                            devices.filter(function(device) {\n                                return device.kind === \"videoinput\";\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.getAllSpeakers = function() {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var devices;\n            return $22ece045290c996a$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._daily.enumerateDevices()\n                        ];\n                    case 1:\n                        devices = _a.sent().devices;\n                        return [\n                            2 /*return*/ ,\n                            devices.filter(function(device) {\n                                return device.kind === \"audiooutput\";\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.updateMic = function(micId) {\n        var _this = this;\n        this._daily.setInputDevicesAsync({\n            audioDeviceId: micId\n        }).then(function(deviceInfo) {\n            _this._selectedMic = deviceInfo.mic;\n        });\n    };\n    DailyMediaManager.prototype.updateCam = function(camId) {\n        var _this = this;\n        this._daily.setInputDevicesAsync({\n            videoDeviceId: camId\n        }).then(function(deviceInfo) {\n            _this._selectedCam = deviceInfo.camera;\n        });\n    };\n    DailyMediaManager.prototype.updateSpeaker = function(speakerId) {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var sID, speakers, defaultSpeaker_1, defaultSpeakerCp;\n            var _this = this;\n            var _a, _b;\n            return $22ece045290c996a$var$__generator(this, function(_c) {\n                switch(_c.label){\n                    case 0:\n                        if (speakerId !== \"default\" && this._selectedSpeaker.deviceId === speakerId) return [\n                            2 /*return*/ \n                        ];\n                        sID = speakerId;\n                        if (!(sID === \"default\")) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this.getAllSpeakers()\n                        ];\n                    case 1:\n                        speakers = _c.sent();\n                        defaultSpeaker_1 = speakers.find(function(s) {\n                            return s.deviceId === \"default\";\n                        });\n                        if (!defaultSpeaker_1) {\n                            console.warn(\"No default speaker found\");\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        speakers.splice(speakers.indexOf(defaultSpeaker_1), 1);\n                        defaultSpeakerCp = speakers.find(function(s) {\n                            return defaultSpeaker_1.label.includes(s.label);\n                        });\n                        sID = (_a = defaultSpeakerCp === null || defaultSpeakerCp === void 0 ? void 0 : defaultSpeakerCp.deviceId) !== null && _a !== void 0 ? _a : speakerId;\n                        _c.label = 2;\n                    case 2:\n                        (_b = this._wavStreamPlayer) === null || _b === void 0 || _b.updateSpeaker(sID).then(function() {\n                            var _a, _b;\n                            _this._selectedSpeaker = {\n                                deviceId: speakerId\n                            };\n                            (_b = (_a = _this._callbacks).onSpeakerUpdated) === null || _b === void 0 || _b.call(_a, _this._selectedSpeaker);\n                        });\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    Object.defineProperty(DailyMediaManager.prototype, \"selectedMic\", {\n        get: function() {\n            return this._selectedMic;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DailyMediaManager.prototype, \"selectedCam\", {\n        get: function() {\n            return this._selectedCam;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DailyMediaManager.prototype, \"selectedSpeaker\", {\n        get: function() {\n            return this._selectedSpeaker;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DailyMediaManager.prototype.enableMic = function(enable) {\n        return $22ece045290c996a$var$__awaiter(this, void 0, Promise, function() {\n            var _a;\n            return $22ece045290c996a$var$__generator(this, function(_b) {\n                this._micEnabled = enable;\n                if (!((_a = this._daily.participants()) === null || _a === void 0 ? void 0 : _a.local)) return [\n                    2 /*return*/ \n                ];\n                this._daily.setLocalAudio(enable);\n                if (this._mediaStreamRecorder) {\n                    if (enable) {\n                        if (this._mediaStreamRecorder.getStatus() === \"paused\") this._startRecording();\n                         // else, we'll record on the track-started event\n                    } else if (this._mediaStreamRecorder.getStatus() === \"recording\") this._mediaStreamRecorder.pause();\n                }\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    DailyMediaManager.prototype.enableCam = function(enable) {\n        this._camEnabled = enable;\n        this._daily.setLocalVideo(enable);\n    };\n    Object.defineProperty(DailyMediaManager.prototype, \"isCamEnabled\", {\n        get: function() {\n            return this._daily.localVideo();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DailyMediaManager.prototype, \"isMicEnabled\", {\n        get: function() {\n            return this._daily.localAudio();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DailyMediaManager.prototype.tracks = function() {\n        var _a, _b, _c, _d, _e, _f;\n        var participants = this._daily.participants();\n        return {\n            local: {\n                audio: (_c = (_b = (_a = participants === null || participants === void 0 ? void 0 : participants.local) === null || _a === void 0 ? void 0 : _a.tracks) === null || _b === void 0 ? void 0 : _b.audio) === null || _c === void 0 ? void 0 : _c.persistentTrack,\n                video: (_f = (_e = (_d = participants === null || participants === void 0 ? void 0 : participants.local) === null || _d === void 0 ? void 0 : _d.tracks) === null || _e === void 0 ? void 0 : _e.video) === null || _f === void 0 ? void 0 : _f.persistentTrack\n            }\n        };\n    };\n    DailyMediaManager.prototype._startRecording = function() {\n        var _this = this;\n        if (!this._connected || !this._mediaStreamRecorder) return;\n        try {\n            this._mediaStreamRecorder.record(function(data) {\n                _this._userAudioCallback(data.mono);\n            }, this._recorderChunkSize);\n        } catch (e) {\n            var err = e;\n            if (!err.message.includes(\"Already recording\")) console.error(\"Error starting recording\", e);\n        }\n    };\n    DailyMediaManager.prototype._handleAvailableDevicesUpdated = function(event) {\n        var _a, _b, _c, _d, _e, _f;\n        (_b = (_a = this._callbacks).onAvailableCamsUpdated) === null || _b === void 0 || _b.call(_a, event.availableDevices.filter(function(d) {\n            return d.kind === \"videoinput\";\n        }));\n        (_d = (_c = this._callbacks).onAvailableMicsUpdated) === null || _d === void 0 || _d.call(_c, event.availableDevices.filter(function(d) {\n            return d.kind === \"audioinput\";\n        }));\n        (_f = (_e = this._callbacks).onAvailableSpeakersUpdated) === null || _f === void 0 || _f.call(_e, event.availableDevices.filter(function(d) {\n            return d.kind === \"audiooutput\";\n        }));\n        if (this._selectedSpeaker.deviceId === \"default\") this.updateSpeaker(\"default\");\n    };\n    DailyMediaManager.prototype._handleSelectedDevicesUpdated = function(event) {\n        var _a, _b, _c, _d, _e, _f;\n        if (((_a = this._selectedCam) === null || _a === void 0 ? void 0 : _a.deviceId) !== event.devices.camera) {\n            this._selectedCam = event.devices.camera;\n            (_c = (_b = this._callbacks).onCamUpdated) === null || _c === void 0 || _c.call(_b, event.devices.camera);\n        }\n        if (((_d = this._selectedMic) === null || _d === void 0 ? void 0 : _d.deviceId) !== event.devices.mic) {\n            this._selectedMic = event.devices.mic;\n            (_f = (_e = this._callbacks).onMicUpdated) === null || _f === void 0 || _f.call(_e, event.devices.mic);\n        }\n    };\n    DailyMediaManager.prototype._handleLocalAudioLevel = function(ev) {\n        var _a, _b;\n        (_b = (_a = this._callbacks).onLocalAudioLevel) === null || _b === void 0 || _b.call(_a, ev.audioLevel);\n    };\n    DailyMediaManager.prototype._handleRemoteAudioLevel = function(audioLevel) {\n        var _a, _b;\n        (_b = (_a = this._callbacks).onRemoteAudioLevel) === null || _b === void 0 || _b.call(_a, audioLevel, $22ece045290c996a$var$botParticipant());\n    };\n    DailyMediaManager.prototype.handleTrackStarted = function(event) {\n        return $22ece045290c996a$var$__awaiter(this, void 0, void 0, function() {\n            var status, _a;\n            var _b, _c, _d, _e;\n            return $22ece045290c996a$var$__generator(this, function(_f) {\n                switch(_f.label){\n                    case 0:\n                        if (!((_b = event.participant) === null || _b === void 0 ? void 0 : _b.local)) return [\n                            2 /*return*/ \n                        ];\n                        if (!(event.track.kind === \"audio\")) return [\n                            3 /*break*/ ,\n                            10\n                        ];\n                        if (!this._mediaStreamRecorder) return [\n                            3 /*break*/ ,\n                            9\n                        ];\n                        status = this._mediaStreamRecorder.getStatus();\n                        _a = status;\n                        switch(_a){\n                            case \"ended\":\n                                return [\n                                    3 /*break*/ ,\n                                    1\n                                ];\n                            case \"paused\":\n                                return [\n                                    3 /*break*/ ,\n                                    3\n                                ];\n                            case \"recording\":\n                                return [\n                                    3 /*break*/ ,\n                                    4\n                                ];\n                        }\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 1:\n                        return [\n                            4 /*yield*/ ,\n                            this._mediaStreamRecorder.begin(event.track)\n                        ];\n                    case 2:\n                        _f.sent();\n                        if (this._connected) {\n                            this._startRecording();\n                            if (this._connectResolve) {\n                                this._connectResolve();\n                                this._connectResolve = null;\n                            }\n                        }\n                        return [\n                            3 /*break*/ ,\n                            9\n                        ];\n                    case 3:\n                        this._startRecording();\n                        return [\n                            3 /*break*/ ,\n                            9\n                        ];\n                    case 4:\n                        if (!(this._currentAudioTrack !== event.track)) return [\n                            3 /*break*/ ,\n                            7\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            this._mediaStreamRecorder.end()\n                        ];\n                    case 5:\n                        _f.sent();\n                        return [\n                            4 /*yield*/ ,\n                            this._mediaStreamRecorder.begin(event.track)\n                        ];\n                    case 6:\n                        _f.sent();\n                        this._startRecording();\n                        return [\n                            3 /*break*/ ,\n                            8\n                        ];\n                    case 7:\n                        console.warn(\"track-started event received for current track and already recording\");\n                        _f.label = 8;\n                    case 8:\n                        return [\n                            3 /*break*/ ,\n                            9\n                        ];\n                    case 9:\n                        this._currentAudioTrack = event.track;\n                        _f.label = 10;\n                    case 10:\n                        (_d = (_c = this._callbacks).onTrackStarted) === null || _d === void 0 || _d.call(_c, event.track, event.participant ? $22ece045290c996a$var$dailyParticipantToParticipant(event.participant) : undefined);\n                        (_e = this.onTrackStartedCallback) === null || _e === void 0 || _e.call(this, event);\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    DailyMediaManager.prototype.handleTrackStopped = function(event) {\n        var _a, _b, _c, _d;\n        if (!((_a = event.participant) === null || _a === void 0 ? void 0 : _a.local)) return;\n        if (event.track.kind === \"audio\") {\n            if (this._mediaStreamRecorder && this._mediaStreamRecorder.getStatus() === \"recording\") this._mediaStreamRecorder.pause();\n        }\n        (_c = (_b = this._callbacks).onTrackStopped) === null || _c === void 0 || _c.call(_b, event.track, event.participant ? $22ece045290c996a$var$dailyParticipantToParticipant(event.participant) : undefined);\n        (_d = this.onTrackStoppedCallback) === null || _d === void 0 || _d.call(this, event);\n    };\n    return DailyMediaManager;\n}((0, $fc49a56cd8739127$export$4a0c46dbbe2ddb67));\nvar $22ece045290c996a$var$dailyParticipantToParticipant = function(p) {\n    return {\n        id: p.user_id,\n        local: p.local,\n        name: p.user_name\n    };\n};\nvar $22ece045290c996a$var$botParticipant = function() {\n    return {\n        id: \"bot\",\n        local: false,\n        name: \"Bot\"\n    };\n};\n\n\n\n\nvar $032380dbcf3f4e13$var$__extends =  false || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar $032380dbcf3f4e13$var$__awaiter =  false || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $032380dbcf3f4e13$var$__generator =  false || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $032380dbcf3f4e13$var$__spreadArray =  false || function(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar $032380dbcf3f4e13$var$readyStates = [\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n];\nvar $032380dbcf3f4e13$var$KEEP_ALIVE_INTERVAL = 5000;\nvar $032380dbcf3f4e13$var$KEEP_ALIVE_TIMEOUT = 15000;\n// client side code in soupSFU has a timeout of 15 seconds for command response\n// 5 seconds seems reasonable that it provides roughly 3 retry attempts\nvar $032380dbcf3f4e13$var$WEBSOCKET_CONNECTION_TIMEOUT = 150000;\nvar $032380dbcf3f4e13$var$DEFAULT_RECONNECT_ATTEMPTS = 2;\nvar $032380dbcf3f4e13$var$MAX_RECONNECT_ATTEMPTS = 10;\nvar $032380dbcf3f4e13$var$DEFAULT_RECONNECT_INTERVAL = 1000;\nvar $032380dbcf3f4e13$var$MAX_RECONNECT_INTERVAL = 30000;\nvar $032380dbcf3f4e13$var$DEFAULT_RECONNECT_DECAY = 1.5;\nvar $032380dbcf3f4e13$var$WEBSOCKET_TIMEOUT_CODE = 4100;\nvar $032380dbcf3f4e13$var$SIG_CONNECTION_CANCELED = \"SIG_CONNECTION_CANCELED\";\nvar $032380dbcf3f4e13$var$WEBSOCKET_ERROR = \"WEBSOCKET_ERROR\";\nvar $032380dbcf3f4e13$var$LOG_LEVEL;\n(function(LOG_LEVEL) {\n    LOG_LEVEL[LOG_LEVEL[\"DEBUG\"] = 0] = \"DEBUG\";\n    LOG_LEVEL[LOG_LEVEL[\"ERROR\"] = 1] = \"ERROR\";\n    LOG_LEVEL[LOG_LEVEL[\"INFO\"] = 2] = \"INFO\";\n    LOG_LEVEL[LOG_LEVEL[\"WARN\"] = 3] = \"WARN\";\n})($032380dbcf3f4e13$var$LOG_LEVEL || ($032380dbcf3f4e13$var$LOG_LEVEL = {}));\nvar $032380dbcf3f4e13$var$rWebSocket = /** @class */ function() {\n    function rWebSocket(url, protocols) {\n        this._closedManually = false;\n        this._errored = false;\n        this._rejected = false;\n        this._timed_out = false;\n        this._initialConnectionOk = false;\n        this._ws = new WebSocket(url, protocols);\n    }\n    rWebSocket.prototype.addEventListener = function(type, listener) {\n        this._ws.addEventListener(type, listener);\n    };\n    // Add other WebSocket methods as needed\n    rWebSocket.prototype.close = function(code, reason) {\n        this._ws.close(code, reason);\n    };\n    rWebSocket.prototype.send = function(data) {\n        this._ws.send(data);\n    };\n    Object.defineProperty(rWebSocket.prototype, \"url\", {\n        // Add getters for WebSocket properties\n        get: function() {\n            return this._ws.url;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(rWebSocket.prototype, \"readyState\", {\n        get: function() {\n            return this._ws.readyState;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return rWebSocket;\n}();\n/**\n * Builds on top of Javascript Websockets\n *\n * This behaves like the Websocket library in every way, except if it fails to\n * connect or if it gets disconnected, it will try to reconnect depending on\n * the maximum number of reconnect attempts set. retry is not enabled for initial\n * connection. When initial connection fails it is best to check yourself before\n * you keep wreckin' yourself.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * While it is API compatible with the NodeJS ws library, we provide the\n * following additional properties and events on the ReconnectingWebSocket.\n *\n * Events:\n *\n * connection-timeout\n * - Emitted when the web socket connection times out.\n *\n * reconnecting\n * - Emitted after a manual close of the web socket is done and before retrying\n *   the connection.\n *\n * reconnect-failed\n * - Emitted when the number of connection attempts exceeds the set number of\n *   reconnection attempts.\n *\n * keep-alive\n * - Emitted when the set keep alive interval elapses. This event may be used\n *   to have ping pong keep-alive mechanism for web socket health.\n *\n * Properties:\n *\n * keepAliveTimeout\n * - The timeout for keep-alive. Default: 15000\n *\n * keepAliveInterval\n * - The interval at which to emit keep-alive event. Default: 5000\n *\n * shouldRetryFn\n * - A callback function which should return boolean to determine if a web\n *   socket reconnection attempt should be made. When not set, connection is\n *   always retried.\n *\n * connectionTimeout\n * - The timeout interval for considering whether the connection timed out.\n *   Default: 20000 ms\n *\n * maxReconnectAttempts\n * - The maximum number of attempts to be made for reconnection. Default: 2\n *\n * reconnectInterval\n * - The interval to wait before attempting a reconnection. Default: 1000 ms\n */ var $032380dbcf3f4e13$export$4f3d0ffd941ebefb = /** @class */ function(_super) {\n    $032380dbcf3f4e13$var$__extends(ReconnectingWebSocket, _super);\n    function ReconnectingWebSocket(address, protocols, options) {\n        if (options === void 0) options = {};\n        var _a;\n        var _this = _super.call(this) || this;\n        if (!address) throw new Error(\"Need a valid WebSocket URL\");\n        _this._ws = null;\n        _this._url = address;\n        _this._protocols = protocols;\n        _this._parseBlobToJson = (_a = options === null || options === void 0 ? void 0 : options.parseBlobToJson) !== null && _a !== void 0 ? _a : true;\n        _this.init();\n        return _this;\n    }\n    ReconnectingWebSocket.prototype.init = function() {\n        this._keepAliveTimeout = $032380dbcf3f4e13$var$KEEP_ALIVE_TIMEOUT;\n        this._keepAliveInterval = $032380dbcf3f4e13$var$KEEP_ALIVE_INTERVAL;\n        this._disconnected = false;\n        this._keepIntervalID = null;\n        this._shouldRetryFn = null;\n        this._connectionTimeout = $032380dbcf3f4e13$var$WEBSOCKET_CONNECTION_TIMEOUT;\n        this._reconnectAttempts = 0;\n        this._allowedReconnectAttempts = $032380dbcf3f4e13$var$DEFAULT_RECONNECT_ATTEMPTS;\n        this._reconnectInterval = $032380dbcf3f4e13$var$DEFAULT_RECONNECT_INTERVAL;\n        this._maxReconnectInterval = $032380dbcf3f4e13$var$MAX_RECONNECT_INTERVAL;\n        this._reconnectDecay = $032380dbcf3f4e13$var$DEFAULT_RECONNECT_DECAY;\n    };\n    ReconnectingWebSocket.prototype.connect = function() {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            var _this = this;\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                return [\n                    2 /*return*/ ,\n                    new Promise(function(resolve, reject) {\n                        _this._disconnected = false;\n                        _this.clearReconnectTimeout();\n                        var ws = new $032380dbcf3f4e13$var$rWebSocket(_this._url, _this._protocols);\n                        _this.setConnectionTimeout();\n                        ws.addEventListener(\"close\", function(evt) {\n                            var closeEvent = evt;\n                            var code = ws._timed_out ? $032380dbcf3f4e13$var$WEBSOCKET_TIMEOUT_CODE : closeEvent.code;\n                            var reason = ws._timed_out ? \"websocket connection timed out\" : closeEvent.reason;\n                            ws._timed_out = false;\n                            if (!ws._closedManually && ws._initialConnectionOk) {\n                                console.warn(\"signaling socket closed unexpectedly: \".concat(code).concat(reason ? \" \" + reason : \"\"));\n                                _this._closeSocket();\n                                _this.emit(\"close\", code, reason);\n                            } else _this.log(\"signaling socket closed\");\n                            if (!ws._closedManually && (ws._errored || ws._timed_out)) {\n                                console.warn(\"signaling socket closed on error: \".concat(code).concat(reason ? \" \" + reason : \"\"));\n                                if (!ws._rejected) {\n                                    ws._rejected = true;\n                                    var err = new Error(\"WebSocket connection error (\".concat(code, \"): \").concat(reason));\n                                    err.name = $032380dbcf3f4e13$var$WEBSOCKET_ERROR;\n                                    reject(err);\n                                }\n                            }\n                        });\n                        ws.addEventListener(\"open\", function(evt) {\n                            _this.log(\"wss connection opened to\", $032380dbcf3f4e13$var$LOG_LEVEL.DEBUG, _this._url);\n                            _this.clearConnectionTimeout();\n                            // now that the timeout closes the socket, in theory this onopen\n                            // callback should never happen in the first place, but seems\n                            // harmless to leave these safeguards in\n                            if (ws._rejected || ws._timed_out) return;\n                            if (ws._closedManually || _this._ws && _this._ws !== ws) {\n                                ws._rejected = true;\n                                ws.close();\n                                var err = Error(\"wss connection interrupted by disconnect or newer connection\");\n                                err.name = $032380dbcf3f4e13$var$SIG_CONNECTION_CANCELED;\n                                reject(err);\n                                return;\n                            }\n                            ws._initialConnectionOk = _this._url;\n                            _this._lastMsgRecvTime = Date.now();\n                            if (_this._keepAliveInterval) _this._keepIntervalID = setInterval(function() {\n                                return _this.checkSocketHealthAndSendKeepAlive();\n                            }, _this._keepAliveInterval);\n                            _this._ws = ws;\n                            _this.emit(\"open\");\n                            resolve(ws);\n                        });\n                        ws.addEventListener(\"error\", function(evt) {\n                            // fyi: evt is an Event here, with 0 amount of helpful info. If there\n                            //   happens to be info about the error, it's included in the\n                            //   accompanying close event (because that make sense. shakes head)\n                            //   SO. We do not reject here. Instead, we just set the _errored\n                            //   flag on the socket so when the close event occurs, it knows to\n                            //   reject the promise\n                            if (!ws._closedManually) {\n                                var wsTarget = evt.currentTarget;\n                                _this.log(\"websocket error event: \".concat(wsTarget === null || wsTarget === void 0 ? void 0 : wsTarget.url));\n                            }\n                            ws._errored = true;\n                        });\n                        ws.addEventListener(\"message\", function(msg) {\n                            _this._handleMessage(msg);\n                        });\n                    })\n                ];\n            });\n        });\n    };\n    ReconnectingWebSocket.prototype.setConnectionTimeout = function() {\n        var _this = this;\n        this._connectionTimeoutID = setTimeout(function() {\n            return $032380dbcf3f4e13$var$__awaiter(_this, void 0, void 0, function() {\n                return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                    switch(_a.label){\n                        case 0:\n                            this.log(\"Connection reconnect attempt timed out.\");\n                            this.emit(\"connection-timeout\");\n                            this.clearConnectionTimeout();\n                            return [\n                                4 /*yield*/ ,\n                                this._closeSocket()\n                            ];\n                        case 1:\n                            _a.sent();\n                            return [\n                                2 /*return*/ \n                            ];\n                    }\n                });\n            });\n        }, this._connectionTimeout);\n    };\n    ReconnectingWebSocket.prototype.clearConnectionTimeout = function() {\n        clearTimeout(this._connectionTimeoutID);\n        this._connectionTimeoutID = undefined;\n    };\n    ReconnectingWebSocket.prototype.clearReconnectTimeout = function() {\n        clearTimeout(this._reconnectTimeoutID);\n        this._reconnectTimeoutID = undefined;\n    };\n    ReconnectingWebSocket.prototype.clearKeepAliveInterval = function() {\n        if (this._keepIntervalID) {\n            clearInterval(this._keepIntervalID);\n            this._keepIntervalID = null;\n        }\n    };\n    ReconnectingWebSocket.prototype.checkSocketHealthAndSendKeepAlive = function() {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!(this._ws && this._ws.readyState === WebSocket.OPEN)) return [\n                            2 /*return*/ \n                        ];\n                        if (!this._keepAliveTimeout || !this._keepAliveInterval) return [\n                            2 /*return*/ \n                        ];\n                        if (!(Date.now() - this._lastMsgRecvTime > this._keepAliveTimeout)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        this.log(\"Connection is stale, need to reconnect\", $032380dbcf3f4e13$var$LOG_LEVEL.WARN);\n                        return [\n                            4 /*yield*/ ,\n                            this._closeSocket()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                    case 2:\n                        // Only emit the keep-alive event if we haven't sent anything else recently\n                        if (Date.now() - this._lastMsgSendTime < this._keepAliveInterval) return [\n                            2 /*return*/ \n                        ];\n                        this.log(\"Emitting keep-alive\", $032380dbcf3f4e13$var$LOG_LEVEL.DEBUG);\n                        this.emit(\"keep-alive\");\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    // We use the word manually here to imply the application using this code\n    // or this code itself will decide to close the socket.\n    ReconnectingWebSocket.prototype._closeSocket = function() {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            var shouldRetry, error_1;\n            var _a;\n            return $032380dbcf3f4e13$var$__generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        this.log(\"Closing\");\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            4,\n                            ,\n                            5\n                        ]);\n                        this.clearKeepAliveInterval();\n                        this._lastMsgRecvTime = 0;\n                        if (this._ws) {\n                            this._ws._closedManually = true;\n                            this._ws.close();\n                        }\n                        shouldRetry = ((_a = this._ws) === null || _a === void 0 ? void 0 : _a._initialConnectionOk) && this._shouldRetryFn && this._shouldRetryFn();\n                        this._ws = null;\n                        if (!shouldRetry) return [\n                            3 /*break*/ ,\n                            3\n                        ];\n                        this.log(\"Emitting reconnect\", $032380dbcf3f4e13$var$LOG_LEVEL.DEBUG);\n                        this.emit(\"reconnecting\");\n                        return [\n                            4 /*yield*/ ,\n                            this.retryFailedConnection()\n                        ];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        return [\n                            3 /*break*/ ,\n                            5\n                        ];\n                    case 4:\n                        error_1 = _b.sent();\n                        this.log(\"Error while closing and retrying: \".concat(error_1), $032380dbcf3f4e13$var$LOG_LEVEL.ERROR);\n                        return [\n                            3 /*break*/ ,\n                            5\n                        ];\n                    case 5:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    ReconnectingWebSocket.prototype.retryFailedConnection = function() {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            var timeout;\n            var _this = this;\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                if (this._reconnectAttempts < this._allowedReconnectAttempts) {\n                    if (this._reconnectTimeoutID) {\n                        this.log(\"Retry already scheduled\");\n                        return [\n                            2 /*return*/ \n                        ];\n                    }\n                    this.log(\"Retrying failed connection\");\n                    timeout = // The timeout logic is taken from\n                    // https://github.com/joewalnes/reconnecting-websocket\n                    this._reconnectInterval * Math.pow(this._reconnectDecay, this._reconnectAttempts);\n                    timeout = timeout > this._maxReconnectInterval ? this._maxReconnectInterval : timeout;\n                    this.log(\"Reconnecting in \".concat(timeout / 1000, \" seconds\"));\n                    this._reconnectAttempts += 1;\n                    this._reconnectTimeoutID = setTimeout(function() {\n                        return _this.connect();\n                    }, timeout);\n                } else {\n                    this.log(\"Maximum connection retry attempts exceeded\", $032380dbcf3f4e13$var$LOG_LEVEL.ERROR);\n                    this.emit(\"reconnect-failed\");\n                }\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    ReconnectingWebSocket.prototype.log = function(msg, log_level) {\n        if (log_level === void 0) log_level = $032380dbcf3f4e13$var$LOG_LEVEL.DEBUG;\n        var args = [];\n        for(var _i = 2; _i < arguments.length; _i++)args[_i - 2] = arguments[_i];\n        switch(log_level){\n            case $032380dbcf3f4e13$var$LOG_LEVEL.DEBUG:\n                console.debug.apply(console, $032380dbcf3f4e13$var$__spreadArray([\n                    \"websocket: \".concat(msg)\n                ], args, false));\n                break;\n            case $032380dbcf3f4e13$var$LOG_LEVEL.ERROR:\n                console.error.apply(console, $032380dbcf3f4e13$var$__spreadArray([\n                    \"websocket: \".concat(msg)\n                ], args, false));\n                break;\n            case $032380dbcf3f4e13$var$LOG_LEVEL.WARN:\n                console.warn.apply(console, $032380dbcf3f4e13$var$__spreadArray([\n                    \"websocket: \".concat(msg)\n                ], args, false));\n                break;\n            case $032380dbcf3f4e13$var$LOG_LEVEL.INFO:\n            default:\n                console.log.apply(console, $032380dbcf3f4e13$var$__spreadArray([\n                    \"websocket: \".concat(msg)\n                ], args, false));\n                break;\n        }\n    };\n    ReconnectingWebSocket.prototype.send = function(data) {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                try {\n                    if (this._ws && this._ws.readyState === WebSocket.OPEN) {\n                        this._lastMsgSendTime = Date.now();\n                        this._ws.send(data);\n                    } else this.log(\"Failed to send data, web socket not open.\", $032380dbcf3f4e13$var$LOG_LEVEL.ERROR);\n                } catch (error) {\n                    this.log(\"Failed to send data. \".concat(error), $032380dbcf3f4e13$var$LOG_LEVEL.ERROR);\n                }\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    ReconnectingWebSocket.prototype.close = function() {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                try {\n                    this.log(\"Closing websocket\");\n                    this._disconnected = true;\n                    this.clearReconnectTimeout();\n                    this._closeSocket();\n                } catch (error) {\n                    this.log(\"Failed to close websocket. \".concat(error));\n                }\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\n        get: function() {\n            var _a, _b;\n            return (_b = (_a = this._ws) === null || _a === void 0 ? void 0 : _a.readyState) !== null && _b !== void 0 ? _b : WebSocket.CLOSED;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\n        get: function() {\n            return this._url;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"keepAliveTimeout\", {\n        get: function() {\n            return this._keepAliveTimeout;\n        },\n        set: function(keepAliveTimeout) {\n            if (typeof keepAliveTimeout === \"number\") {\n                this.log(\"Setting ACK freshness timeout to \".concat(keepAliveTimeout));\n                this._keepAliveTimeout = keepAliveTimeout;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"keepAliveInterval\", {\n        get: function() {\n            return this._keepAliveInterval;\n        },\n        set: function(keepAliveInterval) {\n            if (typeof keepAliveInterval === \"number\") {\n                this.log(\"Setting keep-alive interval to \".concat(keepAliveInterval));\n                this._keepAliveInterval = keepAliveInterval;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"shouldRetryFn\", {\n        set: function(cb) {\n            if (typeof cb === \"function\") this._shouldRetryFn = cb;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"connectionTimeout\", {\n        get: function() {\n            return this._connectionTimeout;\n        },\n        set: function(timeout) {\n            if (typeof timeout === \"number\") this._connectionTimeout = timeout;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"maxReconnectAttempts\", {\n        get: function() {\n            return this._allowedReconnectAttempts;\n        },\n        set: function(attempts) {\n            if (attempts > 0 && attempts < $032380dbcf3f4e13$var$MAX_RECONNECT_ATTEMPTS) {\n                this.log(\"Setting maximum connection retry attempts to \".concat(attempts));\n                this._allowedReconnectAttempts = attempts;\n            } else this._allowedReconnectAttempts = $032380dbcf3f4e13$var$DEFAULT_RECONNECT_ATTEMPTS;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"reconnectInterval\", {\n        get: function() {\n            return this._reconnectInterval;\n        },\n        set: function(interval) {\n            if (typeof interval === \"number\") this._reconnectInterval = interval < this._maxReconnectInterval ? interval : this._maxReconnectInterval;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReconnectingWebSocket.prototype._handleMessage = function(event) {\n        return $032380dbcf3f4e13$var$__awaiter(this, void 0, void 0, function() {\n            var data, _parsePromise, msg;\n            var _this = this;\n            return $032380dbcf3f4e13$var$__generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        this._lastMsgRecvTime = Date.now();\n                        data = event.data;\n                        _parsePromise = new Promise(function(resolve, reject) {\n                            if (typeof data === \"string\") // Handle text message\n                            resolve(data);\n                            else if (data instanceof ArrayBuffer) {\n                                // Handle binary message\n                                var arrayBuffer = data;\n                                // Parse the ArrayBuffer as needed\n                                // Example: Convert ArrayBuffer to Uint8Array\n                                resolve(new Uint8Array(arrayBuffer));\n                            // Process the Uint8Array as needed\n                            } else if (data instanceof Blob) {\n                                if (!_this._parseBlobToJson) {\n                                    resolve(data);\n                                    return;\n                                }\n                                // Handle Blob message\n                                var blob = data;\n                                // Convert Blob to ArrayBuffer\n                                var reader_1 = new FileReader();\n                                reader_1.onload = function() {\n                                    var text = reader_1.result;\n                                    try {\n                                        var json = JSON.parse(text);\n                                        resolve(json);\n                                    } catch (e) {\n                                        console.error(\"Failed to parse JSON from Blob:\", e);\n                                    }\n                                };\n                                reader_1.readAsText(blob);\n                            }\n                        });\n                        return [\n                            4 /*yield*/ ,\n                            _parsePromise\n                        ];\n                    case 1:\n                        msg = _a.sent();\n                        this.emit(\"message\", msg);\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    return ReconnectingWebSocket;\n}((0, events__WEBPACK_IMPORTED_MODULE_2__.EventEmitter));\n[\n    \"binaryType\",\n    \"bufferedAmount\",\n    \"extensions\",\n    \"protocol\",\n    \"readyState\",\n    \"url\",\n    \"keepAliveTimeout\",\n    \"keepAliveInterval\",\n    \"shouldRetryFn\",\n    \"connectionTimeout\",\n    \"maxReconnectAttempts\",\n    \"reconnectInterval\"\n].forEach(function(property) {\n    Object.defineProperty($032380dbcf3f4e13$export$4f3d0ffd941ebefb.prototype, property, {\n        enumerable: true\n    });\n});\n[\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n].forEach(function(property) {\n    Object.defineProperty($032380dbcf3f4e13$export$4f3d0ffd941ebefb.prototype, property, {\n        enumerable: true,\n        value: $032380dbcf3f4e13$var$readyStates.indexOf(property)\n    });\n});\n[\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n].forEach(function(property) {\n    Object.defineProperty($032380dbcf3f4e13$export$4f3d0ffd941ebefb, property, {\n        enumerable: true,\n        value: $032380dbcf3f4e13$var$readyStates.indexOf(property)\n    });\n});\n\n\n\n\n// @generated message type with reflection information, may provide speed optimized methods\nclass $5177d56bd0c995e0$var$TextFrame$Type extends (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__.MessageType) {\n    constructor(){\n        super(\"pipecat.TextFrame\", [\n            {\n                no: 1,\n                name: \"id\",\n                kind: \"scalar\",\n                T: 4 /*ScalarType.UINT64*/ ,\n                L: 0 /*LongType.BIGINT*/ \n            },\n            {\n                no: 2,\n                name: \"name\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            },\n            {\n                no: 3,\n                name: \"text\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            }\n        ]);\n    }\n    create(value) {\n        const message = globalThis.Object.create(this.messagePrototype);\n        message.id = 0n;\n        message.name = \"\";\n        message.text = \"\";\n        if (value !== undefined) (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__.reflectionMergePartial)(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader, length, options, target) {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while(reader.pos < end){\n            let [fieldNo, wireType] = reader.tag();\n            switch(fieldNo){\n                case /* uint64 id */ 1:\n                    message.id = reader.uint64().toBigInt();\n                    break;\n                case /* string name */ 2:\n                    message.name = reader.string();\n                    break;\n                case /* string text */ 3:\n                    message.text = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\") throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false) (u === true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message, writer, options) {\n        /* uint64 id = 1; */ if (message.id !== 0n) writer.tag(1, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint64(message.id);\n        /* string name = 2; */ if (message.name !== \"\") writer.tag(2, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.name);\n        /* string text = 3; */ if (message.text !== \"\") writer.tag(3, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.text);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\nconst $5177d56bd0c995e0$export$78410ada03f6931b = new $5177d56bd0c995e0$var$TextFrame$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass $5177d56bd0c995e0$var$AudioRawFrame$Type extends (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__.MessageType) {\n    constructor(){\n        super(\"pipecat.AudioRawFrame\", [\n            {\n                no: 1,\n                name: \"id\",\n                kind: \"scalar\",\n                T: 4 /*ScalarType.UINT64*/ ,\n                L: 0 /*LongType.BIGINT*/ \n            },\n            {\n                no: 2,\n                name: \"name\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            },\n            {\n                no: 3,\n                name: \"audio\",\n                kind: \"scalar\",\n                T: 12 /*ScalarType.BYTES*/ \n            },\n            {\n                no: 4,\n                name: \"sample_rate\",\n                kind: \"scalar\",\n                T: 13 /*ScalarType.UINT32*/ \n            },\n            {\n                no: 5,\n                name: \"num_channels\",\n                kind: \"scalar\",\n                T: 13 /*ScalarType.UINT32*/ \n            },\n            {\n                no: 6,\n                name: \"pts\",\n                kind: \"scalar\",\n                opt: true,\n                T: 4 /*ScalarType.UINT64*/ ,\n                L: 0 /*LongType.BIGINT*/ \n            }\n        ]);\n    }\n    create(value) {\n        const message = globalThis.Object.create(this.messagePrototype);\n        message.id = 0n;\n        message.name = \"\";\n        message.audio = new Uint8Array(0);\n        message.sampleRate = 0;\n        message.numChannels = 0;\n        if (value !== undefined) (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__.reflectionMergePartial)(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader, length, options, target) {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while(reader.pos < end){\n            let [fieldNo, wireType] = reader.tag();\n            switch(fieldNo){\n                case /* uint64 id */ 1:\n                    message.id = reader.uint64().toBigInt();\n                    break;\n                case /* string name */ 2:\n                    message.name = reader.string();\n                    break;\n                case /* bytes audio */ 3:\n                    message.audio = reader.bytes();\n                    break;\n                case /* uint32 sample_rate */ 4:\n                    message.sampleRate = reader.uint32();\n                    break;\n                case /* uint32 num_channels */ 5:\n                    message.numChannels = reader.uint32();\n                    break;\n                case /* optional uint64 pts */ 6:\n                    message.pts = reader.uint64().toBigInt();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\") throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false) (u === true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message, writer, options) {\n        /* uint64 id = 1; */ if (message.id !== 0n) writer.tag(1, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint64(message.id);\n        /* string name = 2; */ if (message.name !== \"\") writer.tag(2, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.name);\n        /* bytes audio = 3; */ if (message.audio.length) writer.tag(3, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).bytes(message.audio);\n        /* uint32 sample_rate = 4; */ if (message.sampleRate !== 0) writer.tag(4, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint32(message.sampleRate);\n        /* uint32 num_channels = 5; */ if (message.numChannels !== 0) writer.tag(5, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint32(message.numChannels);\n        /* optional uint64 pts = 6; */ if (message.pts !== undefined) writer.tag(6, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint64(message.pts);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\nconst $5177d56bd0c995e0$export$51d8721de3cbff8f = new $5177d56bd0c995e0$var$AudioRawFrame$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass $5177d56bd0c995e0$var$TranscriptionFrame$Type extends (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__.MessageType) {\n    constructor(){\n        super(\"pipecat.TranscriptionFrame\", [\n            {\n                no: 1,\n                name: \"id\",\n                kind: \"scalar\",\n                T: 4 /*ScalarType.UINT64*/ ,\n                L: 0 /*LongType.BIGINT*/ \n            },\n            {\n                no: 2,\n                name: \"name\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            },\n            {\n                no: 3,\n                name: \"text\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            },\n            {\n                no: 4,\n                name: \"user_id\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            },\n            {\n                no: 5,\n                name: \"timestamp\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            }\n        ]);\n    }\n    create(value) {\n        const message = globalThis.Object.create(this.messagePrototype);\n        message.id = 0n;\n        message.name = \"\";\n        message.text = \"\";\n        message.userId = \"\";\n        message.timestamp = \"\";\n        if (value !== undefined) (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__.reflectionMergePartial)(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader, length, options, target) {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while(reader.pos < end){\n            let [fieldNo, wireType] = reader.tag();\n            switch(fieldNo){\n                case /* uint64 id */ 1:\n                    message.id = reader.uint64().toBigInt();\n                    break;\n                case /* string name */ 2:\n                    message.name = reader.string();\n                    break;\n                case /* string text */ 3:\n                    message.text = reader.string();\n                    break;\n                case /* string user_id */ 4:\n                    message.userId = reader.string();\n                    break;\n                case /* string timestamp */ 5:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\") throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false) (u === true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message, writer, options) {\n        /* uint64 id = 1; */ if (message.id !== 0n) writer.tag(1, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).Varint).uint64(message.id);\n        /* string name = 2; */ if (message.name !== \"\") writer.tag(2, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.name);\n        /* string text = 3; */ if (message.text !== \"\") writer.tag(3, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.text);\n        /* string user_id = 4; */ if (message.userId !== \"\") writer.tag(4, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.userId);\n        /* string timestamp = 5; */ if (message.timestamp !== \"\") writer.tag(5, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.timestamp);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\nconst $5177d56bd0c995e0$export$10b388c15a5cdc8a = new $5177d56bd0c995e0$var$TranscriptionFrame$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass $5177d56bd0c995e0$var$MessageFrame$Type extends (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__.MessageType) {\n    constructor(){\n        super(\"pipecat.MessageFrame\", [\n            {\n                no: 1,\n                name: \"data\",\n                kind: \"scalar\",\n                T: 9 /*ScalarType.STRING*/ \n            }\n        ]);\n    }\n    create(value) {\n        const message = globalThis.Object.create(this.messagePrototype);\n        message.data = \"\";\n        if (value !== undefined) (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__.reflectionMergePartial)(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader, length, options, target) {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while(reader.pos < end){\n            let [fieldNo, wireType] = reader.tag();\n            switch(fieldNo){\n                case /* string data */ 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\") throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false) (u === true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message, writer, options) {\n        /* string data = 1; */ if (message.data !== \"\") writer.tag(1, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).string(message.data);\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\nconst $5177d56bd0c995e0$export$bc3f45a6d434f14a = new $5177d56bd0c995e0$var$MessageFrame$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass $5177d56bd0c995e0$var$Frame$Type extends (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_4__.MessageType) {\n    constructor(){\n        super(\"pipecat.Frame\", [\n            {\n                no: 1,\n                name: \"text\",\n                kind: \"message\",\n                oneof: \"frame\",\n                T: ()=>$5177d56bd0c995e0$export$78410ada03f6931b\n            },\n            {\n                no: 2,\n                name: \"audio\",\n                kind: \"message\",\n                oneof: \"frame\",\n                T: ()=>$5177d56bd0c995e0$export$51d8721de3cbff8f\n            },\n            {\n                no: 3,\n                name: \"transcription\",\n                kind: \"message\",\n                oneof: \"frame\",\n                T: ()=>$5177d56bd0c995e0$export$10b388c15a5cdc8a\n            },\n            {\n                no: 4,\n                name: \"message\",\n                kind: \"message\",\n                oneof: \"frame\",\n                T: ()=>$5177d56bd0c995e0$export$bc3f45a6d434f14a\n            }\n        ]);\n    }\n    create(value) {\n        const message = globalThis.Object.create(this.messagePrototype);\n        message.frame = {\n            oneofKind: undefined\n        };\n        if (value !== undefined) (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_5__.reflectionMergePartial)(this, message, value);\n        return message;\n    }\n    internalBinaryRead(reader, length, options, target) {\n        let message = target ?? this.create(), end = reader.pos + length;\n        while(reader.pos < end){\n            let [fieldNo, wireType] = reader.tag();\n            switch(fieldNo){\n                case /* pipecat.TextFrame text */ 1:\n                    message.frame = {\n                        oneofKind: \"text\",\n                        text: $5177d56bd0c995e0$export$78410ada03f6931b.internalBinaryRead(reader, reader.uint32(), options, message.frame.text)\n                    };\n                    break;\n                case /* pipecat.AudioRawFrame audio */ 2:\n                    message.frame = {\n                        oneofKind: \"audio\",\n                        audio: $5177d56bd0c995e0$export$51d8721de3cbff8f.internalBinaryRead(reader, reader.uint32(), options, message.frame.audio)\n                    };\n                    break;\n                case /* pipecat.TranscriptionFrame transcription */ 3:\n                    message.frame = {\n                        oneofKind: \"transcription\",\n                        transcription: $5177d56bd0c995e0$export$10b388c15a5cdc8a.internalBinaryRead(reader, reader.uint32(), options, message.frame.transcription)\n                    };\n                    break;\n                case /* pipecat.MessageFrame message */ 4:\n                    message.frame = {\n                        oneofKind: \"message\",\n                        message: $5177d56bd0c995e0$export$bc3f45a6d434f14a.internalBinaryRead(reader, reader.uint32(), options, message.frame.message)\n                    };\n                    break;\n                default:\n                    let u = options.readUnknownField;\n                    if (u === \"throw\") throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);\n                    let d = reader.skip(wireType);\n                    if (u !== false) (u === true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onRead : u)(this.typeName, message, fieldNo, wireType, d);\n            }\n        }\n        return message;\n    }\n    internalBinaryWrite(message, writer, options) {\n        /* pipecat.TextFrame text = 1; */ if (message.frame.oneofKind === \"text\") $5177d56bd0c995e0$export$78410ada03f6931b.internalBinaryWrite(message.frame.text, writer.tag(1, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).fork(), options).join();\n        /* pipecat.AudioRawFrame audio = 2; */ if (message.frame.oneofKind === \"audio\") $5177d56bd0c995e0$export$51d8721de3cbff8f.internalBinaryWrite(message.frame.audio, writer.tag(2, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).fork(), options).join();\n        /* pipecat.TranscriptionFrame transcription = 3; */ if (message.frame.oneofKind === \"transcription\") $5177d56bd0c995e0$export$10b388c15a5cdc8a.internalBinaryWrite(message.frame.transcription, writer.tag(3, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).fork(), options).join();\n        /* pipecat.MessageFrame message = 4; */ if (message.frame.oneofKind === \"message\") $5177d56bd0c995e0$export$bc3f45a6d434f14a.internalBinaryWrite(message.frame.message, writer.tag(4, (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.WireType).LengthDelimited).fork(), options).join();\n        let u = options.writeUnknownFields;\n        if (u !== false) (u == true ? (0, _protobuf_ts_runtime__WEBPACK_IMPORTED_MODULE_6__.UnknownFieldHandler).onWrite : u)(this.typeName, message, writer);\n        return writer;\n    }\n}\nconst $5177d56bd0c995e0$export$b89a827e9254211a = new $5177d56bd0c995e0$var$Frame$Type();\n\n\nclass $a6c080dc51c9687f$export$4b2026f8e11b148a {\n    serialize(data) {}\n    serializeAudio(data, sampleRate, numChannels) {\n        const pcmByteArray = new Uint8Array(data);\n        const frame = (0, $5177d56bd0c995e0$export$b89a827e9254211a).create({\n            frame: {\n                oneofKind: \"audio\",\n                audio: {\n                    id: 0n,\n                    name: \"audio\",\n                    audio: pcmByteArray,\n                    sampleRate: sampleRate,\n                    numChannels: numChannels\n                }\n            }\n        });\n        return new Uint8Array((0, $5177d56bd0c995e0$export$b89a827e9254211a).toBinary(frame));\n    }\n    serializeMessage(msg) {\n        const frame = (0, $5177d56bd0c995e0$export$b89a827e9254211a).create({\n            frame: {\n                oneofKind: \"message\",\n                message: {\n                    data: JSON.stringify(msg)\n                }\n            }\n        });\n        return new Uint8Array((0, $5177d56bd0c995e0$export$b89a827e9254211a).toBinary(frame));\n    }\n    async deserialize(data) {\n        if (!(data instanceof Blob)) throw new Error(\"Unknown data type\");\n        const arrayBuffer = await data.arrayBuffer();\n        const parsed = (0, $5177d56bd0c995e0$export$b89a827e9254211a).fromBinary(new Uint8Array(arrayBuffer)).frame;\n        if (parsed.oneofKind === \"audio\") {\n            const audioVector = Array.from(parsed.audio.audio);\n            const uint8Array = new Uint8Array(audioVector);\n            const int16Array = new Int16Array(uint8Array.buffer);\n            return {\n                type: \"audio\",\n                audio: int16Array\n            };\n        } else if (parsed.oneofKind === \"message\") {\n            const msg = JSON.parse(parsed.message.data);\n            return {\n                type: \"message\",\n                message: msg\n            };\n        } else throw new Error(\"Unknown frame kind\");\n    }\n}\n\n\nclass $7f42eda74f1b1632$export$de21836fc42c6f9c extends (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.Transport) {\n    constructor({ serializer: serializer, recorderSampleRate: recorderSampleRate, playerSampleRate: playerSampleRate } = {\n        serializer: new (0, $a6c080dc51c9687f$export$4b2026f8e11b148a)(),\n        recorderSampleRate: $7f42eda74f1b1632$export$de21836fc42c6f9c.RECORDER_SAMPLE_RATE,\n        playerSampleRate: $7f42eda74f1b1632$export$de21836fc42c6f9c.PLAYER_SAMPLE_RATE\n    }){\n        super();\n        this.audioQueue = [];\n        this._mediaManager = new (0, $22ece045290c996a$export$c95c65abc5f47125)(true, true, undefined, undefined, 512, recorderSampleRate, playerSampleRate);\n        this._mediaManager.setUserAudioCallback(this.handleUserAudioStream.bind(this));\n        this._ws = null;\n        this._serializer = serializer;\n    }\n    initialize(options, messageHandler) {\n        this._options = options;\n        this._callbacks = options.callbacks ?? {};\n        this._onMessage = messageHandler;\n        this._mediaManager.setRTVIOptions(options);\n        this.state = \"disconnected\";\n    }\n    async initDevices() {\n        this.state = \"initializing\";\n        await this._mediaManager.initialize();\n        this.state = \"initialized\";\n    }\n    async connect(authBundle, abortController) {\n        this.state = \"connecting\";\n        try {\n            this._ws = this.initializeWebsocket(authBundle);\n            await this._ws.connect();\n            await this._mediaManager.connect();\n            this.state = \"connected\";\n            this._callbacks.onConnected?.();\n        } catch (error) {\n            const msg = `Failed to connect to websocket: ${error}`;\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(msg);\n            this.state = \"error\";\n            throw new (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.TransportStartError)(msg);\n        }\n    }\n    async disconnect() {\n        this.state = \"disconnecting\";\n        await this._mediaManager.disconnect();\n        await this._ws?.close();\n        this.state = \"disconnected\";\n        this._callbacks.onDisconnected?.();\n    }\n    getAllMics() {\n        return this._mediaManager.getAllMics();\n    }\n    getAllCams() {\n        return this._mediaManager.getAllCams();\n    }\n    getAllSpeakers() {\n        return this._mediaManager.getAllSpeakers();\n    }\n    async updateMic(micId) {\n        return this._mediaManager.updateMic(micId);\n    }\n    updateCam(camId) {\n        return this._mediaManager.updateCam(camId);\n    }\n    updateSpeaker(speakerId) {\n        return this._mediaManager.updateSpeaker(speakerId);\n    }\n    get selectedMic() {\n        return this._mediaManager.selectedMic;\n    }\n    get selectedSpeaker() {\n        return this._mediaManager.selectedSpeaker;\n    }\n    enableMic(enable) {\n        this._mediaManager.enableMic(enable);\n    }\n    get isMicEnabled() {\n        return this._mediaManager.isMicEnabled;\n    }\n    get state() {\n        return this._state;\n    }\n    set state(state) {\n        if (this._state === state) return;\n        this._state = state;\n        this._callbacks.onTransportStateChanged?.(state);\n    }\n    get expiry() {\n        return this._expiry;\n    }\n    tracks() {\n        return this._mediaManager.tracks();\n    }\n    initializeWebsocket(authBundle) {\n        console.log(\"Initializing websocket\", authBundle);\n        const ws = new (0, $032380dbcf3f4e13$export$4f3d0ffd941ebefb)(`${authBundle.ws_url}`, undefined, {\n            parseBlobToJson: false\n        });\n        // disabling the keep alive, there is no API for it inside Pipecat\n        ws.keepAliveInterval = 0;\n        ws.on(\"open\", ()=>{\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).debug(\"Websocket connection opened\");\n        });\n        ws.on(\"message\", async (data)=>{\n            try {\n                const parsed = await this._serializer.deserialize(data);\n                if (parsed.type === \"audio\") this._mediaManager.bufferBotAudio(parsed.audio);\n                else if (parsed.type === \"message\") {\n                    if (parsed.message.label === \"rtvi-ai\") this._onMessage(parsed.message);\n                }\n            } catch (e) {\n                (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"Failed to deserialize incoming message\", e);\n            }\n        });\n        ws.on(\"error\", (error)=>{\n            this.connectionError(`websocket error: ${error}`);\n        });\n        ws.on(\"connection-timeout\", ()=>{\n            this.connectionError(\"websocket connection timed out\");\n        });\n        ws.on(\"close\", (code)=>{\n            this.connectionError(`websocket connection closed. Code: ${code}`);\n        });\n        ws.on(\"reconnect-failed\", ()=>{\n            this.connectionError(`websocket reconnect failed`);\n        });\n        return ws;\n    }\n    sendReadyMessage() {\n        this.state = \"ready\";\n        this.sendMessage((0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.RTVIMessage).clientReady());\n    }\n    handleUserAudioStream(data) {\n        if (this.state === \"ready\") try {\n            this.flushAudioQueue();\n            this._sendAudioInput(data);\n        } catch (error) {\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"Error sending audio stream to websocket:\", error);\n            this.state = \"error\";\n        }\n        else this.audioQueue.push(data);\n    }\n    flushAudioQueue() {\n        if (this.audioQueue.length <= 0) return;\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).info(\"Will flush audio queue\", this.audioQueue.length);\n        while(this.audioQueue.length > 0){\n            const queuedData = this.audioQueue.shift();\n            if (queuedData) this._sendAudioInput(queuedData);\n        }\n    }\n    sendRawMessage(message) {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).debug(\"Received raw message to send to Web Socket\", message);\n        const encoded = this._serializer.serialize(message);\n        this._sendMsg(encoded);\n    }\n    sendMessage(message) {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).debug(\"Received message to send to Web Socket\", message);\n        const encoded = this._serializer.serializeMessage(message);\n        this._sendMsg(encoded);\n    }\n    async _sendAudioInput(data) {\n        try {\n            const encoded = this._serializer.serializeAudio(data, $7f42eda74f1b1632$export$de21836fc42c6f9c.RECORDER_SAMPLE_RATE, 1);\n            await this._sendMsg(encoded);\n        } catch (e) {\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"Error sending audio frame\", e);\n        }\n    }\n    async _sendMsg(msg) {\n        if (!this._ws) {\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"sendMsg called but WS is null\");\n            return;\n        }\n        if (this._ws.readyState !== WebSocket.OPEN) {\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"attempt to send to closed socket\");\n            return;\n        }\n        if (!msg) return;\n        try {\n            await this._ws.send(msg);\n        } catch (e) {\n            (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"sendMsg error\", e);\n        }\n    }\n    connectionError(errorMsg) {\n        console.error(errorMsg);\n        this.state = \"error\";\n        this.disconnect();\n    }\n    // Not implemented\n    enableScreenShare(enable) {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"startScreenShare not implemented for WebSocketTransport\");\n        throw new Error(\"Not implemented\");\n    }\n    get isSharingScreen() {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"isSharingScreen not implemented for WebSocketTransport\");\n        return false;\n    }\n    enableCam(enable) {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"enableCam not implemented for WebSocketTransport\");\n        throw new Error(\"Not implemented\");\n    }\n    get isCamEnabled() {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"isCamEnabled not implemented for WebSocketTransport\");\n        return false;\n    }\n    get selectedCam() {\n        (0, _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.logger).error(\"selectedCam not implemented for WebSocketTransport\");\n        throw new Error(\"Not implemented\");\n    }\n}\n$7f42eda74f1b1632$export$de21836fc42c6f9c.RECORDER_SAMPLE_RATE = 16000;\n$7f42eda74f1b1632$export$de21836fc42c6f9c.PLAYER_SAMPLE_RATE = 24000;\n\n\n\n\nclass $5b926fa33e35e45c$export$44a8a077420336af {\n    serialize(data) {\n        return JSON.stringify(data);\n    }\n    serializeAudio(data, sampleRate, numChannels) {\n        const pcmSamples = new Int16Array(data);\n        const muLawSamples = (0, x_law__WEBPACK_IMPORTED_MODULE_3__.mulaw).encode(pcmSamples);\n        const base64Payload = this.arrayToBase64(muLawSamples);\n        const twilioMessage = {\n            event: \"media\",\n            media: {\n                payload: base64Payload\n            }\n        };\n        return JSON.stringify(twilioMessage);\n    }\n    serializeMessage(msg) {\n        // Twilio does not support RTVI messages, so just ignore them\n        return null;\n    }\n    arrayToBase64(bytes) {\n        let binary = \"\";\n        for(let i = 0; i < bytes.byteLength; i++)binary += String.fromCharCode(bytes[i]);\n        return btoa(binary);\n    }\n    base64ToUint8Array(base64) {\n        const binaryString = atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++)bytes[i] = binaryString.charCodeAt(i);\n        return bytes;\n    }\n    async deserialize(data) {\n        const jsonMessage = JSON.parse(data); // Assuming 'data' is a JSON string\n        if (jsonMessage.event === \"clear\") return {\n            type: \"raw\",\n            message: jsonMessage\n        };\n        else if (jsonMessage.event === \"media\") {\n            // Deserialize 'media' event\n            const payload = jsonMessage.media.payload;\n            const serialized_data = this.base64ToUint8Array(payload);\n            //const decoded_audio = this.ulawToPcm(serialized_data);\n            const decoded_audio = (0, x_law__WEBPACK_IMPORTED_MODULE_3__.mulaw).decode(serialized_data);\n            return {\n                type: \"audio\",\n                audio: decoded_audio\n            };\n        } else // Deserialize other message types (assuming 'frame' has 'message' field)\n        return {\n            type: \"message\",\n            message: jsonMessage.message\n        };\n    }\n}\n\n\n\n\n\n//# sourceMappingURL=index.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@pipecat-ai/websocket-transport/dist/index.module.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js":
/*!******************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/assert.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: function() { return /* binding */ assert; },\n/* harmony export */   assertFloat32: function() { return /* binding */ assertFloat32; },\n/* harmony export */   assertInt32: function() { return /* binding */ assertInt32; },\n/* harmony export */   assertNever: function() { return /* binding */ assertNever; },\n/* harmony export */   assertUInt32: function() { return /* binding */ assertUInt32; }\n/* harmony export */ });\n/**\n * assert that condition is true or throw error (with message)\n */\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nfunction assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nfunction assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nfunction assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nfunction assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L2Fzc2VydC5qcz85OTgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogYXNzZXJ0IHRoYXQgY29uZGl0aW9uIGlzIHRydWUgb3IgdGhyb3cgZXJyb3IgKHdpdGggbWVzc2FnZSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1zZykge1xuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgIH1cbn1cbi8qKlxuICogYXNzZXJ0IHRoYXQgdmFsdWUgY2Fubm90IGV4aXN0ID0gdHlwZSBgbmV2ZXJgLiB0aHJvdyBydW50aW1lIGVycm9yIGlmIGl0IGRvZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROZXZlcih2YWx1ZSwgbXNnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKG1zZyAhPT0gbnVsbCAmJiBtc2cgIT09IHZvaWQgMCA/IG1zZyA6ICdVbmV4cGVjdGVkIG9iamVjdDogJyArIHZhbHVlKTtcbn1cbmNvbnN0IEZMT0FUMzJfTUFYID0gMy40MDI4MjM0NjYzODUyODg2ZSszOCwgRkxPQVQzMl9NSU4gPSAtMy40MDI4MjM0NjYzODUyODg2ZSszOCwgVUlOVDMyX01BWCA9IDB4RkZGRkZGRkYsIElOVDMyX01BWCA9IDBYN0ZGRkZGRkYsIElOVDMyX01JTiA9IC0wWDgwMDAwMDAwO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaW50IDMyOiAnICsgdHlwZW9mIGFyZyk7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykgfHwgYXJnID4gSU5UMzJfTUFYIHx8IGFyZyA8IElOVDMyX01JTilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGludCAzMjogJyArIGFyZyk7XG59XG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0VUludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgdWludCAzMjogJyArIHR5cGVvZiBhcmcpO1xuICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihhcmcpIHx8IGFyZyA+IFVJTlQzMl9NQVggfHwgYXJnIDwgMClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHVpbnQgMzI6ICcgKyBhcmcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEZsb2F0MzIoYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBmbG9hdCAzMjogJyArIHR5cGVvZiBhcmcpO1xuICAgIGlmICghTnVtYmVyLmlzRmluaXRlKGFyZykpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoYXJnID4gRkxPQVQzMl9NQVggfHwgYXJnIDwgRkxPQVQzMl9NSU4pXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBmbG9hdCAzMjogJyArIGFyZyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/base64.js":
/*!******************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/base64.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64decode: function() { return /* binding */ base64decode; },\n/* harmony export */   base64encode: function() { return /* binding */ base64encode; }\n/* harmony export */ });\n// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nfunction base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nfunction base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L2Jhc2U2NC5qcz85NmU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxvb2t1cCB0YWJsZSBmcm9tIGJhc2U2NCBjaGFyYWN0ZXIgdG8gYnl0ZVxubGV0IGVuY1RhYmxlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nLnNwbGl0KCcnKTtcbi8vIGxvb2t1cCB0YWJsZSBmcm9tIGJhc2U2NCBjaGFyYWN0ZXIgKmNvZGUqIHRvIGJ5dGUgYmVjYXVzZSBsb29rdXAgYnkgbnVtYmVyIGlzIGZhc3RcbmxldCBkZWNUYWJsZSA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNUYWJsZS5sZW5ndGg7IGkrKylcbiAgICBkZWNUYWJsZVtlbmNUYWJsZVtpXS5jaGFyQ29kZUF0KDApXSA9IGk7XG4vLyBzdXBwb3J0IGJhc2U2NHVybCB2YXJpYW50c1xuZGVjVGFibGVbXCItXCIuY2hhckNvZGVBdCgwKV0gPSBlbmNUYWJsZS5pbmRleE9mKFwiK1wiKTtcbmRlY1RhYmxlW1wiX1wiLmNoYXJDb2RlQXQoMCldID0gZW5jVGFibGUuaW5kZXhPZihcIi9cIik7XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIHRvIGEgYnl0ZSBhcnJheS5cbiAqXG4gKiAtIGlnbm9yZXMgd2hpdGUtc3BhY2UsIGluY2x1ZGluZyBsaW5lIGJyZWFrcyBhbmQgdGFic1xuICogLSBhbGxvd3MgaW5uZXIgcGFkZGluZyAoY2FuIGRlY29kZSBjb25jYXRlbmF0ZWQgYmFzZTY0IHN0cmluZ3MpXG4gKiAtIGRvZXMgbm90IHJlcXVpcmUgcGFkZGluZ1xuICogLSB1bmRlcnN0YW5kcyBiYXNlNjR1cmwgZW5jb2Rpbmc6XG4gKiAgIFwiLVwiIGluc3RlYWQgb2YgXCIrXCIsXG4gKiAgIFwiX1wiIGluc3RlYWQgb2YgXCIvXCIsXG4gKiAgIG5vIHBhZGRpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NGRlY29kZShiYXNlNjRTdHIpIHtcbiAgICAvLyBlc3RpbWF0ZSBieXRlIHNpemUsIG5vdCBhY2NvdW50aW5nIGZvciBpbm5lciBwYWRkaW5nIGFuZCB3aGl0ZXNwYWNlXG4gICAgbGV0IGVzID0gYmFzZTY0U3RyLmxlbmd0aCAqIDMgLyA0O1xuICAgIC8vIGlmIChlcyAlIDMgIT09IDApXG4gICAgLy8gdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGJhc2U2NCBzdHJpbmcnKTtcbiAgICBpZiAoYmFzZTY0U3RyW2Jhc2U2NFN0ci5sZW5ndGggLSAyXSA9PSAnPScpXG4gICAgICAgIGVzIC09IDI7XG4gICAgZWxzZSBpZiAoYmFzZTY0U3RyW2Jhc2U2NFN0ci5sZW5ndGggLSAxXSA9PSAnPScpXG4gICAgICAgIGVzIC09IDE7XG4gICAgbGV0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoZXMpLCBieXRlUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYnl0ZSBhcnJheVxuICAgIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgYiwgLy8gY3VycmVudCBieXRlXG4gICAgcCA9IDAgLy8gcHJldmlvdXMgYnl0ZVxuICAgIDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhc2U2NFN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBiID0gZGVjVGFibGVbYmFzZTY0U3RyLmNoYXJDb2RlQXQoaSldO1xuICAgICAgICBpZiAoYiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBub2luc3BlY3Rpb24gRmFsbFRocm91Z2hJblN3aXRjaFN0YXRlbWVudEpTXG4gICAgICAgICAgICBzd2l0Y2ggKGJhc2U2NFN0cltpXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJz0nOlxuICAgICAgICAgICAgICAgICAgICBncm91cFBvcyA9IDA7IC8vIHJlc2V0IHN0YXRlIHdoZW4gcGFkZGluZyBmb3VuZFxuICAgICAgICAgICAgICAgIGNhc2UgJ1xcbic6XG4gICAgICAgICAgICAgICAgY2FzZSAnXFxyJzpcbiAgICAgICAgICAgICAgICBjYXNlICdcXHQnOlxuICAgICAgICAgICAgICAgIGNhc2UgJyAnOlxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsgLy8gc2tpcCB3aGl0ZS1zcGFjZSwgYW5kIHBhZGRpbmdcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgaW52YWxpZCBiYXNlNjQgc3RyaW5nLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN3aXRjaCAoZ3JvdXBQb3MpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBwID0gYjtcbiAgICAgICAgICAgICAgICBncm91cFBvcyA9IDE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgYnl0ZXNbYnl0ZVBvcysrXSA9IHAgPDwgMiB8IChiICYgNDgpID4+IDQ7XG4gICAgICAgICAgICAgICAgcCA9IGI7XG4gICAgICAgICAgICAgICAgZ3JvdXBQb3MgPSAyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIGJ5dGVzW2J5dGVQb3MrK10gPSAocCAmIDE1KSA8PCA0IHwgKGIgJiA2MCkgPj4gMjtcbiAgICAgICAgICAgICAgICBwID0gYjtcbiAgICAgICAgICAgICAgICBncm91cFBvcyA9IDM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgYnl0ZXNbYnl0ZVBvcysrXSA9IChwICYgMykgPDwgNiB8IGI7XG4gICAgICAgICAgICAgICAgZ3JvdXBQb3MgPSAwO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChncm91cFBvcyA9PSAxKVxuICAgICAgICB0aHJvdyBFcnJvcihgaW52YWxpZCBiYXNlNjQgc3RyaW5nLmApO1xuICAgIHJldHVybiBieXRlcy5zdWJhcnJheSgwLCBieXRlUG9zKTtcbn1cbi8qKlxuICogRW5jb2RlcyBhIGJ5dGUgYXJyYXkgdG8gYSBiYXNlNjQgc3RyaW5nLlxuICogQWRkcyBwYWRkaW5nIGF0IHRoZSBlbmQuXG4gKiBEb2VzIG5vdCBpbnNlcnQgbmV3bGluZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiYXNlNjRlbmNvZGUoYnl0ZXMpIHtcbiAgICBsZXQgYmFzZTY0ID0gJycsIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgYiwgLy8gY3VycmVudCBieXRlXG4gICAgcCA9IDA7IC8vIGNhcnJ5IG92ZXIgZnJvbSBwcmV2aW91cyBieXRlXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBiID0gYnl0ZXNbaV07XG4gICAgICAgIHN3aXRjaCAoZ3JvdXBQb3MpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbYiA+PiAyXTtcbiAgICAgICAgICAgICAgICBwID0gKGIgJiAzKSA8PCA0O1xuICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbcCB8IGIgPj4gNF07XG4gICAgICAgICAgICAgICAgcCA9IChiICYgMTUpIDw8IDI7XG4gICAgICAgICAgICAgICAgZ3JvdXBQb3MgPSAyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIGJhc2U2NCArPSBlbmNUYWJsZVtwIHwgYiA+PiA2XTtcbiAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbYiAmIDYzXTtcbiAgICAgICAgICAgICAgICBncm91cFBvcyA9IDA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gcGFkZGluZyByZXF1aXJlZD9cbiAgICBpZiAoZ3JvdXBQb3MpIHtcbiAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW3BdO1xuICAgICAgICBiYXNlNjQgKz0gJz0nO1xuICAgICAgICBpZiAoZ3JvdXBQb3MgPT0gMSlcbiAgICAgICAgICAgIGJhc2U2NCArPSAnPSc7XG4gICAgfVxuICAgIHJldHVybiBiYXNlNjQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/base64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnknownFieldHandler: function() { return /* binding */ UnknownFieldHandler; },\n/* harmony export */   WireType: function() { return /* binding */ WireType; },\n/* harmony export */   mergeBinaryOptions: function() { return /* binding */ mergeBinaryOptions; }\n/* harmony export */ });\n/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nvar UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nfunction mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvYmluYXJ5LWZvcm1hdC1jb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZCQUE2QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscUJBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEO0FBQ25EO0FBQ0E7QUFDQTtBQUNPO0FBQ1AseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1Zi10cy9ydW50aW1lL2J1aWxkL2VzMjAxNS9iaW5hcnktZm9ybWF0LWNvbnRyYWN0LmpzPzZmMmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGhhbmRsZXIgaW1wbGVtZW50cyB0aGUgZGVmYXVsdCBiZWhhdmlvdXIgZm9yIHVua25vd24gZmllbGRzLlxuICogV2hlbiByZWFkaW5nIGRhdGEsIHVua25vd24gZmllbGRzIGFyZSBzdG9yZWQgb24gdGhlIG1lc3NhZ2UsIGluIGFcbiAqIHN5bWJvbCBwcm9wZXJ0eS5cbiAqIFdoZW4gd3JpdGluZyBkYXRhLCB0aGUgc3ltYm9sIHByb3BlcnR5IGlzIHF1ZXJpZWQgYW5kIHVua25vd24gZmllbGRzXG4gKiBhcmUgc2VyaWFsaXplZCBpbnRvIHRoZSBvdXRwdXQgYWdhaW4uXG4gKi9cbmV4cG9ydCB2YXIgVW5rbm93bkZpZWxkSGFuZGxlcjtcbihmdW5jdGlvbiAoVW5rbm93bkZpZWxkSGFuZGxlcikge1xuICAgIC8qKlxuICAgICAqIFRoZSBzeW1ib2wgdXNlZCB0byBzdG9yZSB1bmtub3duIGZpZWxkcyBmb3IgYSBtZXNzYWdlLlxuICAgICAqIFRoZSBwcm9wZXJ0eSBtdXN0IGNvbmZvcm0gdG8gYFVua25vd25GaWVsZENvbnRhaW5lcmAuXG4gICAgICovXG4gICAgVW5rbm93bkZpZWxkSGFuZGxlci5zeW1ib2wgPSBTeW1ib2wuZm9yKFwicHJvdG9idWYtdHMvdW5rbm93blwiKTtcbiAgICAvKipcbiAgICAgKiBTdG9yZSBhbiB1bmtub3duIGZpZWxkIGR1cmluZyBiaW5hcnkgcmVhZCBkaXJlY3RseSBvbiB0aGUgbWVzc2FnZS5cbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBjb21wYXRpYmxlIHdpdGggYEJpbmFyeVJlYWRPcHRpb25zLnJlYWRVbmtub3duRmllbGRgLlxuICAgICAqL1xuICAgIFVua25vd25GaWVsZEhhbmRsZXIub25SZWFkID0gKHR5cGVOYW1lLCBtZXNzYWdlLCBmaWVsZE5vLCB3aXJlVHlwZSwgZGF0YSkgPT4ge1xuICAgICAgICBsZXQgY29udGFpbmVyID0gaXMobWVzc2FnZSkgPyBtZXNzYWdlW1Vua25vd25GaWVsZEhhbmRsZXIuc3ltYm9sXSA6IG1lc3NhZ2VbVW5rbm93bkZpZWxkSGFuZGxlci5zeW1ib2xdID0gW107XG4gICAgICAgIGNvbnRhaW5lci5wdXNoKHsgbm86IGZpZWxkTm8sIHdpcmVUeXBlLCBkYXRhIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogV3JpdGUgdW5rbm93biBmaWVsZHMgc3RvcmVkIGZvciB0aGUgbWVzc2FnZSB0byB0aGUgd3JpdGVyLlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIGNvbXBhdGlibGUgd2l0aCBgQmluYXJ5V3JpdGVPcHRpb25zLndyaXRlVW5rbm93bkZpZWxkc2AuXG4gICAgICovXG4gICAgVW5rbm93bkZpZWxkSGFuZGxlci5vbldyaXRlID0gKHR5cGVOYW1lLCBtZXNzYWdlLCB3cml0ZXIpID0+IHtcbiAgICAgICAgZm9yIChsZXQgeyBubywgd2lyZVR5cGUsIGRhdGEgfSBvZiBVbmtub3duRmllbGRIYW5kbGVyLmxpc3QobWVzc2FnZSkpXG4gICAgICAgICAgICB3cml0ZXIudGFnKG5vLCB3aXJlVHlwZSkucmF3KGRhdGEpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogTGlzdCB1bmtub3duIGZpZWxkcyBzdG9yZWQgZm9yIHRoZSBtZXNzYWdlLlxuICAgICAqIE5vdGUgdGhhdCB0aGVyZSBtYXkgYmUgbXVsdGlwbGVzIGZpZWxkcyB3aXRoIHRoZSBzYW1lIG51bWJlci5cbiAgICAgKi9cbiAgICBVbmtub3duRmllbGRIYW5kbGVyLmxpc3QgPSAobWVzc2FnZSwgZmllbGRObykgPT4ge1xuICAgICAgICBpZiAoaXMobWVzc2FnZSkpIHtcbiAgICAgICAgICAgIGxldCBhbGwgPSBtZXNzYWdlW1Vua25vd25GaWVsZEhhbmRsZXIuc3ltYm9sXTtcbiAgICAgICAgICAgIHJldHVybiBmaWVsZE5vID8gYWxsLmZpbHRlcih1ZiA9PiB1Zi5ubyA9PSBmaWVsZE5vKSA6IGFsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBsYXN0IHVua25vd24gZmllbGQgYnkgZmllbGQgbnVtYmVyLlxuICAgICAqL1xuICAgIFVua25vd25GaWVsZEhhbmRsZXIubGFzdCA9IChtZXNzYWdlLCBmaWVsZE5vKSA9PiBVbmtub3duRmllbGRIYW5kbGVyLmxpc3QobWVzc2FnZSwgZmllbGRObykuc2xpY2UoLTEpWzBdO1xuICAgIGNvbnN0IGlzID0gKG1lc3NhZ2UpID0+IG1lc3NhZ2UgJiYgQXJyYXkuaXNBcnJheShtZXNzYWdlW1Vua25vd25GaWVsZEhhbmRsZXIuc3ltYm9sXSk7XG59KShVbmtub3duRmllbGRIYW5kbGVyIHx8IChVbmtub3duRmllbGRIYW5kbGVyID0ge30pKTtcbi8qKlxuICogTWVyZ2VzIGJpbmFyeSB3cml0ZSBvciByZWFkIG9wdGlvbnMuIExhdGVyIHZhbHVlcyBvdmVycmlkZSBlYXJsaWVyIHZhbHVlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlQmluYXJ5T3B0aW9ucyhhLCBiKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYSksIGIpO1xufVxuLyoqXG4gKiBQcm90b2J1ZiBiaW5hcnkgZm9ybWF0IHdpcmUgdHlwZXMuXG4gKlxuICogQSB3aXJlIHR5cGUgcHJvdmlkZXMganVzdCBlbm91Z2ggaW5mb3JtYXRpb24gdG8gZmluZCB0aGUgbGVuZ3RoIG9mIHRoZVxuICogZm9sbG93aW5nIHZhbHVlLlxuICpcbiAqIFNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9wcm90b2NvbC1idWZmZXJzL2RvY3MvZW5jb2Rpbmcjc3RydWN0dXJlXG4gKi9cbmV4cG9ydCB2YXIgV2lyZVR5cGU7XG4oZnVuY3Rpb24gKFdpcmVUeXBlKSB7XG4gICAgLyoqXG4gICAgICogVXNlZCBmb3IgaW50MzIsIGludDY0LCB1aW50MzIsIHVpbnQ2NCwgc2ludDMyLCBzaW50NjQsIGJvb2wsIGVudW1cbiAgICAgKi9cbiAgICBXaXJlVHlwZVtXaXJlVHlwZVtcIlZhcmludFwiXSA9IDBdID0gXCJWYXJpbnRcIjtcbiAgICAvKipcbiAgICAgKiBVc2VkIGZvciBmaXhlZDY0LCBzZml4ZWQ2NCwgZG91YmxlLlxuICAgICAqIEFsd2F5cyA4IGJ5dGVzIHdpdGggbGl0dGxlLWVuZGlhbiBieXRlIG9yZGVyLlxuICAgICAqL1xuICAgIFdpcmVUeXBlW1dpcmVUeXBlW1wiQml0NjRcIl0gPSAxXSA9IFwiQml0NjRcIjtcbiAgICAvKipcbiAgICAgKiBVc2VkIGZvciBzdHJpbmcsIGJ5dGVzLCBlbWJlZGRlZCBtZXNzYWdlcywgcGFja2VkIHJlcGVhdGVkIGZpZWxkc1xuICAgICAqXG4gICAgICogT25seSByZXBlYXRlZCBudW1lcmljIHR5cGVzICh0eXBlcyB3aGljaCB1c2UgdGhlIHZhcmludCwgMzItYml0LFxuICAgICAqIG9yIDY0LWJpdCB3aXJlIHR5cGVzKSBjYW4gYmUgcGFja2VkLiBJbiBwcm90bzMsIHN1Y2ggZmllbGRzIGFyZVxuICAgICAqIHBhY2tlZCBieSBkZWZhdWx0LlxuICAgICAqL1xuICAgIFdpcmVUeXBlW1dpcmVUeXBlW1wiTGVuZ3RoRGVsaW1pdGVkXCJdID0gMl0gPSBcIkxlbmd0aERlbGltaXRlZFwiO1xuICAgIC8qKlxuICAgICAqIFVzZWQgZm9yIGdyb3Vwc1xuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICovXG4gICAgV2lyZVR5cGVbV2lyZVR5cGVbXCJTdGFydEdyb3VwXCJdID0gM10gPSBcIlN0YXJ0R3JvdXBcIjtcbiAgICAvKipcbiAgICAgKiBVc2VkIGZvciBncm91cHNcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIFdpcmVUeXBlW1dpcmVUeXBlW1wiRW5kR3JvdXBcIl0gPSA0XSA9IFwiRW5kR3JvdXBcIjtcbiAgICAvKipcbiAgICAgKiBVc2VkIGZvciBmaXhlZDMyLCBzZml4ZWQzMiwgZmxvYXQuXG4gICAgICogQWx3YXlzIDQgYnl0ZXMgd2l0aCBsaXR0bGUtZW5kaWFuIGJ5dGUgb3JkZXIuXG4gICAgICovXG4gICAgV2lyZVR5cGVbV2lyZVR5cGVbXCJCaXQzMlwiXSA9IDVdID0gXCJCaXQzMlwiO1xufSkoV2lyZVR5cGUgfHwgKFdpcmVUeXBlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryReader: function() { return /* binding */ BinaryReader; },\n/* harmony export */   binaryReadOptions: function() { return /* binding */ binaryReadOptions; }\n/* harmony export */ });\n/* harmony import */ var _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary-format-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js\");\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n/* harmony import */ var _goog_varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./goog-varint */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js\");\n\n\n\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nfunction binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nclass BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = _goog_varint__WEBPACK_IMPORTED_MODULE_0__.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = _goog_varint__WEBPACK_IMPORTED_MODULE_0__.varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.Bit64:\n                this.pos += 4;\n            case _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.Bit32:\n                this.pos += 4;\n                break;\n            case _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== _binary_format_contract__WEBPACK_IMPORTED_MODULE_1__.WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryWriter: function() { return /* binding */ BinaryWriter; },\n/* harmony export */   binaryWriteOptions: function() { return /* binding */ binaryWriteOptions; }\n/* harmony export */ });\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n/* harmony import */ var _goog_varint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./goog-varint */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js\");\n\n\n\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nfunction binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nclass BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        (0,_goog_varint__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertFloat32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0,_goog_varint__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong.from(value);\n        (0,_goog_varint__WEBPACK_IMPORTED_MODULE_1__.varint64write)(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        (0,_goog_varint__WEBPACK_IMPORTED_MODULE_1__.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong.from(value);\n        (0,_goog_varint__WEBPACK_IMPORTED_MODULE_1__.varint64write)(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int64fromString: function() { return /* binding */ int64fromString; },\n/* harmony export */   int64toString: function() { return /* binding */ int64toString; },\n/* harmony export */   varint32read: function() { return /* binding */ varint32read; },\n/* harmony export */   varint32write: function() { return /* binding */ varint32write; },\n/* harmony export */   varint64read: function() { return /* binding */ varint64read; },\n/* harmony export */   varint64write: function() { return /* binding */ varint64write; }\n/* harmony export */ });\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nfunction int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to highBits\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nfunction int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if ((bitsHigh >>> 0) <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonReadOptions: function() { return /* binding */ jsonReadOptions; },\n/* harmony export */   jsonWriteOptions: function() { return /* binding */ jsonWriteOptions; },\n/* harmony export */   mergeJsonOptions: function() { return /* binding */ mergeJsonOptions; }\n/* harmony export */ });\nconst defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nfunction jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nfunction jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nfunction mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvanNvbi1mb3JtYXQtY29udHJhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvanNvbi1mb3JtYXQtY29udHJhY3QuanM/ODcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZhdWx0c1dyaXRlID0ge1xuICAgIGVtaXREZWZhdWx0VmFsdWVzOiBmYWxzZSxcbiAgICBlbnVtQXNJbnRlZ2VyOiBmYWxzZSxcbiAgICB1c2VQcm90b0ZpZWxkTmFtZTogZmFsc2UsXG4gICAgcHJldHR5U3BhY2VzOiAwLFxufSwgZGVmYXVsdHNSZWFkID0ge1xuICAgIGlnbm9yZVVua25vd25GaWVsZHM6IGZhbHNlLFxufTtcbi8qKlxuICogTWFrZSBvcHRpb25zIGZvciByZWFkaW5nIEpTT04gZGF0YSBmcm9tIHBhcnRpYWwgb3B0aW9ucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGpzb25SZWFkT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMgPyBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRzUmVhZCksIG9wdGlvbnMpIDogZGVmYXVsdHNSZWFkO1xufVxuLyoqXG4gKiBNYWtlIG9wdGlvbnMgZm9yIHdyaXRpbmcgSlNPTiBkYXRhIGZyb20gcGFydGlhbCBvcHRpb25zLlxuICovXG5leHBvcnQgZnVuY3Rpb24ganNvbldyaXRlT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMgPyBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRzV3JpdGUpLCBvcHRpb25zKSA6IGRlZmF1bHRzV3JpdGU7XG59XG4vKipcbiAqIE1lcmdlcyBKU09OIHdyaXRlIG9yIHJlYWQgb3B0aW9ucy4gTGF0ZXIgdmFsdWVzIG92ZXJyaWRlIGVhcmxpZXIgdmFsdWVzLiBUeXBlIHJlZ2lzdHJpZXMgYXJlIG1lcmdlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlSnNvbk9wdGlvbnMoYSwgYikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgbGV0IGMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGEpLCBiKTtcbiAgICBjLnR5cGVSZWdpc3RyeSA9IFsuLi4oKF9hID0gYSA9PT0gbnVsbCB8fCBhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhLnR5cGVSZWdpc3RyeSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10pLCAuLi4oKF9iID0gYiA9PT0gbnVsbCB8fCBiID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiLnR5cGVSZWdpc3RyeSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogW10pXTtcbiAgICByZXR1cm4gYztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js":
/*!************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonObject: function() { return /* binding */ isJsonObject; },\n/* harmony export */   typeofJsonValue: function() { return /* binding */ typeofJsonValue; }\n/* harmony export */ });\n/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nfunction typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nfunction isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvanNvbi10eXBpbmdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L2pzb24tdHlwaW5ncy5qcz8zZGY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHRoZSB0eXBlIG9mIGEgSlNPTiB2YWx1ZS5cbiAqIERpc3Rpbmd1aXNoZXMgYmV0d2VlbiBhcnJheSwgbnVsbCBhbmQgb2JqZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHlwZW9mSnNvblZhbHVlKHZhbHVlKSB7XG4gICAgbGV0IHQgPSB0eXBlb2YgdmFsdWU7XG4gICAgaWYgKHQgPT0gXCJvYmplY3RcIikge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpXG4gICAgICAgICAgICByZXR1cm4gXCJhcnJheVwiO1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gXCJudWxsXCI7XG4gICAgfVxuICAgIHJldHVybiB0O1xufVxuLyoqXG4gKiBJcyB0aGlzIGEgSlNPTiBvYmplY3QgKGluc3RlYWQgb2YgYW4gYXJyYXkgb3IgbnVsbCk/XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25PYmplY3QodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lowerCamelCase: function() { return /* binding */ lowerCamelCase; }\n/* harmony export */ });\n/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nfunction lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvbG93ZXItY2FtZWwtY2FzZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1Zi10cy9ydW50aW1lL2J1aWxkL2VzMjAxNS9sb3dlci1jYW1lbC1jYXNlLmpzPzE2OGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0cyBzbmFrZV9jYXNlIHRvIGxvd2VyQ2FtZWxDYXNlLlxuICpcbiAqIFNob3VsZCBiZWhhdmUgbGlrZSBwcm90b2M6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vcHJvdG9jb2xidWZmZXJzL3Byb3RvYnVmL2Jsb2IvZThhZTEzN2M5NjQ0NGVhMzEzNDg1ZWQxMTE4YzVlNDNiMjA5OWNmMS9zcmMvZ29vZ2xlL3Byb3RvYnVmL2NvbXBpbGVyL2phdmEvamF2YV9oZWxwZXJzLmNjI0wxMThcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvd2VyQ2FtZWxDYXNlKHNuYWtlQ2FzZSkge1xuICAgIGxldCBjYXBOZXh0ID0gZmFsc2U7XG4gICAgY29uc3Qgc2IgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNuYWtlQ2FzZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgbmV4dCA9IHNuYWtlQ2FzZS5jaGFyQXQoaSk7XG4gICAgICAgIGlmIChuZXh0ID09ICdfJykge1xuICAgICAgICAgICAgY2FwTmV4dCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoL1xcZC8udGVzdChuZXh0KSkge1xuICAgICAgICAgICAgc2IucHVzaChuZXh0KTtcbiAgICAgICAgICAgIGNhcE5leHQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNhcE5leHQpIHtcbiAgICAgICAgICAgIHNiLnB1c2gobmV4dC50b1VwcGVyQ2FzZSgpKTtcbiAgICAgICAgICAgIGNhcE5leHQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpID09IDApIHtcbiAgICAgICAgICAgIHNiLnB1c2gobmV4dC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNiLnB1c2gobmV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNiLmpvaW4oJycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MESSAGE_TYPE: function() { return /* binding */ MESSAGE_TYPE; }\n/* harmony export */ });\n/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nconst MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvbWVzc2FnZS10eXBlLWNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L21lc3NhZ2UtdHlwZS1jb250cmFjdC5qcz8yODU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIHN5bWJvbCB1c2VkIGFzIGEga2V5IG9uIG1lc3NhZ2Ugb2JqZWN0cyB0byBzdG9yZSB0aGUgbWVzc2FnZSB0eXBlLlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGFuIGV4cGVyaW1lbnRhbCBmZWF0dXJlIC0gaXQgaXMgaGVyZSB0byBzdGF5LCBidXRcbiAqIGltcGxlbWVudGF0aW9uIGRldGFpbHMgbWF5IGNoYW5nZSB3aXRob3V0IG5vdGljZS5cbiAqL1xuZXhwb3J0IGNvbnN0IE1FU1NBR0VfVFlQRSA9IFN5bWJvbC5mb3IoXCJwcm90b2J1Zi10cy9tZXNzYWdlLXR5cGVcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type.js":
/*!************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/message-type.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MessageType: function() { return /* binding */ MessageType; }\n/* harmony export */ });\n/* harmony import */ var _message_type_contract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message-type-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js\");\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _reflection_type_check__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflection-type-check */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js\");\n/* harmony import */ var _reflection_json_reader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reflection-json-reader */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js\");\n/* harmony import */ var _reflection_json_writer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reflection-json-writer */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js\");\n/* harmony import */ var _reflection_binary_reader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reflection-binary-reader */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js\");\n/* harmony import */ var _reflection_binary_writer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reflection-binary-writer */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js\");\n/* harmony import */ var _reflection_create__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reflection-create */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js\");\n/* harmony import */ var _reflection_merge_partial__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./reflection-merge-partial */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js\");\n/* harmony import */ var _json_typings__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./json-typings */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js\");\n/* harmony import */ var _json_format_contract__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./json-format-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js\");\n/* harmony import */ var _reflection_equals__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./reflection-equals */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js\");\n/* harmony import */ var _binary_writer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./binary-writer */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js\");\n/* harmony import */ var _binary_reader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./binary-reader */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst baseDescriptors = Object.getOwnPropertyDescriptors(Object.getPrototypeOf({}));\nconst messageTypeDescriptor = baseDescriptors[_message_type_contract__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_TYPE] = {};\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nclass MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(_reflection_info__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        messageTypeDescriptor.value = this;\n        this.messagePrototype = Object.create(null, baseDescriptors);\n        this.refTypeCheck = new _reflection_type_check__WEBPACK_IMPORTED_MODULE_2__.ReflectionTypeCheck(this);\n        this.refJsonReader = new _reflection_json_reader__WEBPACK_IMPORTED_MODULE_3__.ReflectionJsonReader(this);\n        this.refJsonWriter = new _reflection_json_writer__WEBPACK_IMPORTED_MODULE_4__.ReflectionJsonWriter(this);\n        this.refBinReader = new _reflection_binary_reader__WEBPACK_IMPORTED_MODULE_5__.ReflectionBinaryReader(this);\n        this.refBinWriter = new _reflection_binary_writer__WEBPACK_IMPORTED_MODULE_6__.ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = (0,_reflection_create__WEBPACK_IMPORTED_MODULE_7__.reflectionCreate)(this);\n        if (value !== undefined) {\n            (0,_reflection_merge_partial__WEBPACK_IMPORTED_MODULE_8__.reflectionMergePartial)(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        (0,_reflection_merge_partial__WEBPACK_IMPORTED_MODULE_8__.reflectionMergePartial)(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return (0,_reflection_equals__WEBPACK_IMPORTED_MODULE_9__.reflectionEquals)(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        (0,_reflection_merge_partial__WEBPACK_IMPORTED_MODULE_8__.reflectionMergePartial)(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = (0,_binary_reader__WEBPACK_IMPORTED_MODULE_10__.binaryReadOptions)(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, (0,_json_format_contract__WEBPACK_IMPORTED_MODULE_11__.jsonReadOptions)(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, (0,_json_format_contract__WEBPACK_IMPORTED_MODULE_11__.jsonWriteOptions)(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = (0,_binary_writer__WEBPACK_IMPORTED_MODULE_12__.binaryWriteOptions)(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${(0,_json_typings__WEBPACK_IMPORTED_MODULE_13__.typeofJsonValue)(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/oneof.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/oneof.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearOneofValue: function() { return /* binding */ clearOneofValue; },\n/* harmony export */   getOneofValue: function() { return /* binding */ getOneofValue; },\n/* harmony export */   getSelectedOneofValue: function() { return /* binding */ getSelectedOneofValue; },\n/* harmony export */   isOneofGroup: function() { return /* binding */ isOneofGroup; },\n/* harmony export */   setOneofValue: function() { return /* binding */ setOneofValue; },\n/* harmony export */   setUnknownOneofValue: function() { return /* binding */ setUnknownOneofValue; }\n/* harmony export */ });\n/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nfunction isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nfunction getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nfunction setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nfunction setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nfunction clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nfunction getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvb25lb2YuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L29uZW9mLmpzP2E0MjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJcyB0aGUgZ2l2ZW4gdmFsdWUgYSB2YWxpZCBvbmVvZiBncm91cD9cbiAqXG4gKiBXZSByZXByZXNlbnQgcHJvdG9idWYgYG9uZW9mYCBhcyBhbGdlYnJhaWMgZGF0YSB0eXBlcyAoQURUKSBpbiBnZW5lcmF0ZWRcbiAqIGNvZGUuIEJ1dCB3aGVuIHdvcmtpbmcgd2l0aCBtZXNzYWdlcyBvZiB1bmtub3duIHR5cGUsIHRoZSBBRFQgZG9lcyBub3RcbiAqIGhlbHAgdXMuXG4gKlxuICogVGhpcyB0eXBlIGd1YXJkIGNoZWNrcyBpZiB0aGUgZ2l2ZW4gb2JqZWN0IGFkaGVyZXMgdG8gdGhlIEFEVCBydWxlcywgd2hpY2hcbiAqIGFyZSBhcyBmb2xsb3dzOlxuICpcbiAqIDEpIE11c3QgYmUgYW4gb2JqZWN0LlxuICpcbiAqIDIpIE11c3QgaGF2ZSBhIFwib25lb2ZLaW5kXCIgZGlzY3JpbWluYXRvciBwcm9wZXJ0eS5cbiAqXG4gKiAzKSBJZiBcIm9uZW9mS2luZFwiIGlzIGB1bmRlZmluZWRgLCBubyBtZW1iZXIgZmllbGQgaXMgc2VsZWN0ZWQuIFRoZSBvYmplY3RcbiAqIG11c3Qgbm90IGhhdmUgYW55IG90aGVyIHByb3BlcnRpZXMuXG4gKlxuICogNCkgSWYgXCJvbmVvZktpbmRcIiBpcyBhIGBzdHJpbmdgLCB0aGUgbWVtYmVyIGZpZWxkIHdpdGggdGhpcyBuYW1lIGlzXG4gKiBzZWxlY3RlZC5cbiAqXG4gKiA1KSBJZiBhIG1lbWJlciBmaWVsZCBpcyBzZWxlY3RlZCwgdGhlIG9iamVjdCBtdXN0IGhhdmUgYSBzZWNvbmQgcHJvcGVydHlcbiAqIHdpdGggdGhpcyBuYW1lLiBUaGUgcHJvcGVydHkgbXVzdCBub3QgYmUgYHVuZGVmaW5lZGAuXG4gKlxuICogNikgTm8gZXh0cmEgcHJvcGVydGllcyBhcmUgYWxsb3dlZC4gVGhlIG9iamVjdCBoYXMgZWl0aGVyIG9uZSBwcm9wZXJ0eVxuICogKG5vIHNlbGVjdGlvbikgb3IgdHdvIHByb3BlcnRpZXMgKHNlbGVjdGlvbikuXG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNPbmVvZkdyb3VwKGFueSkge1xuICAgIGlmICh0eXBlb2YgYW55ICE9ICdvYmplY3QnIHx8IGFueSA9PT0gbnVsbCB8fCAhYW55Lmhhc093blByb3BlcnR5KCdvbmVvZktpbmQnKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHN3aXRjaCAodHlwZW9mIGFueS5vbmVvZktpbmQpIHtcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgaWYgKGFueVthbnkub25lb2ZLaW5kXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhbnkpLmxlbmd0aCA9PSAyO1xuICAgICAgICBjYXNlIFwidW5kZWZpbmVkXCI6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoYW55KS5sZW5ndGggPT0gMTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBnaXZlbiBmaWVsZCBpbiBhIG9uZW9mIGdyb3VwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0T25lb2ZWYWx1ZShvbmVvZiwga2luZCkge1xuICAgIHJldHVybiBvbmVvZltraW5kXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXRPbmVvZlZhbHVlKG9uZW9mLCBraW5kLCB2YWx1ZSkge1xuICAgIGlmIChvbmVvZi5vbmVvZktpbmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBkZWxldGUgb25lb2Zbb25lb2Yub25lb2ZLaW5kXTtcbiAgICB9XG4gICAgb25lb2Yub25lb2ZLaW5kID0ga2luZDtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBvbmVvZltraW5kXSA9IHZhbHVlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXRVbmtub3duT25lb2ZWYWx1ZShvbmVvZiwga2luZCwgdmFsdWUpIHtcbiAgICBpZiAob25lb2Yub25lb2ZLaW5kICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZGVsZXRlIG9uZW9mW29uZW9mLm9uZW9mS2luZF07XG4gICAgfVxuICAgIG9uZW9mLm9uZW9mS2luZCA9IGtpbmQ7XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYga2luZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG9uZW9mW2tpbmRdID0gdmFsdWU7XG4gICAgfVxufVxuLyoqXG4gKiBSZW1vdmVzIHRoZSBzZWxlY3RlZCBmaWVsZCBpbiBhIG9uZW9mIGdyb3VwLlxuICpcbiAqIE5vdGUgdGhhdCB0aGUgcmVjb21tZW5kZWQgd2F5IHRvIG1vZGlmeSBhIG9uZW9mIGdyb3VwIGlzIHRvIHNldFxuICogYSBuZXcgb2JqZWN0OlxuICpcbiAqIGBgYHRzXG4gKiBtZXNzYWdlLnJlc3VsdCA9IHsgb25lb2ZLaW5kOiB1bmRlZmluZWQgfTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJPbmVvZlZhbHVlKG9uZW9mKSB7XG4gICAgaWYgKG9uZW9mLm9uZW9mS2luZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGRlbGV0ZSBvbmVvZltvbmVvZi5vbmVvZktpbmRdO1xuICAgIH1cbiAgICBvbmVvZi5vbmVvZktpbmQgPSB1bmRlZmluZWQ7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHNlbGVjdGVkIHZhbHVlIG9mIHRoZSBnaXZlbiBvbmVvZiBncm91cC5cbiAqXG4gKiBOb3QgdGhhdCB0aGUgcmVjb21tZW5kZWQgd2F5IHRvIGFjY2VzcyBhIG9uZW9mIGdyb3VwIGlzIHRvIGNoZWNrXG4gKiB0aGUgXCJvbmVvZktpbmRcIiBwcm9wZXJ0eSBhbmQgbGV0IFR5cGVTY3JpcHQgbmFycm93IGRvd24gdGhlIHVuaW9uXG4gKiB0eXBlIGZvciB5b3U6XG4gKlxuICogYGBgdHNcbiAqIGlmIChtZXNzYWdlLnJlc3VsdC5vbmVvZktpbmQgPT09IFwiZXJyb3JcIikge1xuICogICBtZXNzYWdlLnJlc3VsdC5lcnJvcjsgLy8gc3RyaW5nXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBJbiB0aGUgcmFyZSBjYXNlIHlvdSBqdXN0IG5lZWQgdGhlIHZhbHVlLCBhbmQgZG8gbm90IGNhcmUgYWJvdXRcbiAqIHdoaWNoIHByb3RvYnVmIGZpZWxkIGlzIHNlbGVjdGVkLCB5b3UgY2FuIHVzZSB0aGlzIGZ1bmN0aW9uXG4gKiBmb3IgY29udmVuaWVuY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZWxlY3RlZE9uZW9mVmFsdWUob25lb2YpIHtcbiAgICBpZiAob25lb2Yub25lb2ZLaW5kID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIG9uZW9mW29uZW9mLm9uZW9mS2luZF07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/oneof.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PbLong: function() { return /* binding */ PbLong; },\n/* harmony export */   PbULong: function() { return /* binding */ PbULong; },\n/* harmony export */   detectBi: function() { return /* binding */ detectBi; }\n/* harmony export */ });\n/* harmony import */ var _goog_varint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./goog-varint */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js\");\n\nlet BI;\nfunction detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    BI = ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\ndetectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\nconst HALF_2_PWR_32 = 0x080000000;\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nclass PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = (0,_goog_varint__WEBPACK_IMPORTED_MODULE_0__.int64fromString)(value);\n                    if (minus)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : (0,_goog_varint__WEBPACK_IMPORTED_MODULE_0__.int64toString)(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nclass PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('signed long too small');\n                    if (value > BI.MAX)\n                        throw new Error('signed long too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = (0,_goog_varint__WEBPACK_IMPORTED_MODULE_0__.int64fromString)(value);\n                    if (minus) {\n                        if (hi > HALF_2_PWR_32 || (hi == HALF_2_PWR_32 && lo != 0))\n                            throw new Error('signed long too small');\n                    }\n                    else if (hi >= HALF_2_PWR_32)\n                        throw new Error('signed long too large');\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & HALF_2_PWR_32) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + (0,_goog_varint__WEBPACK_IMPORTED_MODULE_0__.int64toString)(n.lo, n.hi);\n        }\n        return (0,_goog_varint__WEBPACK_IMPORTED_MODULE_0__.int64toString)(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectionBinaryReader: function() { return /* binding */ ReflectionBinaryReader; }\n/* harmony export */ });\n/* harmony import */ var _binary_format_contract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary-format-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js\");\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reflection-long-convert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js\");\n/* harmony import */ var _reflection_scalar_default__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflection-scalar-default */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js\");\n\n\n\n\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nclass ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? _binary_format_contract__WEBPACK_IMPORTED_MODULE_0__.UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == _binary_format_contract__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited && T != _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING && T != _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, _reflection_info__WEBPACK_IMPORTED_MODULE_1__.LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = (0,_reflection_scalar_default__WEBPACK_IMPORTED_MODULE_2__.reflectionScalarDefault)(field.K);\n            key = field.K == _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = (0,_reflection_scalar_default__WEBPACK_IMPORTED_MODULE_2__.reflectionScalarDefault)(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32:\n                return reader.int32();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING:\n                return reader.string();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n                return reader.bool();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE:\n                return reader.double();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT:\n                return reader.float();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64:\n                return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(reader.int64(), longType);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64:\n                return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(reader.uint64(), longType);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED64:\n                return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(reader.fixed64(), longType);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED32:\n                return reader.fixed32();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES:\n                return reader.bytes();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32:\n                return reader.uint32();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED64:\n                return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(reader.sfixed64(), longType);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT32:\n                return reader.sint32();\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT64:\n                return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(reader.sint64(), longType);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectionBinaryWriter: function() { return /* binding */ ReflectionBinaryWriter; }\n/* harmony export */ });\n/* harmony import */ var _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./binary-format-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js\");\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js\");\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n\n\n\n\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nclass ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(Array.isArray(value));\n                        if (repeated == _reflection_info__WEBPACK_IMPORTED_MODULE_0__.RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n                (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        (0,_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(type !== _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES && type !== _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n                d = i || !value.length;\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit64;\n                m = \"double\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit32;\n                m = \"float\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n                d = i || _pb_long__WEBPACK_IMPORTED_MODULE_3__.PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n                d = i || _pb_long__WEBPACK_IMPORTED_MODULE_3__.PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n                d = i || _pb_long__WEBPACK_IMPORTED_MODULE_3__.PbULong.from(value).isZero();\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED32:\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED32:\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n                d = i || _pb_long__WEBPACK_IMPORTED_MODULE_3__.PbLong.from(value).isZero();\n                t = _binary_format_contract__WEBPACK_IMPORTED_MODULE_2__.WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n                d = i || _pb_long__WEBPACK_IMPORTED_MODULE_3__.PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflectionCreate: function() { return /* binding */ reflectionCreate; }\n/* harmony export */ });\n/* harmony import */ var _reflection_scalar_default__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-scalar-default */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js\");\n/* harmony import */ var _message_type_contract__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message-type-contract */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js\");\n\n\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nfunction reflectionCreate(type) {\n    /**\n     * This ternary can be removed in the next major version.\n     * The `Object.create()` code path utilizes a new `messagePrototype`\n     * property on the `IMessageType` which has this same `MESSAGE_TYPE`\n     * non-enumerable property on it. Doing it this way means that we only\n     * pay the cost of `Object.defineProperty()` once per `IMessageType`\n     * class of once per \"instance\". The falsy code path is only provided\n     * for backwards compatibility in cases where the runtime library is\n     * updated without also updating the generated code.\n     */\n    const msg = type.messagePrototype\n        ? Object.create(type.messagePrototype)\n        : Object.defineProperty({}, _message_type_contract__WEBPACK_IMPORTED_MODULE_0__.MESSAGE_TYPE, { value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = (0,_reflection_scalar_default__WEBPACK_IMPORTED_MODULE_1__.reflectionScalarDefault)(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1jcmVhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNFO0FBQ2Y7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxFQUFFLGdFQUFZLElBQUksYUFBYTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsbUZBQXVCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L3JlZmxlY3Rpb24tY3JlYXRlLmpzP2JkNGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVmbGVjdGlvblNjYWxhckRlZmF1bHQgfSBmcm9tIFwiLi9yZWZsZWN0aW9uLXNjYWxhci1kZWZhdWx0XCI7XG5pbXBvcnQgeyBNRVNTQUdFX1RZUEUgfSBmcm9tICcuL21lc3NhZ2UtdHlwZS1jb250cmFjdCc7XG4vKipcbiAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgdGhlIGdlbmVyaWMgbWVzc2FnZSwgdXNpbmcgdGhlIGZpZWxkXG4gKiBpbmZvcm1hdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZmxlY3Rpb25DcmVhdGUodHlwZSkge1xuICAgIC8qKlxuICAgICAqIFRoaXMgdGVybmFyeSBjYW4gYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLlxuICAgICAqIFRoZSBgT2JqZWN0LmNyZWF0ZSgpYCBjb2RlIHBhdGggdXRpbGl6ZXMgYSBuZXcgYG1lc3NhZ2VQcm90b3R5cGVgXG4gICAgICogcHJvcGVydHkgb24gdGhlIGBJTWVzc2FnZVR5cGVgIHdoaWNoIGhhcyB0aGlzIHNhbWUgYE1FU1NBR0VfVFlQRWBcbiAgICAgKiBub24tZW51bWVyYWJsZSBwcm9wZXJ0eSBvbiBpdC4gRG9pbmcgaXQgdGhpcyB3YXkgbWVhbnMgdGhhdCB3ZSBvbmx5XG4gICAgICogcGF5IHRoZSBjb3N0IG9mIGBPYmplY3QuZGVmaW5lUHJvcGVydHkoKWAgb25jZSBwZXIgYElNZXNzYWdlVHlwZWBcbiAgICAgKiBjbGFzcyBvZiBvbmNlIHBlciBcImluc3RhbmNlXCIuIFRoZSBmYWxzeSBjb2RlIHBhdGggaXMgb25seSBwcm92aWRlZFxuICAgICAqIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBpbiBjYXNlcyB3aGVyZSB0aGUgcnVudGltZSBsaWJyYXJ5IGlzXG4gICAgICogdXBkYXRlZCB3aXRob3V0IGFsc28gdXBkYXRpbmcgdGhlIGdlbmVyYXRlZCBjb2RlLlxuICAgICAqL1xuICAgIGNvbnN0IG1zZyA9IHR5cGUubWVzc2FnZVByb3RvdHlwZVxuICAgICAgICA/IE9iamVjdC5jcmVhdGUodHlwZS5tZXNzYWdlUHJvdG90eXBlKVxuICAgICAgICA6IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgTUVTU0FHRV9UWVBFLCB7IHZhbHVlOiB0eXBlIH0pO1xuICAgIGZvciAobGV0IGZpZWxkIG9mIHR5cGUuZmllbGRzKSB7XG4gICAgICAgIGxldCBuYW1lID0gZmllbGQubG9jYWxOYW1lO1xuICAgICAgICBpZiAoZmllbGQub3B0KVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmIChmaWVsZC5vbmVvZilcbiAgICAgICAgICAgIG1zZ1tmaWVsZC5vbmVvZl0gPSB7IG9uZW9mS2luZDogdW5kZWZpbmVkIH07XG4gICAgICAgIGVsc2UgaWYgKGZpZWxkLnJlcGVhdClcbiAgICAgICAgICAgIG1zZ1tuYW1lXSA9IFtdO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBzd2l0Y2ggKGZpZWxkLmtpbmQpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwic2NhbGFyXCI6XG4gICAgICAgICAgICAgICAgICAgIG1zZ1tuYW1lXSA9IHJlZmxlY3Rpb25TY2FsYXJEZWZhdWx0KGZpZWxkLlQsIGZpZWxkLkwpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICAgICAgICAgICAgICAvLyB3ZSByZXF1aXJlIDAgdG8gYmUgZGVmYXVsdCB2YWx1ZSBmb3IgYWxsIGVudW1zXG4gICAgICAgICAgICAgICAgICAgIG1zZ1tuYW1lXSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgICAgICAgICAgbXNnW25hbWVdID0ge307XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbXNnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflectionEquals: function() { return /* binding */ reflectionEquals; }\n/* harmony export */ });\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nfunction reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1lcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHdEQUFVO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsd0RBQVU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBVTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1lcXVhbHMuanM/YWY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2FsYXJUeXBlIH0gZnJvbSBcIi4vcmVmbGVjdGlvbi1pbmZvXCI7XG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0d28gbWVzc2FnZSBvZiB0aGUgc2FtZSB0eXBlIGhhdmUgdGhlIHNhbWUgZmllbGQgdmFsdWVzLlxuICogQ2hlY2tzIGZvciBkZWVwIGVxdWFsaXR5LCB0cmF2ZXJzaW5nIHJlcGVhdGVkIGZpZWxkcywgb25lb2YgZ3JvdXBzLCBtYXBzXG4gKiBhbmQgbWVzc2FnZXMgcmVjdXJzaXZlbHkuXG4gKiBXaWxsIGFsc28gcmV0dXJuIHRydWUgaWYgYm90aCBtZXNzYWdlcyBhcmUgYHVuZGVmaW5lZGAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWZsZWN0aW9uRXF1YWxzKGluZm8sIGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYilcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKCFhIHx8ICFiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgZmllbGQgb2YgaW5mby5maWVsZHMpIHtcbiAgICAgICAgbGV0IGxvY2FsTmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICAgICAgbGV0IHZhbF9hID0gZmllbGQub25lb2YgPyBhW2ZpZWxkLm9uZW9mXVtsb2NhbE5hbWVdIDogYVtsb2NhbE5hbWVdO1xuICAgICAgICBsZXQgdmFsX2IgPSBmaWVsZC5vbmVvZiA/IGJbZmllbGQub25lb2ZdW2xvY2FsTmFtZV0gOiBiW2xvY2FsTmFtZV07XG4gICAgICAgIHN3aXRjaCAoZmllbGQua2luZCkge1xuICAgICAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgICAgICBsZXQgdCA9IGZpZWxkLmtpbmQgPT0gXCJlbnVtXCIgPyBTY2FsYXJUeXBlLklOVDMyIDogZmllbGQuVDtcbiAgICAgICAgICAgICAgICBpZiAoIShmaWVsZC5yZXBlYXRcbiAgICAgICAgICAgICAgICAgICAgPyByZXBlYXRlZFByaW1pdGl2ZUVxKHQsIHZhbF9hLCB2YWxfYilcbiAgICAgICAgICAgICAgICAgICAgOiBwcmltaXRpdmVFcSh0LCB2YWxfYSwgdmFsX2IpKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgICAgIGlmICghKGZpZWxkLlYua2luZCA9PSBcIm1lc3NhZ2VcIlxuICAgICAgICAgICAgICAgICAgICA/IHJlcGVhdGVkTXNnRXEoZmllbGQuVi5UKCksIG9iamVjdFZhbHVlcyh2YWxfYSksIG9iamVjdFZhbHVlcyh2YWxfYikpXG4gICAgICAgICAgICAgICAgICAgIDogcmVwZWF0ZWRQcmltaXRpdmVFcShmaWVsZC5WLmtpbmQgPT0gXCJlbnVtXCIgPyBTY2FsYXJUeXBlLklOVDMyIDogZmllbGQuVi5ULCBvYmplY3RWYWx1ZXModmFsX2EpLCBvYmplY3RWYWx1ZXModmFsX2IpKSkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtZXNzYWdlXCI6XG4gICAgICAgICAgICAgICAgbGV0IFQgPSBmaWVsZC5UKCk7XG4gICAgICAgICAgICAgICAgaWYgKCEoZmllbGQucmVwZWF0XG4gICAgICAgICAgICAgICAgICAgID8gcmVwZWF0ZWRNc2dFcShULCB2YWxfYSwgdmFsX2IpXG4gICAgICAgICAgICAgICAgICAgIDogVC5lcXVhbHModmFsX2EsIHZhbF9iKSkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmNvbnN0IG9iamVjdFZhbHVlcyA9IE9iamVjdC52YWx1ZXM7XG5mdW5jdGlvbiBwcmltaXRpdmVFcSh0eXBlLCBhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmICh0eXBlICE9PSBTY2FsYXJUeXBlLkJZVEVTKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgbGV0IGJhID0gYTtcbiAgICBsZXQgYmIgPSBiO1xuICAgIGlmIChiYS5sZW5ndGggIT09IGJiLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmEubGVuZ3RoOyBpKyspXG4gICAgICAgIGlmIChiYVtpXSAhPSBiYltpXSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIHJlcGVhdGVkUHJpbWl0aXZlRXEodHlwZSwgYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspXG4gICAgICAgIGlmICghcHJpbWl0aXZlRXEodHlwZSwgYVtpXSwgYltpXSkpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiByZXBlYXRlZE1zZ0VxKHR5cGUsIGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKVxuICAgICAgICBpZiAoIXR5cGUuZXF1YWxzKGFbaV0sIGJbaV0pKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LongType: function() { return /* binding */ LongType; },\n/* harmony export */   RepeatType: function() { return /* binding */ RepeatType; },\n/* harmony export */   ScalarType: function() { return /* binding */ ScalarType; },\n/* harmony export */   normalizeFieldInfo: function() { return /* binding */ normalizeFieldInfo; },\n/* harmony export */   readFieldOption: function() { return /* binding */ readFieldOption; },\n/* harmony export */   readFieldOptions: function() { return /* binding */ readFieldOptions; },\n/* harmony export */   readMessageOption: function() { return /* binding */ readMessageOption; }\n/* harmony export */ });\n/* harmony import */ var _lower_camel_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lower-camel-case */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js\");\n\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nvar LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nvar RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nfunction normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : (0,_lower_camel_case__WEBPACK_IMPORTED_MODULE_0__.lowerCamelCase)(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : (0,_lower_camel_case__WEBPACK_IMPORTED_MODULE_0__.lowerCamelCase)(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nfunction readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nfunction readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nfunction readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectionJsonReader: function() { return /* binding */ ReflectionJsonReader; }\n/* harmony export */ });\n/* harmony import */ var _json_typings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json-typings */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js\");\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./base64 */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/base64.js\");\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js\");\n/* harmony import */ var _reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reflection-long-convert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js\");\n\n\n\n\n\n\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nclass ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = (0,_json_typings__WEBPACK_IMPORTED_MODULE_0__.typeofJsonValue)(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                if (jsonValue === null && (field.kind !== 'enum' || field.T()[0] !== 'google.protobuf.NullValue')) {\n                    continue;\n                }\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert((0,_json_typings__WEBPACK_IMPORTED_MODULE_0__.isJsonObject)(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, _reflection_info__WEBPACK_IMPORTED_MODULE_1__.LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        if (jsonValue === null)\n                            continue;\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        if (jsonValue === null)\n                            continue;\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null` (or the old `\"NULL_VALUE\"`).\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(json === null || json === \"NULL_VALUE\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT)\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assertFloat32)(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED32:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED32:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT32:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32)\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assertUInt32)(int32);\n                    else\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_2__.assertInt32)(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED64:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT64:\n                    if (json === null)\n                        return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_4__.PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_4__.PbLong.from(json), longType);\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED64:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64:\n                    if (json === null)\n                        return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_4__.PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_3__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_4__.PbULong.from(json), longType);\n                // bool:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return (0,_base64__WEBPACK_IMPORTED_MODULE_5__.base64decode)(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectionJsonWriter: function() { return /* binding */ ReflectionJsonWriter; }\n/* harmony export */ });\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64 */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/base64.js\");\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/assert.js\");\n\n\n\n\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nclass ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` as the default for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return !emitDefaultValues && !optional ? undefined : null;\n        if (value === undefined) {\n            (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'number');\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n                return value;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT:\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assertFloat32)(value);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'string');\n                return value;\n            // bool:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED64:\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT64:\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = _pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES:\n                (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return (0,_base64__WEBPACK_IMPORTED_MODULE_3__.base64encode)(value);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflectionLongConvert: function() { return /* binding */ reflectionLongConvert; }\n/* harmony export */ });\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nfunction reflectionLongConvert(long, type) {\n    switch (type) {\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.LongType.BIGINT:\n            return long.toBigInt();\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1sb25nLWNvbnZlcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSxzREFBUTtBQUNyQjtBQUNBLGFBQWEsc0RBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwcm90b2J1Zi10cy9ydW50aW1lL2J1aWxkL2VzMjAxNS9yZWZsZWN0aW9uLWxvbmctY29udmVydC5qcz84OWNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvbmdUeXBlIH0gZnJvbSBcIi4vcmVmbGVjdGlvbi1pbmZvXCI7XG4vKipcbiAqIFV0aWxpdHkgbWV0aG9kIHRvIGNvbnZlcnQgYSBQYkxvbmcgb3IgUGJVbG9uZyB0byBhIEphdmFTY3JpcHRcbiAqIHJlcHJlc2VudGF0aW9uIGR1cmluZyBydW50aW1lLlxuICpcbiAqIFdvcmtzIHdpdGggZ2VuZXJhdGVkIGZpZWxkIGluZm9ybWF0aW9uLCBgdW5kZWZpbmVkYCBpcyBlcXVpdmFsZW50XG4gKiB0byBgU1RSSU5HYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZmxlY3Rpb25Mb25nQ29udmVydChsb25nLCB0eXBlKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgTG9uZ1R5cGUuQklHSU5UOlxuICAgICAgICAgICAgcmV0dXJuIGxvbmcudG9CaWdJbnQoKTtcbiAgICAgICAgY2FzZSBMb25nVHlwZS5OVU1CRVI6XG4gICAgICAgICAgICByZXR1cm4gbG9uZy50b051bWJlcigpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgLy8gY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICAvLyBjYXNlIExvbmdUeXBlLlNUUklORzpcbiAgICAgICAgICAgIHJldHVybiBsb25nLnRvU3RyaW5nKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflectionMergePartial: function() { return /* binding */ reflectionMergePartial; }\n/* harmony export */ });\n/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nfunction reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1tZXJnZS1wYXJ0aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDLGdHQUFnRztBQUNoRywwQkFBMEI7QUFDMUI7QUFDQSxzQ0FBc0M7QUFDdEMsMENBQTBDO0FBQzFDLGdEQUFnRDtBQUNoRDtBQUNBLHFDQUFxQztBQUNyQywwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDLDZCQUE2QjtBQUM3QjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx1QkFBdUI7QUFDM0QseURBQXlEO0FBQ3pEO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHVCQUF1QjtBQUMzRDtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHByb3RvYnVmLXRzL3J1bnRpbWUvYnVpbGQvZXMyMDE1L3JlZmxlY3Rpb24tbWVyZ2UtcGFydGlhbC5qcz80M2IzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weSBwYXJ0aWFsIGRhdGEgaW50byB0aGUgdGFyZ2V0IG1lc3NhZ2UuXG4gKlxuICogSWYgYSBzaW5ndWxhciBzY2FsYXIgb3IgZW51bSBmaWVsZCBpcyBwcmVzZW50IGluIHRoZSBzb3VyY2UsIGl0XG4gKiByZXBsYWNlcyB0aGUgZmllbGQgaW4gdGhlIHRhcmdldC5cbiAqXG4gKiBJZiBhIHNpbmd1bGFyIG1lc3NhZ2UgZmllbGQgaXMgcHJlc2VudCBpbiB0aGUgc291cmNlLCBpdCBpcyBtZXJnZWRcbiAqIHdpdGggdGhlIHRhcmdldCBmaWVsZCBieSBjYWxsaW5nIG1lcmdlUGFydGlhbCgpIG9mIHRoZSByZXNwb25zaWJsZVxuICogbWVzc2FnZSB0eXBlLlxuICpcbiAqIElmIGEgcmVwZWF0ZWQgZmllbGQgaXMgcHJlc2VudCBpbiB0aGUgc291cmNlLCBpdHMgdmFsdWVzIHJlcGxhY2VcbiAqIGFsbCB2YWx1ZXMgaW4gdGhlIHRhcmdldCBhcnJheSwgcmVtb3ZpbmcgZXh0cmFuZW91cyB2YWx1ZXMuXG4gKiBSZXBlYXRlZCBtZXNzYWdlIGZpZWxkcyBhcmUgY29waWVkLCBub3QgbWVyZ2VkLlxuICpcbiAqIElmIGEgbWFwIGZpZWxkIGlzIHByZXNlbnQgaW4gdGhlIHNvdXJjZSwgZW50cmllcyBhcmUgYWRkZWQgdG8gdGhlXG4gKiB0YXJnZXQgbWFwLCByZXBsYWNpbmcgZW50cmllcyB3aXRoIHRoZSBzYW1lIGtleS4gRW50cmllcyB0aGF0IG9ubHlcbiAqIGV4aXN0IGluIHRoZSB0YXJnZXQgcmVtYWluLiBFbnRyaWVzIHdpdGggbWVzc2FnZSB2YWx1ZXMgYXJlIGNvcGllZCxcbiAqIG5vdCBtZXJnZWQuXG4gKlxuICogTm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gZGlmZmVycyBmcm9tIHByb3RvYnVmIG1lcmdlIHNlbWFudGljcyxcbiAqIHdoaWNoIGFwcGVuZHMgcmVwZWF0ZWQgZmllbGRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVmbGVjdGlvbk1lcmdlUGFydGlhbChpbmZvLCB0YXJnZXQsIHNvdXJjZSkge1xuICAgIGxldCBmaWVsZFZhbHVlLCAvLyB0aGUgZmllbGQgdmFsdWUgd2UgYXJlIHdvcmtpbmcgd2l0aFxuICAgIGlucHV0ID0gc291cmNlLCBvdXRwdXQ7IC8vIHdoZXJlIHdlIHdhbnQgb3VyIGZpZWxkIHZhbHVlIHRvIGdvXG4gICAgZm9yIChsZXQgZmllbGQgb2YgaW5mby5maWVsZHMpIHtcbiAgICAgICAgbGV0IG5hbWUgPSBmaWVsZC5sb2NhbE5hbWU7XG4gICAgICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICAgICAgY29uc3QgZ3JvdXAgPSBpbnB1dFtmaWVsZC5vbmVvZl07IC8vIHRoaXMgaXMgdGhlIG9uZW9mYHMgZ3JvdXAgaW4gdGhlIHNvdXJjZVxuICAgICAgICAgICAgaWYgKChncm91cCA9PT0gbnVsbCB8fCBncm91cCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ3JvdXAub25lb2ZLaW5kKSA9PSB1bmRlZmluZWQpIHsgLy8gdGhlIHVzZXIgaXMgZnJlZSB0byBvbWl0XG4gICAgICAgICAgICAgICAgY29udGludWU7IC8vIHdlIHNraXAgdGhpcyBmaWVsZCwgYW5kIGFsbCBvdGhlciBtZW1iZXJzIHRvb1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmllbGRWYWx1ZSA9IGdyb3VwW25hbWVdOyAvLyBvdXIgdmFsdWUgY29tZXMgZnJvbSB0aGUgdGhlIG9uZW9mIGdyb3VwIG9mIHRoZSBzb3VyY2VcbiAgICAgICAgICAgIG91dHB1dCA9IHRhcmdldFtmaWVsZC5vbmVvZl07IC8vIGFuZCBvdXIgb3V0cHV0IGlzIHRoZSBvbmVvZiBncm91cCBvZiB0aGUgdGFyZ2V0XG4gICAgICAgICAgICBvdXRwdXQub25lb2ZLaW5kID0gZ3JvdXAub25lb2ZLaW5kOyAvLyBhbHdheXMgdXBkYXRlIGRpc2NyaW1pbmF0b3JcbiAgICAgICAgICAgIGlmIChmaWVsZFZhbHVlID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBvdXRwdXRbbmFtZV07IC8vIHJlbW92ZSBhbnkgZXhpc3RpbmcgdmFsdWVcbiAgICAgICAgICAgICAgICBjb250aW51ZTsgLy8gc2tpcCBmdXJ0aGVyIHdvcmsgb24gZmllbGRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGZpZWxkVmFsdWUgPSBpbnB1dFtuYW1lXTsgLy8gd2UgYXJlIHVzaW5nIHRoZSBzb3VyY2UgZGlyZWN0bHlcbiAgICAgICAgICAgIG91dHB1dCA9IHRhcmdldDsgLy8gd2Ugd2FudCBvdXIgZmllbGQgdmFsdWUgdG8gZ28gZGlyZWN0bHkgaW50byB0aGUgdGFyZ2V0XG4gICAgICAgICAgICBpZiAoZmllbGRWYWx1ZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTsgLy8gc2tpcCBmdXJ0aGVyIHdvcmsgb24gZmllbGQsIGV4aXN0aW5nIHZhbHVlIGlzIHVzZWQgYXMgaXNcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZmllbGQucmVwZWF0KVxuICAgICAgICAgICAgb3V0cHV0W25hbWVdLmxlbmd0aCA9IGZpZWxkVmFsdWUubGVuZ3RoOyAvLyByZXNpemUgdGFyZ2V0IGFycmF5IHRvIG1hdGNoIHNvdXJjZSBhcnJheVxuICAgICAgICAvLyBub3cgd2UganVzdCB3b3JrIHdpdGggYGZpZWxkVmFsdWVgIGFuZCBgb3V0cHV0YCB0byBtZXJnZSB0aGUgdmFsdWVcbiAgICAgICAgc3dpdGNoIChmaWVsZC5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIFwic2NhbGFyXCI6XG4gICAgICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICAgICAgICAgIGlmIChmaWVsZC5yZXBlYXQpXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmllbGRWYWx1ZS5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtuYW1lXVtpXSA9IGZpZWxkVmFsdWVbaV07IC8vIG5vdCBhIHJlZmVyZW5jZSB0eXBlXG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBvdXRwdXRbbmFtZV0gPSBmaWVsZFZhbHVlOyAvLyBub3QgYSByZWZlcmVuY2UgdHlwZVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1lc3NhZ2VcIjpcbiAgICAgICAgICAgICAgICBsZXQgVCA9IGZpZWxkLlQoKTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGQucmVwZWF0KVxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpZWxkVmFsdWUubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRbbmFtZV1baV0gPSBULmNyZWF0ZShmaWVsZFZhbHVlW2ldKTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChvdXRwdXRbbmFtZV0gPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0W25hbWVdID0gVC5jcmVhdGUoZmllbGRWYWx1ZSk7IC8vIG5vdGhpbmcgdG8gbWVyZ2Ugd2l0aFxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgVC5tZXJnZVBhcnRpYWwob3V0cHV0W25hbWVdLCBmaWVsZFZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgICAgICAvLyBNYXAgYW5kIHJlcGVhdGVkIGZpZWxkcyBhcmUgc2ltcGx5IG92ZXJ3cml0dGVuLCBub3QgYXBwZW5kZWQgb3IgbWVyZ2VkXG4gICAgICAgICAgICAgICAgc3dpdGNoIChmaWVsZC5WLmtpbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNjYWxhclwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXRbbmFtZV0sIGZpZWxkVmFsdWUpOyAvLyBlbGVtZW50cyBhcmUgbm90IHJlZmVyZW5jZSB0eXBlc1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJtZXNzYWdlXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgVCA9IGZpZWxkLlYuVCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgayBvZiBPYmplY3Qua2V5cyhmaWVsZFZhbHVlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRbbmFtZV1ba10gPSBULmNyZWF0ZShmaWVsZFZhbHVlW2tdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reflectionScalarDefault: function() { return /* binding */ reflectionScalarDefault; }\n/* harmony export */ });\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _reflection_long_convert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-long-convert */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js\");\n/* harmony import */ var _pb_long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pb-long */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js\");\n\n\n\n/**\n * Creates the default value for a scalar type.\n */\nfunction reflectionScalarDefault(type, longType = _reflection_info__WEBPACK_IMPORTED_MODULE_0__.LongType.STRING) {\n    switch (type) {\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return false;\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n            return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_1__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_2__.PbULong.ZERO, longType);\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            return (0,_reflection_long_convert__WEBPACK_IMPORTED_MODULE_1__.reflectionLongConvert)(_pb_long__WEBPACK_IMPORTED_MODULE_2__.PbLong.ZERO, longType);\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n            return 0.0;\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return new Uint8Array(0);\n        case _reflection_info__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1zY2FsYXItZGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ1M7QUFDdEI7QUFDNUM7QUFDQTtBQUNBO0FBQ08sa0RBQWtELHNEQUFRO0FBQ2pFO0FBQ0EsYUFBYSx3REFBVTtBQUN2QjtBQUNBLGFBQWEsd0RBQVU7QUFDdkIsYUFBYSx3REFBVTtBQUN2QixtQkFBbUIsK0VBQXFCLENBQUMsNkNBQU87QUFDaEQsYUFBYSx3REFBVTtBQUN2QixhQUFhLHdEQUFVO0FBQ3ZCLGFBQWEsd0RBQVU7QUFDdkIsbUJBQW1CLCtFQUFxQixDQUFDLDRDQUFNO0FBQy9DLGFBQWEsd0RBQVU7QUFDdkIsYUFBYSx3REFBVTtBQUN2QjtBQUNBLGFBQWEsd0RBQVU7QUFDdkI7QUFDQSxhQUFhLHdEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcHJvdG9idWYtdHMvcnVudGltZS9idWlsZC9lczIwMTUvcmVmbGVjdGlvbi1zY2FsYXItZGVmYXVsdC5qcz84ZTIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvbmdUeXBlLCBTY2FsYXJUeXBlIH0gZnJvbSBcIi4vcmVmbGVjdGlvbi1pbmZvXCI7XG5pbXBvcnQgeyByZWZsZWN0aW9uTG9uZ0NvbnZlcnQgfSBmcm9tIFwiLi9yZWZsZWN0aW9uLWxvbmctY29udmVydFwiO1xuaW1wb3J0IHsgUGJMb25nLCBQYlVMb25nIH0gZnJvbSBcIi4vcGItbG9uZ1wiO1xuLyoqXG4gKiBDcmVhdGVzIHRoZSBkZWZhdWx0IHZhbHVlIGZvciBhIHNjYWxhciB0eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVmbGVjdGlvblNjYWxhckRlZmF1bHQodHlwZSwgbG9uZ1R5cGUgPSBMb25nVHlwZS5TVFJJTkcpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkJPT0w6XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5VSU5UNjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5GSVhFRDY0OlxuICAgICAgICAgICAgcmV0dXJuIHJlZmxlY3Rpb25Mb25nQ29udmVydChQYlVMb25nLlpFUk8sIGxvbmdUeXBlKTtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLklOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0ZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5TSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gcmVmbGVjdGlvbkxvbmdDb252ZXJ0KFBiTG9uZy5aRVJPLCBsb25nVHlwZSk7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5ET1VCTEU6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5GTE9BVDpcbiAgICAgICAgICAgIHJldHVybiAwLjA7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5CWVRFUzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheSgwKTtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlNUUklORzpcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgLy8gY2FzZSBTY2FsYXJUeXBlLklOVDMyOlxuICAgICAgICAgICAgLy8gY2FzZSBTY2FsYXJUeXBlLlVJTlQzMjpcbiAgICAgICAgICAgIC8vIGNhc2UgU2NhbGFyVHlwZS5TSU5UMzI6XG4gICAgICAgICAgICAvLyBjYXNlIFNjYWxhclR5cGUuRklYRUQzMjpcbiAgICAgICAgICAgIC8vIGNhc2UgU2NhbGFyVHlwZS5TRklYRUQzMjpcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectionTypeCheck: function() { return /* binding */ ReflectionTypeCheck; }\n/* harmony export */ });\n/* harmony import */ var _reflection_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflection-info */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js\");\n/* harmony import */ var _oneof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./oneof */ \"(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/oneof.js\");\n\n\n// noinspection JSMethodCanBeStatic\nclass ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!(0,_oneof__WEBPACK_IMPORTED_MODULE_0__.isOneofGroup)(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32, depth);\n                return this.scalar(arg, _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED64:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT64:\n                switch (longType) {\n                    case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n                return argType == 'boolean';\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING:\n                return argType == 'string';\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SFIXED32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.SINT32:\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case _reflection_info__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, _reflection_info__WEBPACK_IMPORTED_MODULE_1__.LongType.STRING);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/clone-deep/index.js":
/*!******************************************!*\
  !*** ./node_modules/clone-deep/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n/**\n * Module dependenices\n */\n\nconst clone = __webpack_require__(/*! shallow-clone */ \"(app-pages-browser)/./node_modules/shallow-clone/index.js\");\nconst typeOf = __webpack_require__(/*! kind-of */ \"(app-pages-browser)/./node_modules/kind-of/index.js\");\nconst isPlainObject = __webpack_require__(/*! is-plain-object */ \"(app-pages-browser)/./node_modules/is-plain-object/index.js\");\n\nfunction cloneDeep(val, instanceClone) {\n  switch (typeOf(val)) {\n    case 'object':\n      return cloneObjectDeep(val, instanceClone);\n    case 'array':\n      return cloneArrayDeep(val, instanceClone);\n    default: {\n      return clone(val);\n    }\n  }\n}\n\nfunction cloneObjectDeep(val, instanceClone) {\n  if (typeof instanceClone === 'function') {\n    return instanceClone(val);\n  }\n  if (instanceClone || isPlainObject(val)) {\n    const res = new val.constructor();\n    for (let key in val) {\n      res[key] = cloneDeep(val[key], instanceClone);\n    }\n    return res;\n  }\n  return val;\n}\n\nfunction cloneArrayDeep(val, instanceClone) {\n  const res = new val.constructor(val.length);\n  for (let i = 0; i < val.length; i++) {\n    res[i] = cloneDeep(val[i], instanceClone);\n  }\n  return res;\n}\n\n/**\n * Expose `cloneDeep`\n */\n\nmodule.exports = cloneDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbG9uZS1kZWVwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsZ0ZBQWU7QUFDckMsZUFBZSxtQkFBTyxDQUFDLG9FQUFTO0FBQ2hDLHNCQUFzQixtQkFBTyxDQUFDLG9GQUFpQjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Nsb25lLWRlZXAvaW5kZXguanM/Yjg3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuaWNlc1xuICovXG5cbmNvbnN0IGNsb25lID0gcmVxdWlyZSgnc2hhbGxvdy1jbG9uZScpO1xuY29uc3QgdHlwZU9mID0gcmVxdWlyZSgna2luZC1vZicpO1xuY29uc3QgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJ2lzLXBsYWluLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBjbG9uZURlZXAodmFsLCBpbnN0YW5jZUNsb25lKSB7XG4gIHN3aXRjaCAodHlwZU9mKHZhbCkpIHtcbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAgcmV0dXJuIGNsb25lT2JqZWN0RGVlcCh2YWwsIGluc3RhbmNlQ2xvbmUpO1xuICAgIGNhc2UgJ2FycmF5JzpcbiAgICAgIHJldHVybiBjbG9uZUFycmF5RGVlcCh2YWwsIGluc3RhbmNlQ2xvbmUpO1xuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiBjbG9uZSh2YWwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjbG9uZU9iamVjdERlZXAodmFsLCBpbnN0YW5jZUNsb25lKSB7XG4gIGlmICh0eXBlb2YgaW5zdGFuY2VDbG9uZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBpbnN0YW5jZUNsb25lKHZhbCk7XG4gIH1cbiAgaWYgKGluc3RhbmNlQ2xvbmUgfHwgaXNQbGFpbk9iamVjdCh2YWwpKSB7XG4gICAgY29uc3QgcmVzID0gbmV3IHZhbC5jb25zdHJ1Y3RvcigpO1xuICAgIGZvciAobGV0IGtleSBpbiB2YWwpIHtcbiAgICAgIHJlc1trZXldID0gY2xvbmVEZWVwKHZhbFtrZXldLCBpbnN0YW5jZUNsb25lKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuICByZXR1cm4gdmFsO1xufVxuXG5mdW5jdGlvbiBjbG9uZUFycmF5RGVlcCh2YWwsIGluc3RhbmNlQ2xvbmUpIHtcbiAgY29uc3QgcmVzID0gbmV3IHZhbC5jb25zdHJ1Y3Rvcih2YWwubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOyBpKyspIHtcbiAgICByZXNbaV0gPSBjbG9uZURlZXAodmFsW2ldLCBpbnN0YW5jZUNsb25lKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG4vKipcbiAqIEV4cG9zZSBgY2xvbmVEZWVwYFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gY2xvbmVEZWVwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/clone-deep/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/events/events.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/is-plain-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/is-plain-object/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nvar isObject = __webpack_require__(/*! isobject */ \"(app-pages-browser)/./node_modules/isobject/index.js\");\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pcy1wbGFpbi1vYmplY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLGVBQWUsbUJBQU8sQ0FBQyxzRUFBVTs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqZWN0L2luZGV4LmpzPzkyY2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBpcy1wbGFpbi1vYmplY3QgPGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zY2hsaW5rZXJ0L2lzLXBsYWluLW9iamVjdD5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgSm9uIFNjaGxpbmtlcnQuXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCdpc29iamVjdCcpO1xuXG5mdW5jdGlvbiBpc09iamVjdE9iamVjdChvKSB7XG4gIHJldHVybiBpc09iamVjdChvKSA9PT0gdHJ1ZVxuICAgICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvKSB7XG4gIHZhciBjdG9yLHByb3Q7XG5cbiAgaWYgKGlzT2JqZWN0T2JqZWN0KG8pID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIElmIGhhcyBtb2RpZmllZCBjb25zdHJ1Y3RvclxuICBjdG9yID0gby5jb25zdHJ1Y3RvcjtcbiAgaWYgKHR5cGVvZiBjdG9yICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gZmFsc2U7XG5cbiAgLy8gSWYgaGFzIG1vZGlmaWVkIHByb3RvdHlwZVxuICBwcm90ID0gY3Rvci5wcm90b3R5cGU7XG4gIGlmIChpc09iamVjdE9iamVjdChwcm90KSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcblxuICAvLyBJZiBjb25zdHJ1Y3RvciBkb2VzIG5vdCBoYXZlIGFuIE9iamVjdC1zcGVjaWZpYyBtZXRob2RcbiAgaWYgKHByb3QuaGFzT3duUHJvcGVydHkoJ2lzUHJvdG90eXBlT2YnKSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBNb3N0IGxpa2VseSBhIHBsYWluIE9iamVjdFxuICByZXR1cm4gdHJ1ZTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/is-plain-object/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/isobject/index.js":
/*!****************************************!*\
  !*** ./node_modules/isobject/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pc29iamVjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pc29iamVjdC9pbmRleC5qcz9hN2JmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogaXNvYmplY3QgPGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zY2hsaW5rZXJ0L2lzb2JqZWN0PlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE3LCBKb24gU2NobGlua2VydC5cbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB2YWwgIT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0JyAmJiBBcnJheS5pc0FycmF5KHZhbCkgPT09IGZhbHNlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/isobject/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/kind-of/index.js":
/*!***************************************!*\
  !*** ./node_modules/kind-of/index.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9raW5kLW9mL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9raW5kLW9mL2luZGV4LmpzPzIyYWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBraW5kT2YodmFsKSB7XG4gIGlmICh2YWwgPT09IHZvaWQgMCkgcmV0dXJuICd1bmRlZmluZWQnO1xuICBpZiAodmFsID09PSBudWxsKSByZXR1cm4gJ251bGwnO1xuXG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcbiAgaWYgKHR5cGUgPT09ICdib29sZWFuJykgcmV0dXJuICdib29sZWFuJztcbiAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSByZXR1cm4gJ3N0cmluZyc7XG4gIGlmICh0eXBlID09PSAnbnVtYmVyJykgcmV0dXJuICdudW1iZXInO1xuICBpZiAodHlwZSA9PT0gJ3N5bWJvbCcpIHJldHVybiAnc3ltYm9sJztcbiAgaWYgKHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gaXNHZW5lcmF0b3JGbih2YWwpID8gJ2dlbmVyYXRvcmZ1bmN0aW9uJyA6ICdmdW5jdGlvbic7XG4gIH1cblxuICBpZiAoaXNBcnJheSh2YWwpKSByZXR1cm4gJ2FycmF5JztcbiAgaWYgKGlzQnVmZmVyKHZhbCkpIHJldHVybiAnYnVmZmVyJztcbiAgaWYgKGlzQXJndW1lbnRzKHZhbCkpIHJldHVybiAnYXJndW1lbnRzJztcbiAgaWYgKGlzRGF0ZSh2YWwpKSByZXR1cm4gJ2RhdGUnO1xuICBpZiAoaXNFcnJvcih2YWwpKSByZXR1cm4gJ2Vycm9yJztcbiAgaWYgKGlzUmVnZXhwKHZhbCkpIHJldHVybiAncmVnZXhwJztcblxuICBzd2l0Y2ggKGN0b3JOYW1lKHZhbCkpIHtcbiAgICBjYXNlICdTeW1ib2wnOiByZXR1cm4gJ3N5bWJvbCc7XG4gICAgY2FzZSAnUHJvbWlzZSc6IHJldHVybiAncHJvbWlzZSc7XG5cbiAgICAvLyBTZXQsIE1hcCwgV2Vha1NldCwgV2Vha01hcFxuICAgIGNhc2UgJ1dlYWtNYXAnOiByZXR1cm4gJ3dlYWttYXAnO1xuICAgIGNhc2UgJ1dlYWtTZXQnOiByZXR1cm4gJ3dlYWtzZXQnO1xuICAgIGNhc2UgJ01hcCc6IHJldHVybiAnbWFwJztcbiAgICBjYXNlICdTZXQnOiByZXR1cm4gJ3NldCc7XG5cbiAgICAvLyA4LWJpdCB0eXBlZCBhcnJheXNcbiAgICBjYXNlICdJbnQ4QXJyYXknOiByZXR1cm4gJ2ludDhhcnJheSc7XG4gICAgY2FzZSAnVWludDhBcnJheSc6IHJldHVybiAndWludDhhcnJheSc7XG4gICAgY2FzZSAnVWludDhDbGFtcGVkQXJyYXknOiByZXR1cm4gJ3VpbnQ4Y2xhbXBlZGFycmF5JztcblxuICAgIC8vIDE2LWJpdCB0eXBlZCBhcnJheXNcbiAgICBjYXNlICdJbnQxNkFycmF5JzogcmV0dXJuICdpbnQxNmFycmF5JztcbiAgICBjYXNlICdVaW50MTZBcnJheSc6IHJldHVybiAndWludDE2YXJyYXknO1xuXG4gICAgLy8gMzItYml0IHR5cGVkIGFycmF5c1xuICAgIGNhc2UgJ0ludDMyQXJyYXknOiByZXR1cm4gJ2ludDMyYXJyYXknO1xuICAgIGNhc2UgJ1VpbnQzMkFycmF5JzogcmV0dXJuICd1aW50MzJhcnJheSc7XG4gICAgY2FzZSAnRmxvYXQzMkFycmF5JzogcmV0dXJuICdmbG9hdDMyYXJyYXknO1xuICAgIGNhc2UgJ0Zsb2F0NjRBcnJheSc6IHJldHVybiAnZmxvYXQ2NGFycmF5JztcbiAgfVxuXG4gIGlmIChpc0dlbmVyYXRvck9iaih2YWwpKSB7XG4gICAgcmV0dXJuICdnZW5lcmF0b3InO1xuICB9XG5cbiAgLy8gTm9uLXBsYWluIG9iamVjdHNcbiAgdHlwZSA9IHRvU3RyaW5nLmNhbGwodmFsKTtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnW29iamVjdCBPYmplY3RdJzogcmV0dXJuICdvYmplY3QnO1xuICAgIC8vIGl0ZXJhdG9yc1xuICAgIGNhc2UgJ1tvYmplY3QgTWFwIEl0ZXJhdG9yXSc6IHJldHVybiAnbWFwaXRlcmF0b3InO1xuICAgIGNhc2UgJ1tvYmplY3QgU2V0IEl0ZXJhdG9yXSc6IHJldHVybiAnc2V0aXRlcmF0b3InO1xuICAgIGNhc2UgJ1tvYmplY3QgU3RyaW5nIEl0ZXJhdG9yXSc6IHJldHVybiAnc3RyaW5naXRlcmF0b3InO1xuICAgIGNhc2UgJ1tvYmplY3QgQXJyYXkgSXRlcmF0b3JdJzogcmV0dXJuICdhcnJheWl0ZXJhdG9yJztcbiAgfVxuXG4gIC8vIG90aGVyXG4gIHJldHVybiB0eXBlLnNsaWNlKDgsIC0xKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccy9nLCAnJyk7XG59O1xuXG5mdW5jdGlvbiBjdG9yTmFtZSh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwuY29uc3RydWN0b3IgPT09ICdmdW5jdGlvbicgPyB2YWwuY29uc3RydWN0b3IubmFtZSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KSByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpO1xuICByZXR1cm4gdmFsIGluc3RhbmNlb2YgQXJyYXk7XG59XG5cbmZ1bmN0aW9uIGlzRXJyb3IodmFsKSB7XG4gIHJldHVybiB2YWwgaW5zdGFuY2VvZiBFcnJvciB8fCAodHlwZW9mIHZhbC5tZXNzYWdlID09PSAnc3RyaW5nJyAmJiB2YWwuY29uc3RydWN0b3IgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5zdGFja1RyYWNlTGltaXQgPT09ICdudW1iZXInKTtcbn1cblxuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB0eXBlb2YgdmFsLnRvRGF0ZVN0cmluZyA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiB2YWwuZ2V0RGF0ZSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiB2YWwuc2V0RGF0ZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNSZWdleHAodmFsKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBSZWdFeHApIHJldHVybiB0cnVlO1xuICByZXR1cm4gdHlwZW9mIHZhbC5mbGFncyA9PT0gJ3N0cmluZydcbiAgICAmJiB0eXBlb2YgdmFsLmlnbm9yZUNhc2UgPT09ICdib29sZWFuJ1xuICAgICYmIHR5cGVvZiB2YWwubXVsdGlsaW5lID09PSAnYm9vbGVhbidcbiAgICAmJiB0eXBlb2YgdmFsLmdsb2JhbCA9PT0gJ2Jvb2xlYW4nO1xufVxuXG5mdW5jdGlvbiBpc0dlbmVyYXRvckZuKG5hbWUsIHZhbCkge1xuICByZXR1cm4gY3Rvck5hbWUobmFtZSkgPT09ICdHZW5lcmF0b3JGdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzR2VuZXJhdG9yT2JqKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbC50aHJvdyA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiB2YWwucmV0dXJuID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIHZhbC5uZXh0ID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc0FyZ3VtZW50cyh2YWwpIHtcbiAgdHJ5IHtcbiAgICBpZiAodHlwZW9mIHZhbC5sZW5ndGggPT09ICdudW1iZXInICYmIHR5cGVvZiB2YWwuY2FsbGVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChlcnIubWVzc2FnZS5pbmRleE9mKCdjYWxsZWUnKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogSWYgeW91IG5lZWQgdG8gc3VwcG9ydCBTYWZhcmkgNS03ICg4LTEwIHlyLW9sZCBicm93c2VyKSxcbiAqIHRha2UgYSBsb29rIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvaXMtYnVmZmVyXG4gKi9cblxuZnVuY3Rpb24gaXNCdWZmZXIodmFsKSB7XG4gIGlmICh2YWwuY29uc3RydWN0b3IgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIodmFsKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/kind-of/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/shallow-clone/index.js":
/*!*********************************************!*\
  !*** ./node_modules/shallow-clone/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nconst valueOf = Symbol.prototype.valueOf;\nconst typeOf = __webpack_require__(/*! kind-of */ \"(app-pages-browser)/./node_modules/kind-of/index.js\");\n\nfunction clone(val, deep) {\n  switch (typeOf(val)) {\n    case 'array':\n      return val.slice();\n    case 'object':\n      return Object.assign({}, val);\n    case 'date':\n      return new val.constructor(Number(val));\n    case 'map':\n      return new Map(val);\n    case 'set':\n      return new Set(val);\n    case 'buffer':\n      return cloneBuffer(val);\n    case 'symbol':\n      return cloneSymbol(val);\n    case 'arraybuffer':\n      return cloneArrayBuffer(val);\n    case 'float32array':\n    case 'float64array':\n    case 'int16array':\n    case 'int32array':\n    case 'int8array':\n    case 'uint16array':\n    case 'uint32array':\n    case 'uint8clampedarray':\n    case 'uint8array':\n      return cloneTypedArray(val);\n    case 'regexp':\n      return cloneRegExp(val);\n    case 'error':\n      return Object.create(val);\n    default: {\n      return val;\n    }\n  }\n}\n\nfunction cloneRegExp(val) {\n  const flags = val.flags !== void 0 ? val.flags : (/\\w+$/.exec(val) || void 0);\n  const re = new val.constructor(val.source, flags);\n  re.lastIndex = val.lastIndex;\n  return re;\n}\n\nfunction cloneArrayBuffer(val) {\n  const res = new val.constructor(val.byteLength);\n  new Uint8Array(res).set(new Uint8Array(val));\n  return res;\n}\n\nfunction cloneTypedArray(val, deep) {\n  return new val.constructor(val.buffer, val.byteOffset, val.length);\n}\n\nfunction cloneBuffer(val) {\n  const len = val.length;\n  const buf = Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : Buffer.from(len);\n  val.copy(buf);\n  return buf;\n}\n\nfunction cloneSymbol(val) {\n  return valueOf ? Object(valueOf.call(val)) : {};\n}\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zaGFsbG93LWNsb25lL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxlQUFlLG1CQUFPLENBQUMsb0VBQVM7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLE1BQU0sZUFBZSxNQUFNLG9CQUFvQixNQUFNO0FBQ25FO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zaGFsbG93LWNsb25lL2luZGV4LmpzPzkzOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBzaGFsbG93LWNsb25lIDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9zaGFsbG93LWNsb25lPlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBKb24gU2NobGlua2VydC5cbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZhbHVlT2YgPSBTeW1ib2wucHJvdG90eXBlLnZhbHVlT2Y7XG5jb25zdCB0eXBlT2YgPSByZXF1aXJlKCdraW5kLW9mJyk7XG5cbmZ1bmN0aW9uIGNsb25lKHZhbCwgZGVlcCkge1xuICBzd2l0Y2ggKHR5cGVPZih2YWwpKSB7XG4gICAgY2FzZSAnYXJyYXknOlxuICAgICAgcmV0dXJuIHZhbC5zbGljZSgpO1xuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgdmFsKTtcbiAgICBjYXNlICdkYXRlJzpcbiAgICAgIHJldHVybiBuZXcgdmFsLmNvbnN0cnVjdG9yKE51bWJlcih2YWwpKTtcbiAgICBjYXNlICdtYXAnOlxuICAgICAgcmV0dXJuIG5ldyBNYXAodmFsKTtcbiAgICBjYXNlICdzZXQnOlxuICAgICAgcmV0dXJuIG5ldyBTZXQodmFsKTtcbiAgICBjYXNlICdidWZmZXInOlxuICAgICAgcmV0dXJuIGNsb25lQnVmZmVyKHZhbCk7XG4gICAgY2FzZSAnc3ltYm9sJzpcbiAgICAgIHJldHVybiBjbG9uZVN5bWJvbCh2YWwpO1xuICAgIGNhc2UgJ2FycmF5YnVmZmVyJzpcbiAgICAgIHJldHVybiBjbG9uZUFycmF5QnVmZmVyKHZhbCk7XG4gICAgY2FzZSAnZmxvYXQzMmFycmF5JzpcbiAgICBjYXNlICdmbG9hdDY0YXJyYXknOlxuICAgIGNhc2UgJ2ludDE2YXJyYXknOlxuICAgIGNhc2UgJ2ludDMyYXJyYXknOlxuICAgIGNhc2UgJ2ludDhhcnJheSc6XG4gICAgY2FzZSAndWludDE2YXJyYXknOlxuICAgIGNhc2UgJ3VpbnQzMmFycmF5JzpcbiAgICBjYXNlICd1aW50OGNsYW1wZWRhcnJheSc6XG4gICAgY2FzZSAndWludDhhcnJheSc6XG4gICAgICByZXR1cm4gY2xvbmVUeXBlZEFycmF5KHZhbCk7XG4gICAgY2FzZSAncmVnZXhwJzpcbiAgICAgIHJldHVybiBjbG9uZVJlZ0V4cCh2YWwpO1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHZhbCk7XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVSZWdFeHAodmFsKSB7XG4gIGNvbnN0IGZsYWdzID0gdmFsLmZsYWdzICE9PSB2b2lkIDAgPyB2YWwuZmxhZ3MgOiAoL1xcdyskLy5leGVjKHZhbCkgfHwgdm9pZCAwKTtcbiAgY29uc3QgcmUgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5zb3VyY2UsIGZsYWdzKTtcbiAgcmUubGFzdEluZGV4ID0gdmFsLmxhc3RJbmRleDtcbiAgcmV0dXJuIHJlO1xufVxuXG5mdW5jdGlvbiBjbG9uZUFycmF5QnVmZmVyKHZhbCkge1xuICBjb25zdCByZXMgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5ieXRlTGVuZ3RoKTtcbiAgbmV3IFVpbnQ4QXJyYXkocmVzKS5zZXQobmV3IFVpbnQ4QXJyYXkodmFsKSk7XG4gIHJldHVybiByZXM7XG59XG5cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh2YWwsIGRlZXApIHtcbiAgcmV0dXJuIG5ldyB2YWwuY29uc3RydWN0b3IodmFsLmJ1ZmZlciwgdmFsLmJ5dGVPZmZzZXQsIHZhbC5sZW5ndGgpO1xufVxuXG5mdW5jdGlvbiBjbG9uZUJ1ZmZlcih2YWwpIHtcbiAgY29uc3QgbGVuID0gdmFsLmxlbmd0aDtcbiAgY29uc3QgYnVmID0gQnVmZmVyLmFsbG9jVW5zYWZlID8gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbikgOiBCdWZmZXIuZnJvbShsZW4pO1xuICB2YWwuY29weShidWYpO1xuICByZXR1cm4gYnVmO1xufVxuXG5mdW5jdGlvbiBjbG9uZVN5bWJvbCh2YWwpIHtcbiAgcmV0dXJuIHZhbHVlT2YgPyBPYmplY3QodmFsdWVPZi5jYWxsKHZhbCkpIDoge307XG59XG5cbi8qKlxuICogRXhwb3NlIGBjbG9uZWBcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb25lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/shallow-clone/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/native.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  randomUUID\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBLCtEQUFlO0FBQ2Y7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzPzU4OTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJhbmRvbVVVSUQgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8ucmFuZG9tVVVJRCAmJiBjcnlwdG8ucmFuZG9tVVVJRC5iaW5kKGNyeXB0byk7XG5leHBvcnQgZGVmYXVsdCB7XG4gIHJhbmRvbVVVSURcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWMsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRyw4RUFBOEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9yZWdleC5qcz8wYjUyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IC9eKD86WzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzEtOF1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn18MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwfGZmZmZmZmZmLWZmZmYtZmZmZi1mZmZmLWZmZmZmZmZmZmZmZikkL2k7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rng; }\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcm5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanM/YWI5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cblxudmFyIGdldFJhbmRvbVZhbHVlcztcbnZhciBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJuZygpIHtcbiAgLy8gbGF6eSBsb2FkIHNvIHRoYXQgZW52aXJvbm1lbnRzIHRoYXQgbmVlZCB0byBwb2x5ZmlsbCBoYXZlIGEgY2hhbmNlIHRvIGRvIHNvXG4gIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvIGltcGxlbWVudGF0aW9uLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0byk7XG4gICAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY3J5cHRvLmdldFJhbmRvbVZhbHVlcygpIG5vdCBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQjZ2V0cmFuZG9tdmFsdWVzLW5vdC1zdXBwb3J0ZWQnKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unsafeStringify: function() { return /* binding */ unsafeStringify; }\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sd0RBQVE7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUFlLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9zdHJpbmdpZnkuanM/Yjc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5cbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xudmFyIGJ5dGVUb0hleCA9IFtdO1xuZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc2xpY2UoMSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIC8vXG4gIC8vIE5vdGUgdG8gZnV0dXJlLXNlbGY6IE5vLCB5b3UgY2FuJ3QgcmVtb3ZlIHRoZSBgdG9Mb3dlckNhc2UoKWAgY2FsbC5cbiAgLy8gUkVGOiBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC82NzcjaXNzdWVjb21tZW50LTE3NTczNTEzNTFcbiAgcmV0dXJuIChieXRlVG9IZXhbYXJyW29mZnNldCArIDBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDNdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA1XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDZdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgN11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA4XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDldXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTNdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTVdXSkudG9Mb3dlckNhc2UoKTtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgdmFyIHV1aWQgPSB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQpO1xuICAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG4gIHJldHVybiB1dWlkO1xufVxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n    return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFpQztBQUNOO0FBQ3NCO0FBQ2pEO0FBQ0EsTUFBTSxrREFBTTtBQUNaLFdBQVcsa0RBQU07QUFDakI7QUFDQTtBQUNBLCtDQUErQywrQ0FBRzs7QUFFbEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4REFBZTtBQUN4QjtBQUNBLCtEQUFlLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92NC5qcz84OTVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuYXRpdmUgZnJvbSAnLi9uYXRpdmUuanMnO1xuaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgeyB1bnNhZmVTdHJpbmdpZnkgfSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICBpZiAobmF0aXZlLnJhbmRvbVVVSUQgJiYgIWJ1ZiAmJiAhb3B0aW9ucykge1xuICAgIHJldHVybiBuYXRpdmUucmFuZG9tVVVJRCgpO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7XG5cbiAgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwO1xuXG4gIC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICBidWZbb2Zmc2V0ICsgaV0gPSBybmRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gYnVmO1xuICB9XG4gIHJldHVybiB1bnNhZmVTdHJpbmdpZnkocm5kcyk7XG59XG5leHBvcnQgZGVmYXVsdCB2NDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js\");\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7QUFBK0I7QUFDL0I7QUFDQSxxQ0FBcUMsaURBQUs7QUFDMUM7QUFDQSwrREFBZSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanM/NmNlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUkVHRVggZnJvbSAnLi9yZWdleC5qcyc7XG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ConversationInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ConversationInterface */ \"(app-pages-browser)/./components/ConversationInterface.tsx\");\n/* harmony import */ var _components_ChatDisplay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ChatDisplay */ \"(app-pages-browser)/./components/ChatDisplay.tsx\");\n/* harmony import */ var _components_ToolMonitor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ToolMonitor */ \"(app-pages-browser)/./components/ToolMonitor.tsx\");\n/* harmony import */ var _components_ProductInfoMonitor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ProductInfoMonitor */ \"(app-pages-browser)/./components/ProductInfoMonitor.tsx\");\n/* harmony import */ var _lib_pipecatRTVI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/pipecatRTVI */ \"(app-pages-browser)/./lib/pipecatRTVI.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Home() {\n    _s();\n    const { isConnected, isInConversation, messages, connectionStatus, userId, setUserId, startConversation, stopConversation, connect, disconnect } = (0,_lib_pipecatRTVI__WEBPACK_IMPORTED_MODULE_6__.usePipecatClient)();\n    const [tempUserId, setTempUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handleSetUserId = ()=>{\n        if (tempUserId.trim()) {\n            setUserId(tempUserId.trim());\n        }\n    };\n    const handleConnect = ()=>{\n        if (!userId) {\n            alert(\"Please set a User ID first\");\n            return;\n        }\n        connect();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-4xl mx-auto\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center mb-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-4xl font-bold text-gray-800 mb-2\",\n                            suppressHydrationWarning: true,\n                            children: \"FunVoice AI Assistant\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 44,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-600\",\n                            children: \"Live conversational AI powered by Pipecat with Multi-User Support\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 47,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"inline-block px-3 py-1 rounded-full text-sm font-medium \".concat(isConnected ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"),\n                                    children: connectionStatus\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 51,\n                                    columnNumber: 13\n                                }, this),\n                                userId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"ml-2 inline-block px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\",\n                                    children: [\n                                        \"User: \",\n                                        userId\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 59,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 50,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                    lineNumber: 43,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white rounded-xl shadow-lg p-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-xl font-semibold mb-4 text-gray-800\",\n                                    suppressHydrationWarning: true,\n                                    children: \"Conversation\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 69,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ChatDisplay__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    messages: messages\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 68,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white rounded-xl shadow-lg p-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-xl font-semibold mb-4 text-gray-800\",\n                                    children: \"Live Conversation\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 77,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-3 text-gray-800\",\n                                            children: \"User ID Setup\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 83,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"text\",\n                                                    value: tempUserId,\n                                                    onChange: (e)=>setTempUserId(e.target.value),\n                                                    placeholder: \"Enter your User ID\",\n                                                    className: \"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                                                    onKeyPress: (e)=>e.key === \"Enter\" && handleSetUserId()\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 87,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handleSetUserId,\n                                                    className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors\",\n                                                    children: \"Set ID\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 95,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 86,\n                                            columnNumber: 15\n                                        }, this),\n                                        userId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm text-green-600 mt-2\",\n                                            children: [\n                                                \"✅ User ID set: \",\n                                                userId\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 103,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-xs text-gray-500 mt-2\",\n                                            children: \"Each user needs a unique ID for isolated conversations and data\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 107,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 82,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-6\",\n                                    children: !isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleConnect,\n                                        disabled: !userId,\n                                        className: \"w-full font-semibold py-3 px-4 rounded-lg transition-colors \".concat(userId ? \"bg-blue-600 hover:bg-blue-700 text-white\" : \"bg-gray-400 text-gray-200 cursor-not-allowed\"),\n                                        children: userId ? \"Connect to AI Assistant\" : \"Set User ID First\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                        lineNumber: 115,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: disconnect,\n                                        className: \"w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-4 rounded-lg transition-colors\",\n                                        children: \"Disconnect\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                        lineNumber: 127,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 113,\n                                    columnNumber: 13\n                                }, this),\n                                isConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ConversationInterface__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    isConnected: isConnected,\n                                    isInConversation: isInConversation,\n                                    onStartConversation: startConversation,\n                                    onStopConversation: stopConversation\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 138,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mt-6 pt-6 border-t border-gray-200\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-4 text-gray-800\",\n                                            children: \"Available Voice Commands\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 148,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"space-y-2 text-sm text-gray-600\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        \"\\uD83C\\uDFAF \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Navigation:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                            lineNumber: 152,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        ' \"Navigate to email list\", \"Show home page\"'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 152,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        \"\\uD83D\\uDCB0 \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Product Info:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                            lineNumber: 153,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        ' \"Find price for widgets in Germany\"'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 153,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        \"\\uD83D\\uDCCB \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Quotations:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                            lineNumber: 154,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        ' \"Add product to quotation\", \"Save quotation\"'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 154,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: [\n                                                        \"\\uD83D\\uDCE7 \",\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                            children: \"Client Info:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                            lineNumber: 155,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        ' \"Update client information\"'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                                    lineNumber: 155,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 151,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm text-gray-500 mt-3\",\n                                            children: \"All commands are user-specific - only you will see your data and results\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 157,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 147,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 76,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white rounded-xl shadow-lg p-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-xl font-semibold mb-4 text-gray-800\",\n                                    children: \"Tool Commands Monitor\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 167,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ToolMonitor__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    userId: userId\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 170,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 166,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white rounded-xl shadow-lg p-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-xl font-semibold mb-4 text-gray-800\",\n                                    children: \"Product Info Monitor\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 174,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ProductInfoMonitor__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                    userId: userId\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 177,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 173,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                    lineNumber: 165,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-8 bg-white rounded-xl shadow-lg p-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-xl font-semibold mb-4 text-gray-800\",\n                            children: \"How to Use FunVoice (Multi-User)\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 183,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            className: \"space-y-2 text-gray-600\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-green-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 188,\n                                            columnNumber: 15\n                                        }, this),\n                                        \"Set your unique User ID (required for multi-user support)\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 187,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-green-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 192,\n                                            columnNumber: 15\n                                        }, this),\n                                        'Click \"Connect\" to establish connection with the AI assistant'\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 191,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-green-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 196,\n                                            columnNumber: 15\n                                        }, this),\n                                        'Click \"Start Conversation\" to begin live voice chat'\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 195,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-green-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 200,\n                                            columnNumber: 15\n                                        }, this),\n                                        \"Speak naturally - the AI will listen and respond in real-time\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 199,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-green-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 204,\n                                            columnNumber: 15\n                                        }, this),\n                                        \"Use voice commands for navigation, product info, and quotations\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 203,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-blue-500 rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 208,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                            children: \"Multi-User:\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 209,\n                                            columnNumber: 15\n                                        }, this),\n                                        \" Each user gets isolated data and commands\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 207,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 186,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-6 p-4 bg-blue-50 rounded-lg\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"font-semibold text-blue-800 mb-2\",\n                                    children: \"Multi-User Benefits:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 214,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                    className: \"text-sm text-blue-700 space-y-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: \"• Each user's product searches are private\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 216,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: \"• Navigation commands only affect your session\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 217,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: \"• Quotations are user-specific\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 218,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            children: \"• Multiple users can use the system simultaneously\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                            lineNumber: 219,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                                    lineNumber: 215,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                            lineNumber: 213,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n                    lineNumber: 182,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n            lineNumber: 42,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/app/page.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"rHJuDx0BRRcKbpHc7voJLOvr9OQ=\", false, function() {\n    return [\n        _lib_pipecatRTVI__WEBPACK_IMPORTED_MODULE_6__.usePipecatClient\n    ];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ChatDisplay.tsx":
/*!************************************!*\
  !*** ./components/ChatDisplay.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatDisplay; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction ChatDisplay(param) {\n    let { messages } = param;\n    _s();\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const scrollToBottom = ()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        scrollToBottom();\n    }, [\n        messages\n    ]);\n    const formatTime = (timestamp)=>{\n        return timestamp.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n        });\n    };\n    const getMessageStyles = (type)=>{\n        switch(type){\n            case \"user\":\n                return \"bg-blue-500 text-white ml-auto\";\n            case \"assistant\":\n                return \"bg-green-100 text-green-800 mr-auto\";\n            case \"system\":\n                return \"bg-gray-100 text-gray-600 mx-auto text-center text-sm\";\n            case \"error\":\n                return \"bg-red-100 text-red-800 mx-auto text-center\";\n            default:\n                return \"bg-gray-100 text-gray-800\";\n        }\n    };\n    const getMessageIcon = (type, isAudio)=>{\n        if (isAudio && type === \"user\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"w-4 h-4 mr-2\",\n                fill: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    d: \"M12 2C13.1 2 14 2.9 14 4V12C14 13.1 13.1 14 12 14C10.9 14 10 13.1 10 12V4C10 2.9 10.9 2 12 2M19 12V14C19 17.3 16.3 20 13 20V22H11V20C7.7 20 5 17.3 5 14V12H7V14C7 16.2 8.8 18 11 18H13C15.2 18 17 16.2 17 14V12H19Z\"\n                }, void 0, false, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                    lineNumber: 51,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                lineNumber: 50,\n                columnNumber: 9\n            }, this);\n        }\n        if (type === \"assistant\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"w-4 h-4 mr-2\",\n                fill: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    d: \"M12,2A2,2 0 0,1 14,4C14,4.74 13.6,5.39 13,5.73V7A7,7 0 0,1 20,14H22A1,1 0 0,1 23,15V18A1,1 0 0,1 22,19H21V20A2,2 0 0,1 19,22H5A2,2 0 0,1 3,20V19H2A1,1 0 0,1 1,18V15A1,1 0 0,1 2,14H4A7,7 0 0,1 11,7V5.73C10.4,5.39 10,4.74 10,4A2,2 0 0,1 12,2M7.5,13A0.5,0.5 0 0,0 7,13.5A0.5,0.5 0 0,0 7.5,14A0.5,0.5 0 0,0 8,13.5A0.5,0.5 0 0,0 7.5,13M16.5,13A0.5,0.5 0 0,0 16,13.5A0.5,0.5 0 0,0 16.5,14A0.5,0.5 0 0,0 17,13.5A0.5,0.5 0 0,0 16.5,13Z\"\n                }, void 0, false, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                    lineNumber: 59,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                lineNumber: 58,\n                columnNumber: 9\n            }, this);\n        }\n        return null;\n    };\n    if (messages.length === 0) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"h-96 flex items-center justify-center text-gray-500 bg-gray-50 rounded-lg\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"w-12 h-12 mx-auto mb-4 opacity-50\",\n                        fill: \"currentColor\",\n                        viewBox: \"0 0 24 24\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M11,7V13H13V7H11M11,15V17H13V15H11Z\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                            lineNumber: 72,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"No messages yet\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                        lineNumber: 74,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm mt-1\",\n                        children: \"Start a conversation by recording or typing a message\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                        lineNumber: 75,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                lineNumber: 70,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n            lineNumber: 69,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"h-96 overflow-y-auto border border-gray-200 rounded-lg p-4 space-y-3\",\n        children: [\n            messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-xs p-3 rounded-lg \".concat(getMessageStyles(message.type)),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-start\",\n                        children: [\n                            getMessageIcon(message.type, message.isAudio),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm whitespace-pre-wrap break-words\",\n                                        children: message.content\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                                        lineNumber: 91,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-xs opacity-70 mt-1\",\n                                        children: formatTime(message.timestamp)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                                        lineNumber: 94,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                                lineNumber: 90,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 11\n                    }, this)\n                }, message.id, false, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                    lineNumber: 84,\n                    columnNumber: 9\n                }, this)),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: messagesEndRef\n            }, void 0, false, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n                lineNumber: 101,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ChatDisplay.tsx\",\n        lineNumber: 82,\n        columnNumber: 5\n    }, this);\n}\n_s(ChatDisplay, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvQ2hhdERpc3BsYXkudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUV5QztBQWMxQixTQUFTRSxZQUFZLEtBQThCO1FBQTlCLEVBQUVDLFFBQVEsRUFBb0IsR0FBOUI7O0lBQ2xDLE1BQU1DLGlCQUFpQkgsNkNBQU1BLENBQWlCO0lBRTlDLE1BQU1JLGlCQUFpQjtZQUNyQkQ7U0FBQUEsMEJBQUFBLGVBQWVFLE9BQU8sY0FBdEJGLDhDQUFBQSx3QkFBd0JHLGNBQWMsQ0FBQztZQUFFQyxVQUFVO1FBQVM7SUFDOUQ7SUFFQVIsZ0RBQVNBLENBQUM7UUFDUks7SUFDRixHQUFHO1FBQUNGO0tBQVM7SUFFYixNQUFNTSxhQUFhLENBQUNDO1FBQ2xCLE9BQU9BLFVBQVVDLGtCQUFrQixDQUFDLEVBQUUsRUFBRTtZQUFFQyxNQUFNO1lBQVdDLFFBQVE7UUFBVTtJQUMvRTtJQUVBLE1BQU1DLG1CQUFtQixDQUFDQztRQUN4QixPQUFRQTtZQUNOLEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNUO2dCQUNFLE9BQU87UUFDWDtJQUNGO0lBRUEsTUFBTUMsaUJBQWlCLENBQUNELE1BQWNFO1FBQ3BDLElBQUlBLFdBQVdGLFNBQVMsUUFBUTtZQUM5QixxQkFDRSw4REFBQ0c7Z0JBQUlDLFdBQVU7Z0JBQWVDLE1BQUs7Z0JBQWVDLFNBQVE7MEJBQ3hELDRFQUFDQztvQkFBS0MsR0FBRTs7Ozs7Ozs7Ozs7UUFHZDtRQUVBLElBQUlSLFNBQVMsYUFBYTtZQUN4QixxQkFDRSw4REFBQ0c7Z0JBQUlDLFdBQVU7Z0JBQWVDLE1BQUs7Z0JBQWVDLFNBQVE7MEJBQ3hELDRFQUFDQztvQkFBS0MsR0FBRTs7Ozs7Ozs7Ozs7UUFHZDtRQUVBLE9BQU87SUFDVDtJQUVBLElBQUlwQixTQUFTcUIsTUFBTSxLQUFLLEdBQUc7UUFDekIscUJBQ0UsOERBQUNDO1lBQUlOLFdBQVU7c0JBQ2IsNEVBQUNNO2dCQUFJTixXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7d0JBQW9DQyxNQUFLO3dCQUFlQyxTQUFRO2tDQUM3RSw0RUFBQ0M7NEJBQUtDLEdBQUU7Ozs7Ozs7Ozs7O2tDQUVWLDhEQUFDRztrQ0FBRTs7Ozs7O2tDQUNILDhEQUFDQTt3QkFBRVAsV0FBVTtrQ0FBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFJcEM7SUFFQSxxQkFDRSw4REFBQ007UUFBSU4sV0FBVTs7WUFDWmhCLFNBQVN3QixHQUFHLENBQUMsQ0FBQ0Msd0JBQ2IsOERBQUNIO29CQUVDTixXQUFXLDJCQUEwRCxPQUEvQkwsaUJBQWlCYyxRQUFRYixJQUFJOzhCQUVuRSw0RUFBQ1U7d0JBQUlOLFdBQVU7OzRCQUNaSCxlQUFlWSxRQUFRYixJQUFJLEVBQUVhLFFBQVFYLE9BQU87MENBQzdDLDhEQUFDUTtnQ0FBSU4sV0FBVTs7a0RBQ2IsOERBQUNPO3dDQUFFUCxXQUFVO2tEQUNWUyxRQUFRQyxPQUFPOzs7Ozs7a0RBRWxCLDhEQUFDSDt3Q0FBRVAsV0FBVTtrREFDVlYsV0FBV21CLFFBQVFsQixTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7bUJBVjlCa0IsUUFBUUUsRUFBRTs7Ozs7MEJBZ0JuQiw4REFBQ0w7Z0JBQUlNLEtBQUszQjs7Ozs7Ozs7Ozs7O0FBR2hCO0dBdkZ3QkY7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9DaGF0RGlzcGxheS50c3g/MzAxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcbiAgaWQ6IHN0cmluZ1xuICB0eXBlOiAndXNlcicgfCAnYXNzaXN0YW50JyB8ICdzeXN0ZW0nIHwgJ2Vycm9yJ1xuICBjb250ZW50OiBzdHJpbmdcbiAgdGltZXN0YW1wOiBEYXRlXG4gIGlzQXVkaW8/OiBib29sZWFuXG59XG5cbmludGVyZmFjZSBDaGF0RGlzcGxheVByb3BzIHtcbiAgbWVzc2FnZXM6IE1lc3NhZ2VbXVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDaGF0RGlzcGxheSh7IG1lc3NhZ2VzIH06IENoYXREaXNwbGF5UHJvcHMpIHtcbiAgY29uc3QgbWVzc2FnZXNFbmRSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpXG5cbiAgY29uc3Qgc2Nyb2xsVG9Cb3R0b20gPSAoKSA9PiB7XG4gICAgbWVzc2FnZXNFbmRSZWYuY3VycmVudD8uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcgfSlcbiAgfVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2Nyb2xsVG9Cb3R0b20oKVxuICB9LCBbbWVzc2FnZXNdKVxuXG4gIGNvbnN0IGZvcm1hdFRpbWUgPSAodGltZXN0YW1wOiBEYXRlKSA9PiB7XG4gICAgcmV0dXJuIHRpbWVzdGFtcC50b0xvY2FsZVRpbWVTdHJpbmcoW10sIHsgaG91cjogJzItZGlnaXQnLCBtaW51dGU6ICcyLWRpZ2l0JyB9KVxuICB9XG5cbiAgY29uc3QgZ2V0TWVzc2FnZVN0eWxlcyA9ICh0eXBlOiBzdHJpbmcpID0+IHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ3VzZXInOlxuICAgICAgICByZXR1cm4gJ2JnLWJsdWUtNTAwIHRleHQtd2hpdGUgbWwtYXV0bydcbiAgICAgIGNhc2UgJ2Fzc2lzdGFudCc6XG4gICAgICAgIHJldHVybiAnYmctZ3JlZW4tMTAwIHRleHQtZ3JlZW4tODAwIG1yLWF1dG8nXG4gICAgICBjYXNlICdzeXN0ZW0nOlxuICAgICAgICByZXR1cm4gJ2JnLWdyYXktMTAwIHRleHQtZ3JheS02MDAgbXgtYXV0byB0ZXh0LWNlbnRlciB0ZXh0LXNtJ1xuICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICByZXR1cm4gJ2JnLXJlZC0xMDAgdGV4dC1yZWQtODAwIG14LWF1dG8gdGV4dC1jZW50ZXInXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJ2JnLWdyYXktMTAwIHRleHQtZ3JheS04MDAnXG4gICAgfVxuICB9XG5cbiAgY29uc3QgZ2V0TWVzc2FnZUljb24gPSAodHlwZTogc3RyaW5nLCBpc0F1ZGlvPzogYm9vbGVhbikgPT4ge1xuICAgIGlmIChpc0F1ZGlvICYmIHR5cGUgPT09ICd1c2VyJykge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTQgaC00IG1yLTJcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNMTIgMkMxMy4xIDIgMTQgMi45IDE0IDRWMTJDMTQgMTMuMSAxMy4xIDE0IDEyIDE0QzEwLjkgMTQgMTAgMTMuMSAxMCAxMlY0QzEwIDIuOSAxMC45IDIgMTIgMk0xOSAxMlYxNEMxOSAxNy4zIDE2LjMgMjAgMTMgMjBWMjJIMTFWMjBDNy43IDIwIDUgMTcuMyA1IDE0VjEySDdWMTRDNyAxNi4yIDguOCAxOCAxMSAxOEgxM0MxNS4yIDE4IDE3IDE2LjIgMTcgMTRWMTJIMTlaXCIgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICApXG4gICAgfVxuICAgIFxuICAgIGlmICh0eXBlID09PSAnYXNzaXN0YW50Jykge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTQgaC00IG1yLTJcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNMTIsMkEyLDIgMCAwLDEgMTQsNEMxNCw0Ljc0IDEzLjYsNS4zOSAxMyw1LjczVjdBNyw3IDAgMCwxIDIwLDE0SDIyQTEsMSAwIDAsMSAyMywxNVYxOEExLDEgMCAwLDEgMjIsMTlIMjFWMjBBMiwyIDAgMCwxIDE5LDIySDVBMiwyIDAgMCwxIDMsMjBWMTlIMkExLDEgMCAwLDEgMSwxOFYxNUExLDEgMCAwLDEgMiwxNEg0QTcsNyAwIDAsMSAxMSw3VjUuNzNDMTAuNCw1LjM5IDEwLDQuNzQgMTAsNEEyLDIgMCAwLDEgMTIsMk03LjUsMTNBMC41LDAuNSAwIDAsMCA3LDEzLjVBMC41LDAuNSAwIDAsMCA3LjUsMTRBMC41LDAuNSAwIDAsMCA4LDEzLjVBMC41LDAuNSAwIDAsMCA3LjUsMTNNMTYuNSwxM0EwLjUsMC41IDAgMCwwIDE2LDEzLjVBMC41LDAuNSAwIDAsMCAxNi41LDE0QTAuNSwwLjUgMCAwLDAgMTcsMTMuNUEwLjUsMC41IDAgMCwwIDE2LjUsMTNaXCIgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICApXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBpZiAobWVzc2FnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaC05NiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LWdyYXktNTAwIGJnLWdyYXktNTAgcm91bmRlZC1sZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTEyIGgtMTIgbXgtYXV0byBtYi00IG9wYWNpdHktNTBcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgPHBhdGggZD1cIk0xMiwyQzYuNDgsMiAyLDYuNDggMiwxMkMyLDE3LjUyIDYuNDgsMjIgMTIsMjJDMTcuNTIsMjIgMjIsMTcuNTIgMjIsMTJDMjIsNi40OCAxNy41MiwyIDEyLDJNMTIsNEMxNi40MSw0IDIwLDcuNTkgMjAsMTJDMjAsMTYuNDEgMTYuNDEsMjAgMTIsMjBDNy41OSwyMCA0LDE2LjQxIDQsMTJDNCw3LjU5IDcuNTksNCAxMiw0TTExLDdWMTNIMTNWN0gxMU0xMSwxNVYxN0gxM1YxNUgxMVpcIiAvPlxuICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDxwPk5vIG1lc3NhZ2VzIHlldDwvcD5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIG10LTFcIj5TdGFydCBhIGNvbnZlcnNhdGlvbiBieSByZWNvcmRpbmcgb3IgdHlwaW5nIGEgbWVzc2FnZTwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaC05NiBvdmVyZmxvdy15LWF1dG8gYm9yZGVyIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLWxnIHAtNCBzcGFjZS15LTNcIj5cbiAgICAgIHttZXNzYWdlcy5tYXAoKG1lc3NhZ2UpID0+IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGtleT17bWVzc2FnZS5pZH1cbiAgICAgICAgICBjbGFzc05hbWU9e2BtYXgtdy14cyBwLTMgcm91bmRlZC1sZyAke2dldE1lc3NhZ2VTdHlsZXMobWVzc2FnZS50eXBlKX1gfVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLXN0YXJ0XCI+XG4gICAgICAgICAgICB7Z2V0TWVzc2FnZUljb24obWVzc2FnZS50eXBlLCBtZXNzYWdlLmlzQXVkaW8pfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB3aGl0ZXNwYWNlLXByZS13cmFwIGJyZWFrLXdvcmRzXCI+XG4gICAgICAgICAgICAgICAge21lc3NhZ2UuY29udGVudH1cbiAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXhzIG9wYWNpdHktNzAgbXQtMVwiPlxuICAgICAgICAgICAgICAgIHtmb3JtYXRUaW1lKG1lc3NhZ2UudGltZXN0YW1wKX1cbiAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSl9XG4gICAgICA8ZGl2IHJlZj17bWVzc2FnZXNFbmRSZWZ9IC8+XG4gICAgPC9kaXY+XG4gIClcbn0iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUmVmIiwiQ2hhdERpc3BsYXkiLCJtZXNzYWdlcyIsIm1lc3NhZ2VzRW5kUmVmIiwic2Nyb2xsVG9Cb3R0b20iLCJjdXJyZW50Iiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImZvcm1hdFRpbWUiLCJ0aW1lc3RhbXAiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJob3VyIiwibWludXRlIiwiZ2V0TWVzc2FnZVN0eWxlcyIsInR5cGUiLCJnZXRNZXNzYWdlSWNvbiIsImlzQXVkaW8iLCJzdmciLCJjbGFzc05hbWUiLCJmaWxsIiwidmlld0JveCIsInBhdGgiLCJkIiwibGVuZ3RoIiwiZGl2IiwicCIsIm1hcCIsIm1lc3NhZ2UiLCJjb250ZW50IiwiaWQiLCJyZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ChatDisplay.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ConversationInterface.tsx":
/*!**********************************************!*\
  !*** ./components/ConversationInterface.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ConversationInterface; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction ConversationInterface(param) {\n    let { isConnected, isInConversation, onStartConversation, onStopConversation } = param;\n    _s();\n    const [audioLevel, setAudioLevel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isPermissionGranted, setIsPermissionGranted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [permissionError, setPermissionError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Check microphone permission on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkMicrophonePermission();\n    }, []);\n    const checkMicrophonePermission = async ()=>{\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            setIsPermissionGranted(true);\n            setPermissionError(\"\");\n            // Stop the stream immediately since we only wanted to check permission\n            stream.getTracks().forEach((track)=>track.stop());\n        } catch (error) {\n            setIsPermissionGranted(false);\n            setPermissionError(\"Microphone access denied. Please enable microphone permissions.\");\n            console.error(\"Microphone permission error:\", error);\n        }\n    };\n    const handleClick = ()=>{\n        console.log(\"Button clicked, isConnected:\", isConnected, \"isInConversation:\", isInConversation, \"isPermissionGranted:\", isPermissionGranted);\n        if (!isPermissionGranted) {\n            console.log(\"No permission, checking microphone...\");\n            checkMicrophonePermission();\n            return;\n        }\n        if (!isConnected) {\n            console.log(\"Not connected\");\n            return;\n        }\n        if (isInConversation) {\n            console.log(\"Stopping conversation...\");\n            onStopConversation();\n        } else {\n            console.log(\"Starting conversation...\");\n            onStartConversation();\n        }\n    };\n    const getButtonText = ()=>{\n        if (!isPermissionGranted) {\n            return \"Enable Microphone\";\n        }\n        if (!isConnected) {\n            return \"Not Connected\";\n        }\n        if (isInConversation) {\n            return \"End Conversation\";\n        }\n        return \"Start Conversation\";\n    };\n    const getButtonDescription = ()=>{\n        if (!isPermissionGranted) {\n            return \"Click to enable microphone access\";\n        }\n        if (!isConnected) {\n            return \"Please connect to the server first\";\n        }\n        if (isInConversation) {\n            return \"Click to end the live conversation\";\n        }\n        return \"Click to start a live conversation with AI\";\n    };\n    const getButtonColor = ()=>{\n        if (!isPermissionGranted) {\n            return \"bg-gray-400 border-gray-300 cursor-not-allowed\";\n        }\n        if (!isConnected) {\n            return \"bg-gray-400 border-gray-300 cursor-not-allowed\";\n        }\n        if (isInConversation) {\n            return \"bg-red-500 border-red-400 hover:bg-red-600 cursor-pointer animate-pulse\";\n        }\n        return \"bg-green-500 border-green-400 hover:bg-green-600 hover:scale-105 cursor-pointer\";\n    };\n    const getShadowColor = ()=>{\n        if (isInConversation) {\n            return \"shadow-lg shadow-red-200\";\n        }\n        return \"shadow-lg shadow-green-200\";\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col items-center space-y-4\",\n        children: [\n            permissionError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full p-3 bg-red-100 border border-red-400 text-red-700 rounded-lg text-sm\",\n                children: permissionError\n            }, void 0, false, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                lineNumber: 114,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleClick,\n                        disabled: !isPermissionGranted || !isConnected,\n                        className: \"\\n            relative z-10 w-32 h-32 rounded-full border-4 transition-all duration-200 \\n            flex items-center justify-center text-white font-bold text-lg\\n            \".concat(getButtonColor(), \"\\n            \").concat(getShadowColor(), \"\\n          \"),\n                        style: {\n                            userSelect: \"none\",\n                            WebkitUserSelect: \"none\",\n                            MozUserSelect: \"none\",\n                            msUserSelect: \"none\",\n                            pointerEvents: \"auto\",\n                            zIndex: 10\n                        },\n                        children: isInConversation ? // Stop icon\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-12 h-12\",\n                            fill: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                x: \"6\",\n                                y: \"6\",\n                                width: \"12\",\n                                height: \"12\",\n                                rx: \"2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                                lineNumber: 142,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                            lineNumber: 141,\n                            columnNumber: 13\n                        }, this) : // Microphone icon\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-12 h-12\",\n                            fill: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M12 2C13.1 2 14 2.9 14 4V12C14 13.1 13.1 14 12 14C10.9 14 10 13.1 10 12V4C10 2.9 10.9 2 12 2M19 12V14C19 17.3 16.3 20 13 20V22H11V20C7.7 20 5 17.3 5 14V12H7V14C7 16.2 8.8 18 11 18H13C15.2 18 17 16.2 17 14V12H19Z\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                                lineNumber: 147,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 121,\n                        columnNumber: 9\n                    }, this),\n                    isInConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 rounded-full border-2 border-red-300 animate-ping pointer-events-none z-0\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                                lineNumber: 155,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 rounded-full border border-red-200 animate-pulse pointer-events-none z-0\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                                lineNumber: 156,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                lineNumber: 120,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-700 font-medium\",\n                        children: getButtonText()\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 163,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xs text-gray-500 mt-1\",\n                        children: getButtonDescription()\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 166,\n                        columnNumber: 9\n                    }, this),\n                    isInConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xs text-green-600 mt-2 font-medium\",\n                        children: \"\\uD83C\\uDF99️ Live conversation active - speak naturally!\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 170,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                lineNumber: 162,\n                columnNumber: 7\n            }, this),\n            isInConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full max-w-xs\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-1 justify-center\",\n                        children: [\n                            ...Array(10)\n                        ].map((_, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"\\n                  w-1 h-6 bg-gradient-to-t from-green-400 to-green-600 rounded-full transition-all duration-100\\n                  \".concat(audioLevel > i * 10 ? \"opacity-100\" : \"opacity-30\", \"\\n                \"),\n                                style: {\n                                    height: \"\".concat(Math.max(8, audioLevel > i * 10 ? 20 + (audioLevel - i * 10) / 2 : 8), \"px\")\n                                }\n                            }, i, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                                lineNumber: 181,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 179,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xs text-center text-gray-500 mt-2\",\n                        children: \"Audio level visualization\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                        lineNumber: 193,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n                lineNumber: 178,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ConversationInterface.tsx\",\n        lineNumber: 111,\n        columnNumber: 5\n    }, this);\n}\n_s(ConversationInterface, \"SjwpXqZ7yYaitzRlkSRJ5keEYsc=\");\n_c = ConversationInterface;\nvar _c;\n$RefreshReg$(_c, \"ConversationInterface\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ConversationInterface.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ProductInfoMonitor.tsx":
/*!*******************************************!*\
  !*** ./components/ProductInfoMonitor.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/websocketConfig */ \"(app-pages-browser)/./lib/websocketConfig.ts\");\n\nvar _s = $RefreshSig$();\n\n\nconst ProductInfoMonitor = (param)=>{\n    let { userId } = param;\n    _s();\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [endpoint, setEndpoint] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [streamingStatus, setStreamingStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const reconnectTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isConnectingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const connectWebSocket = ()=>{\n        var _wsRef_current;\n        // Prevent multiple simultaneous connection attempts\n        if (isConnectingRef.current || ((_wsRef_current = wsRef.current) === null || _wsRef_current === void 0 ? void 0 : _wsRef_current.readyState) === WebSocket.OPEN) {\n            console.log(\"\\uD83D\\uDD12 Connection already in progress or established\");\n            return;\n        }\n        if (!userId) {\n            console.error(\"❌ Cannot connect: User ID is required\");\n            setError(\"User ID is required for connection\");\n            return;\n        }\n        try {\n            const wsUrl = (0,_lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__.getWebSocketUrl)(\"/ws/product_info\", userId);\n            console.log(\"\\uD83D\\uDD17 Attempting to connect to:\", wsUrl);\n            setIsConnecting(true);\n            isConnectingRef.current = true;\n            setError(null);\n            const ws = new WebSocket(wsUrl);\n            wsRef.current = ws;\n            ws.onopen = ()=>{\n                console.log(\"✅ ProductInfo WebSocket connected\");\n                setIsConnected(true);\n                setIsConnecting(false);\n                isConnectingRef.current = false;\n                setError(null);\n            };\n            ws.onmessage = (event)=>{\n                const timestamp = new Date().toLocaleTimeString();\n                let parsedData;\n                try {\n                    parsedData = JSON.parse(event.data);\n                } catch (e) {\n                    parsedData = {\n                        raw: event.data\n                    };\n                }\n                const message = {\n                    timestamp,\n                    data: parsedData,\n                    raw: event.data\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        message\n                    ]);\n                console.log(\"\\uD83D\\uDCE8 Received message:\", message);\n            };\n            ws.onclose = (event)=>{\n                console.log(\"\\uD83D\\uDC4B ProductInfo WebSocket disconnected:\", event.code, event.reason);\n                setIsConnected(false);\n                setIsConnecting(false);\n                isConnectingRef.current = false;\n                // Clear the websocket reference\n                wsRef.current = null;\n                // Auto-reconnect only if not a normal closure and not manually disconnected\n                if (event.code !== 1000 && event.code !== 4000) {\n                    setError(\"Connection closed: \".concat(event.reason || \"Unknown reason\", \" (Code: \").concat(event.code, \")\"));\n                    console.log(\"\\uD83D\\uDD04 Scheduling auto-reconnect in 3 seconds...\");\n                    reconnectTimeoutRef.current = setTimeout(()=>{\n                        if (!isConnectingRef.current) {\n                            connectWebSocket();\n                        }\n                    }, 3000);\n                } else if (event.code === 4000) {\n                    setError(\"Another client is already connected to this endpoint\");\n                }\n            };\n            ws.onerror = (error)=>{\n                console.error(\"❌ ProductInfo WebSocket error:\", error);\n                setError(\"WebSocket connection error\");\n                setIsConnecting(false);\n                isConnectingRef.current = false;\n            };\n        } catch (err) {\n            console.error(\"❌ Failed to create ProductInfo WebSocket:\", err);\n            setError(\"Failed to create WebSocket connection\");\n            setIsConnecting(false);\n            isConnectingRef.current = false;\n        }\n    };\n    const disconnectWebSocket = ()=>{\n        console.log(\"\\uD83D\\uDED1 Manually disconnecting WebSocket\");\n        // Clear any pending reconnect\n        if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n            reconnectTimeoutRef.current = null;\n        }\n        // Close the websocket if it exists\n        if (wsRef.current) {\n            wsRef.current.close(1000, \"Manual disconnect\");\n            wsRef.current = null;\n        }\n        setIsConnected(false);\n        setIsConnecting(false);\n        isConnectingRef.current = false;\n        setError(null);\n    };\n    const resetConnection = async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDD04 Resetting ProductInfo connection...\");\n            const backendUrl = (0,_lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__.getHttpUrl)(\"/product-info-reset\");\n            const response = await fetch(backendUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.ok) {\n                console.log(\"✅ ProductInfo connection reset successfully\");\n                setError(null);\n                // Try to reconnect after a short delay\n                setTimeout(()=>{\n                    if (!isConnectingRef.current && !isConnected) {\n                        connectWebSocket();\n                    }\n                }, 1000);\n            } else {\n                console.error(\"❌ Failed to reset connection\");\n                setError(\"Failed to reset connection\");\n            }\n        } catch (err) {\n            console.error(\"❌ Error resetting connection:\", err);\n            setError(\"Error resetting connection\");\n        }\n    };\n    const clearMessages = ()=>{\n        setMessages([]);\n    };\n    const checkStreamingStatus = async ()=>{\n        try {\n            const backendUrl = (0,_lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__.getHttpUrl)(\"/product-info-status\");\n            const response = await fetch(backendUrl);\n            if (response.ok) {\n                const data = await response.json();\n                setStreamingStatus(data.data);\n                console.log(\"\\uD83D\\uDCCA Streaming status:\", data.data);\n            }\n        } catch (err) {\n            console.error(\"❌ Error checking streaming status:\", err);\n        }\n    };\n    // Set endpoint on client side only\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if ( true && userId) {\n            setEndpoint((0,_lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__.getWebSocketUrl)(\"/ws/product_info\", userId));\n        }\n    }, [\n        userId\n    ]);\n    // Connect on mount, disconnect on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (userId) {\n            console.log(\"\\uD83D\\uDE80 ProductInfoMonitor mounted, connecting...\");\n            connectWebSocket();\n            // Check streaming status periodically\n            const statusInterval = setInterval(checkStreamingStatus, 5000);\n            return ()=>{\n                console.log(\"\\uD83E\\uDDF9 ProductInfoMonitor unmounting, cleaning up...\");\n                disconnectWebSocket();\n                clearInterval(statusInterval);\n            };\n        }\n    }, [\n        userId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 max-w-4xl mx-auto\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-bold text-gray-800\",\n                        children: \"\\uD83D\\uDCCA Product Info Stream Monitor\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 211,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center space-x-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"w-3 h-3 rounded-full \".concat(isConnected ? \"bg-green-500\" : isConnecting ? \"bg-yellow-500\" : \"bg-red-500\")\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                        lineNumber: 216,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-sm font-medium\",\n                                        children: isConnected ? \"Connected\" : isConnecting ? \"Connecting...\" : \"Disconnected\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                        lineNumber: 220,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 215,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: isConnected ? disconnectWebSocket : connectWebSocket,\n                                disabled: isConnecting,\n                                className: \"px-4 py-2 rounded-md text-sm font-medium \".concat(isConnected ? \"bg-red-500 hover:bg-red-600 text-white\" : \"bg-green-500 hover:bg-green-600 text-white\", \" \").concat(isConnecting ? \"opacity-50 cursor-not-allowed\" : \"\"),\n                                children: isConnected ? \"Disconnect\" : isConnecting ? \"Connecting...\" : \"Connect\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 225,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: clearMessages,\n                                className: \"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-md text-sm font-medium\",\n                                children: \"Clear\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 237,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: resetConnection,\n                                className: \"px-4 py-2 bg-orange-500 hover:bg-orange-600 text-white rounded-md text-sm font-medium\",\n                                children: \"Reset\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 243,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 214,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                lineNumber: 210,\n                columnNumber: 7\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        children: \"Error:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 254,\n                        columnNumber: 11\n                    }, undefined),\n                    \" \",\n                    error\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                lineNumber: 253,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-4 h-96 overflow-y-auto\",\n                children: messages.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center text-gray-500 py-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-4xl mb-2\",\n                            children: \"\\uD83D\\uDCE1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                            lineNumber: 261,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: \"Waiting for product info stream...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                            lineNumber: 262,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm mt-2\",\n                            children: [\n                                \"Connect to \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                                    className: \"bg-gray-200 px-1 rounded\",\n                                    children: \"/ws/product_info\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                    lineNumber: 264,\n                                    columnNumber: 26\n                                }, undefined),\n                                \" to receive data\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                            lineNumber: 263,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                    lineNumber: 260,\n                    columnNumber: 11\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-3\",\n                    children: messages.map((message, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white rounded-lg p-3 border border-gray-200\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center justify-between mb-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-xs text-gray-500 font-mono\",\n                                            children: message.timestamp\n                                        }, void 0, false, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                            lineNumber: 272,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\",\n                                            children: [\n                                                \"Message #\",\n                                                index + 1\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                            lineNumber: 275,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                    lineNumber: 271,\n                                    columnNumber: 17\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2\",\n                                    children: message.data.raw ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-gray-600 mb-1\",\n                                                children: \"Raw Data:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                                lineNumber: 283,\n                                                columnNumber: 23\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                                className: \"text-xs bg-gray-100 p-2 rounded overflow-x-auto\",\n                                                children: message.data.raw\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                                lineNumber: 284,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                        lineNumber: 282,\n                                        columnNumber: 21\n                                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-gray-600 mb-1\",\n                                                children: \"Parsed Data:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                                lineNumber: 290,\n                                                columnNumber: 23\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                                className: \"text-xs bg-gray-100 p-2 rounded overflow-x-auto\",\n                                                children: JSON.stringify(message.data, null, 2)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                                lineNumber: 291,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                        lineNumber: 289,\n                                        columnNumber: 21\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                    lineNumber: 280,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, index, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                            lineNumber: 270,\n                            columnNumber: 15\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                    lineNumber: 268,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                lineNumber: 258,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 text-xs text-gray-500\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Status:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 304,\n                                columnNumber: 12\n                            }, undefined),\n                            \" \",\n                            isConnected ? \"Streaming active\" : isConnecting ? \"Connecting...\" : \"Waiting for connection\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 304,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Messages received:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 306,\n                                columnNumber: 12\n                            }, undefined),\n                            \" \",\n                            messages.length\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 306,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Endpoint:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 307,\n                                columnNumber: 12\n                            }, undefined),\n                            \" \",\n                            endpoint || \"Loading...\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 307,\n                        columnNumber: 9\n                    }, undefined),\n                    streamingStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-2 p-2 bg-blue-50 rounded border\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                    children: \"Backend Status:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                    lineNumber: 310,\n                                    columnNumber: 16\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 310,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"• Streaming: \",\n                                    streamingStatus.is_streaming ? \"✅ Active\" : \"❌ Inactive\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 311,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"• External WS: \",\n                                    streamingStatus.external_connected ? \"✅ Connected\" : \"❌ Disconnected\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 312,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"• Has Clients: \",\n                                    streamingStatus.has_clients ? \"✅ Yes\" : \"❌ No\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 313,\n                                columnNumber: 13\n                            }, undefined),\n                            streamingStatus.last_message && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"• Last Message: \",\n                                    streamingStatus.last_message\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                                lineNumber: 315,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                        lineNumber: 309,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n                lineNumber: 303,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ProductInfoMonitor.tsx\",\n        lineNumber: 209,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProductInfoMonitor, \"fB+n0idiYuyS2rI/HsKo5leNs0s=\");\n_c = ProductInfoMonitor;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductInfoMonitor);\nvar _c;\n$RefreshReg$(_c, \"ProductInfoMonitor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ProductInfoMonitor.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ToolMonitor.tsx":
/*!************************************!*\
  !*** ./components/ToolMonitor.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ToolMonitor; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/websocketConfig */ \"(app-pages-browser)/./lib/websocketConfig.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction ToolMonitor(param) {\n    let { userId } = param;\n    _s();\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isExpanded, setIsExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const scrollToBottom = ()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        scrollToBottom();\n    }, [\n        messages\n    ]);\n    const connectToToolsWebSocket = ()=>{\n        if (!userId) {\n            console.error(\"❌ Cannot connect: User ID is required\");\n            return;\n        }\n        try {\n            // Connect to the tools WebSocket endpoint with user_id\n            const wsUrl = (0,_lib_websocketConfig__WEBPACK_IMPORTED_MODULE_2__.getWebSocketUrl)(\"/ws/tools\", userId);\n            const ws = new WebSocket(wsUrl);\n            ws.onopen = ()=>{\n                console.log(\"✅ Connected to tools WebSocket\");\n                setIsConnected(true);\n                // Add connection message\n                const connectionMessage = {\n                    id: \"conn_\".concat(Date.now()),\n                    timestamp: new Date().toLocaleTimeString(),\n                    type: \"connection\",\n                    action: \"connected\",\n                    data: {\n                        status: \"Connected to /ws/tools\"\n                    }\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        connectionMessage\n                    ]);\n            };\n            ws.onmessage = (event)=>{\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"\\uD83D\\uDD27 Tool message received:\", data);\n                    // Create a new message entry\n                    const newMessage = {\n                        id: \"msg_\".concat(Date.now(), \"_\").concat(Math.random()),\n                        timestamp: new Date().toLocaleTimeString(),\n                        type: data.type || \"unknown\",\n                        action: data.action || \"unknown\",\n                        data: data\n                    };\n                    setMessages((prev)=>[\n                            ...prev,\n                            newMessage\n                        ]);\n                } catch (error) {\n                    console.error(\"Error parsing tool message:\", error);\n                    // Add error message\n                    const errorMessage = {\n                        id: \"err_\".concat(Date.now()),\n                        timestamp: new Date().toLocaleTimeString(),\n                        type: \"error\",\n                        action: \"parse_error\",\n                        data: {\n                            error: \"Failed to parse message\",\n                            raw: event.data\n                        }\n                    };\n                    setMessages((prev)=>[\n                            ...prev,\n                            errorMessage\n                        ]);\n                }\n            };\n            ws.onerror = (error)=>{\n                console.error(\"❌ Tools WebSocket error:\", error);\n                const errorMessage = {\n                    id: \"err_\".concat(Date.now()),\n                    timestamp: new Date().toLocaleTimeString(),\n                    type: \"error\",\n                    action: \"websocket_error\",\n                    data: {\n                        error: \"WebSocket connection error\"\n                    }\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        errorMessage\n                    ]);\n            };\n            ws.onclose = ()=>{\n                console.log(\"\\uD83D\\uDC4B Tools WebSocket disconnected\");\n                setIsConnected(false);\n                const disconnectionMessage = {\n                    id: \"disc_\".concat(Date.now()),\n                    timestamp: new Date().toLocaleTimeString(),\n                    type: \"connection\",\n                    action: \"disconnected\",\n                    data: {\n                        status: \"Disconnected from /ws/tools\"\n                    }\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        disconnectionMessage\n                    ]);\n            };\n            wsRef.current = ws;\n        } catch (error) {\n            console.error(\"Failed to connect to tools WebSocket:\", error);\n        }\n    };\n    const disconnectFromToolsWebSocket = ()=>{\n        if (wsRef.current) {\n            wsRef.current.close();\n            wsRef.current = null;\n        }\n    };\n    const clearMessages = ()=>{\n        setMessages([]);\n    };\n    const getMessageIcon = (type)=>{\n        switch(type){\n            case \"invoice_command\":\n                return \"\\uD83D\\uDCCB\";\n            case \"request_money_command\":\n                return \"\\uD83D\\uDCB0\";\n            case \"quotation_command\":\n                return \"\\uD83D\\uDCC4\";\n            case \"connection\":\n                return \"\\uD83D\\uDD17\";\n            case \"error\":\n                return \"❌\";\n            default:\n                return \"\\uD83D\\uDD27\";\n        }\n    };\n    const getMessageColor = (type)=>{\n        switch(type){\n            case \"invoice_command\":\n                return \"border-l-blue-500 bg-blue-50\";\n            case \"request_money_command\":\n                return \"border-l-green-500 bg-green-50\";\n            case \"quotation_command\":\n                return \"border-l-purple-500 bg-purple-50\";\n            case \"connection\":\n                return \"border-l-gray-500 bg-gray-50\";\n            case \"error\":\n                return \"border-l-red-500 bg-red-50\";\n            default:\n                return \"border-l-yellow-500 bg-yellow-50\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-4 border-b border-gray-200\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-between\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center space-x-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-lg font-semibold text-gray-800\",\n                                        children: \"\\uD83D\\uDD27 Tool Monitor\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 161,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"px-2 py-1 rounded-full text-xs font-medium \".concat(isConnected ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"),\n                                        children: isConnected ? \"Connected\" : \"Disconnected\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 164,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 160,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center space-x-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setIsExpanded(!isExpanded),\n                                    className: \"text-gray-500 hover:text-gray-700 transition-colors\",\n                                    children: isExpanded ? \"\\uD83D\\uDD3C\" : \"\\uD83D\\uDD3D\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 174,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 173,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                        lineNumber: 159,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2 mt-3\",\n                        children: [\n                            !isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: connectToToolsWebSocket,\n                                disabled: !userId,\n                                className: \"px-3 py-1 text-sm rounded-lg transition-colors \".concat(userId ? \"bg-blue-600 hover:bg-blue-700 text-white\" : \"bg-gray-400 text-gray-200 cursor-not-allowed\"),\n                                children: userId ? \"Connect to /ws/tools\" : \"Set User ID First\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 186,\n                                columnNumber: 13\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: disconnectFromToolsWebSocket,\n                                className: \"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-sm rounded-lg transition-colors\",\n                                children: \"Disconnect\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 198,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: clearMessages,\n                                className: \"px-3 py-1 bg-gray-600 hover:bg-gray-700 text-white text-sm rounded-lg transition-colors\",\n                                children: \"Clear Log\"\n                            }, void 0, false, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 206,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-sm text-gray-500\",\n                                children: [\n                                    messages.length,\n                                    \" messages\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 213,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                        lineNumber: 184,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                lineNumber: 158,\n                columnNumber: 7\n            }, this),\n            isExpanded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-64 overflow-y-auto border border-gray-200 rounded-lg bg-gray-50\",\n                        children: messages.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center h-full text-gray-500\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-2xl mb-2\",\n                                        children: \"\\uD83D\\uDD27\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 226,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: \"No tool messages yet\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 227,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-sm mt-1\",\n                                        children: isConnected ? \"Waiting for tool calls...\" : \"Connect to start monitoring\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 228,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                lineNumber: 225,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                            lineNumber: 224,\n                            columnNumber: 15\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-3 space-y-2\",\n                            children: [\n                                messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"p-3 border-l-4 rounded-r-lg \".concat(getMessageColor(message.type)),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-start justify-between mb-2\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"flex items-center space-x-2\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-lg\",\n                                                                children: getMessageIcon(message.type)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                                lineNumber: 242,\n                                                                columnNumber: 25\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"font-medium text-sm\",\n                                                                children: message.type\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                                lineNumber: 243,\n                                                                columnNumber: 25\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-xs text-gray-500\",\n                                                                children: message.action\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                                lineNumber: 246,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                        lineNumber: 241,\n                                                        columnNumber: 23\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-xs text-gray-400\",\n                                                        children: message.timestamp\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                        lineNumber: 250,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                lineNumber: 240,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"bg-white p-2 rounded border text-xs\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                                    className: \"whitespace-pre-wrap text-gray-700 max-h-20 overflow-y-auto\",\n                                                    children: JSON.stringify(message.data, null, 2)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                    lineNumber: 256,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                                lineNumber: 255,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, message.id, true, {\n                                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                        lineNumber: 236,\n                                        columnNumber: 19\n                                    }, this)),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    ref: messagesEndRef\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 262,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                            lineNumber: 234,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                        lineNumber: 222,\n                        columnNumber: 11\n                    }, this),\n                    isConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-3 text-xs text-gray-500\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"\\uD83D\\uDCCB Invoice commands\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 270,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"\\uD83D\\uDCB0 Payment requests\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 271,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"\\uD83D\\uDCC4 Quotation commands\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 272,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"\\uD83D\\uDD17 Connection events\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                                    lineNumber: 273,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                            lineNumber: 269,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                        lineNumber: 268,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n                lineNumber: 221,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/nilab/Desktop/projects/gti/fubnvoicechat-frontend/components/ToolMonitor.tsx\",\n        lineNumber: 156,\n        columnNumber: 5\n    }, this);\n}\n_s(ToolMonitor, \"Y9gebsUakItDk0MckwfuZw9/A1A=\");\n_c = ToolMonitor;\nvar _c;\n$RefreshReg$(_c, \"ToolMonitor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ToolMonitor.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/pipecatRTVI.ts":
/*!****************************!*\
  !*** ./lib/pipecatRTVI.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePipecatClient: function() { return /* binding */ usePipecatClient; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pipecat-ai/client-js */ \"(app-pages-browser)/./node_modules/@pipecat-ai/client-js/dist/index.module.js\");\n/* harmony import */ var _pipecat_ai_websocket_transport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pipecat-ai/websocket-transport */ \"(app-pages-browser)/./node_modules/@pipecat-ai/websocket-transport/dist/index.module.js\");\n/* harmony import */ var _websocketConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./websocketConfig */ \"(app-pages-browser)/./lib/websocketConfig.ts\");\n/* __next_internal_client_entry_do_not_use__ usePipecatClient auto */ \n\n\n\nfunction usePipecatClient() {\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isInConversation, setIsInConversation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [connectionStatus, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"Disconnected\");\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const rtviClientRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const toolWebSocketRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const addMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((message)=>{\n        const newMessage = {\n            ...message,\n            id: Date.now().toString(),\n            timestamp: new Date()\n        };\n        setMessages((prev)=>[\n                ...prev,\n                newMessage\n            ]);\n    }, []);\n    const connectToolWebSocket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (toolWebSocketRef.current) {\n            return;\n        }\n        if (!userId) {\n            console.error(\"❌ Cannot connect to tool WebSocket: User ID is required\");\n            return;\n        }\n        try {\n            console.log(\"\\uD83D\\uDD27 Connecting to tool WebSocket...\");\n            const toolWsUrl = (0,_websocketConfig__WEBPACK_IMPORTED_MODULE_3__.getWebSocketUrl)(\"/ws/tools\", userId);\n            toolWebSocketRef.current = new WebSocket(toolWsUrl);\n            toolWebSocketRef.current.onopen = ()=>{\n                console.log(\"\\uD83D\\uDD27 Tool WebSocket connected\");\n                addMessage({\n                    type: \"system\",\n                    content: \"\\uD83D\\uDD27 Tool connection established\"\n                });\n            };\n            toolWebSocketRef.current.onmessage = (event)=>{\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"\\uD83D\\uDD27 Received tool message:\", data);\n                    if (data.type === \"navigation_command\") {\n                        console.log(\"\\uD83D\\uDD27 Processing navigation command from tool WebSocket:\", data);\n                        addMessage({\n                            type: \"system\",\n                            content: \"\\uD83E\\uDDED Navigation: \".concat(data.action, \" - \").concat(JSON.stringify(data.data))\n                        });\n                    } else if (data.type === \"quotation_management_command\") {\n                        console.log(\"\\uD83D\\uDD27 Processing quotation management command from tool WebSocket:\", data);\n                        addMessage({\n                            type: \"system\",\n                            content: \"\\uD83D\\uDD27 Quotation: \".concat(data.action, \" - \").concat(JSON.stringify(data.data))\n                        });\n                    }\n                } catch (error) {\n                    console.error(\"\\uD83D\\uDD27 Error parsing tool message:\", error);\n                }\n            };\n            toolWebSocketRef.current.onclose = ()=>{\n                console.log(\"\\uD83D\\uDD27 Tool WebSocket disconnected\");\n                toolWebSocketRef.current = null;\n            };\n            toolWebSocketRef.current.onerror = (error)=>{\n                console.error(\"\\uD83D\\uDD27 Tool WebSocket error:\", error);\n                toolWebSocketRef.current = null;\n            };\n        } catch (error) {\n            console.error(\"\\uD83D\\uDD27 Error connecting to tool WebSocket:\", error);\n        }\n    }, [\n        addMessage,\n        userId\n    ]);\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (rtviClientRef.current) {\n            return;\n        }\n        if (!userId) {\n            setConnectionStatus(\"User ID Required\");\n            addMessage({\n                type: \"error\",\n                content: \"Please set a User ID before connecting\"\n            });\n            return;\n        }\n        try {\n            setConnectionStatus(\"Connecting...\");\n            addMessage({\n                type: \"system\",\n                content: \"Connecting to FunVoice AI assistant as user: \".concat(userId, \"...\")\n            });\n            // Connect to tool WebSocket first\n            connectToolWebSocket();\n            // Create transport\n            const transport = new _pipecat_ai_websocket_transport__WEBPACK_IMPORTED_MODULE_2__.WebSocketTransport();\n            const rtviConfig = {\n                transport,\n                params: {\n                    baseUrl: (0,_websocketConfig__WEBPACK_IMPORTED_MODULE_3__.getHttpUrl)(\"\"),\n                    endpoints: {\n                        connect: \"/connect\"\n                    }\n                },\n                enableMic: true,\n                enableCam: false,\n                callbacks: {\n                    onConnected: ()=>{\n                        setIsConnected(true);\n                        setConnectionStatus(\"Connected\");\n                        addMessage({\n                            type: \"system\",\n                            content: \"✅ Connected to FunVoice AI assistant\"\n                        });\n                    },\n                    onDisconnected: ()=>{\n                        setIsConnected(false);\n                        setIsInConversation(false);\n                        setConnectionStatus(\"Disconnected\");\n                        addMessage({\n                            type: \"system\",\n                            content: \"\\uD83D\\uDC4B Disconnected from AI assistant\"\n                        });\n                    },\n                    onBotReady: (data)=>{\n                        console.log(\"Bot ready:\", data);\n                        addMessage({\n                            type: \"system\",\n                            content: \"\\uD83E\\uDD16 AI is ready to chat!\"\n                        });\n                    },\n                    onUserTranscript: (data)=>{\n                        if (data.final) {\n                            addMessage({\n                                type: \"user\",\n                                content: data.text,\n                                isAudio: true\n                            });\n                        }\n                    },\n                    onBotTranscript: (data)=>{\n                        addMessage({\n                            type: \"assistant\",\n                            content: data.text\n                        });\n                    },\n                    onMessageError: (error)=>{\n                        console.error(\"Message error:\", error);\n                        addMessage({\n                            type: \"error\",\n                            content: \"Message error: \".concat(error.message || \"Unknown error\")\n                        });\n                    },\n                    onError: (error)=>{\n                        console.error(\"RTVI Error:\", error);\n                        addMessage({\n                            type: \"error\",\n                            content: \"Connection error: \".concat(error.message || \"Unknown error\")\n                        });\n                    }\n                }\n            };\n            rtviClientRef.current = new _pipecat_ai_client_js__WEBPACK_IMPORTED_MODULE_1__.RTVIClient(rtviConfig);\n            console.log(\"Initializing devices...\");\n            await rtviClientRef.current.initDevices();\n            console.log(\"Connecting to bot with user_id:\", userId);\n            await rtviClientRef.current.connect();\n            addMessage({\n                type: \"system\",\n                content: \"\\uD83C\\uDFA4 Connection complete! Ready for conversation.\"\n            });\n        } catch (error) {\n            console.error(\"Error connecting:\", error);\n            setConnectionStatus(\"Connection Error\");\n            addMessage({\n                type: \"error\",\n                content: \"Failed to connect: \".concat(error.message)\n            });\n            // Clean up on error\n            if (rtviClientRef.current) {\n                try {\n                    await rtviClientRef.current.disconnect();\n                } catch (disconnectError) {\n                    console.error(\"Error during cleanup disconnect:\", disconnectError);\n                }\n                rtviClientRef.current = null;\n            }\n        }\n    }, [\n        addMessage,\n        userId,\n        connectToolWebSocket\n    ]);\n    const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (rtviClientRef.current) {\n            try {\n                await rtviClientRef.current.disconnect();\n                rtviClientRef.current = null;\n                setIsConnected(false);\n                setIsInConversation(false);\n                setConnectionStatus(\"Disconnected\");\n            } catch (error) {\n                console.error(\"Error disconnecting:\", error);\n                addMessage({\n                    type: \"error\",\n                    content: \"Error disconnecting: \".concat(error.message)\n                });\n            }\n        }\n        // Also close tool WebSocket\n        if (toolWebSocketRef.current) {\n            try {\n                toolWebSocketRef.current.close();\n                toolWebSocketRef.current = null;\n                console.log(\"\\uD83D\\uDD27 Tool WebSocket closed\");\n            } catch (error) {\n                console.error(\"\\uD83D\\uDD27 Error closing tool WebSocket:\", error);\n            }\n        }\n    }, [\n        addMessage\n    ]);\n    const startConversation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!isConnected || isInConversation) {\n            console.log(\"Cannot start conversation: not connected or already in conversation\");\n            return;\n        }\n        try {\n            setIsInConversation(true);\n            addMessage({\n                type: \"system\",\n                content: \"\\uD83C\\uDF99️ Live conversation started! Speak naturally with the AI.\"\n            });\n        // The RTVI client automatically handles microphone streaming once connected\n        } catch (error) {\n            console.error(\"Error starting conversation:\", error);\n            addMessage({\n                type: \"error\",\n                content: \"Failed to start conversation. Please check microphone permissions.\"\n            });\n            setIsInConversation(false);\n        }\n    }, [\n        isConnected,\n        isInConversation,\n        addMessage\n    ]);\n    const stopConversation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setIsInConversation(false);\n        addMessage({\n            type: \"system\",\n            content: \"⏹️ Conversation paused. Click Start Conversation to resume.\"\n        });\n    }, [\n        addMessage\n    ]);\n    return {\n        isConnected,\n        isInConversation,\n        messages,\n        connectionStatus,\n        userId,\n        setUserId,\n        startConversation,\n        stopConversation,\n        connect,\n        disconnect\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/pipecatRTVI.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/websocketConfig.ts":
/*!********************************!*\
  !*** ./lib/websocketConfig.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWebSocket: function() { return /* binding */ createWebSocket; },\n/* harmony export */   getCurrentConfig: function() { return /* binding */ getCurrentConfig; },\n/* harmony export */   getHttpUrl: function() { return /* binding */ getHttpUrl; },\n/* harmony export */   getWebSocketConfig: function() { return /* binding */ getWebSocketConfig; },\n/* harmony export */   getWebSocketUrl: function() { return /* binding */ getWebSocketUrl; },\n/* harmony export */   validateWebSocketConfig: function() { return /* binding */ validateWebSocketConfig; }\n/* harmony export */ });\n/**\n * Simplified WebSocket Configuration Utility\n * Uses only NEXT_PUBLIC_BACKEND_URL and NEXT_PUBLIC_USE_HTTPS\n */ /**\n * Get WebSocket configuration from environment variables\n * Simplified version using only URL and protocol choice\n */ function getWebSocketConfig() {\n    // Get backend URL from environment (default to localhost:1294)\n    const backendUrl = \"176.9.16.194:1294\" || 0;\n    // Get protocol choice: 0 = HTTP/WS, 1 = HTTPS/WSS\n    const useHttps = \"1\" === \"1\";\n    const httpProtocol = useHttps ? \"https:\" : \"http:\";\n    const wsProtocol = useHttps ? \"wss:\" : \"ws:\";\n    const httpUrl = \"\".concat(httpProtocol, \"//\").concat(backendUrl);\n    const wsUrl = \"\".concat(wsProtocol, \"//\").concat(backendUrl);\n    return {\n        baseUrl: backendUrl,\n        wsUrl,\n        httpUrl,\n        isSecure: useHttps\n    };\n}\n/**\n * Generate WebSocket URL for a specific endpoint\n */ function getWebSocketUrl(endpoint, userId) {\n    const config = getWebSocketConfig();\n    const baseWsUrl = config.wsUrl;\n    // Add user_id parameter if provided\n    const userParam = userId ? \"?user_id=\".concat(encodeURIComponent(userId)) : \"\";\n    return \"\".concat(baseWsUrl).concat(endpoint).concat(userParam);\n}\n/**\n * Generate HTTP URL for a specific endpoint\n */ function getHttpUrl(endpoint) {\n    const config = getWebSocketConfig();\n    return \"\".concat(config.httpUrl).concat(endpoint);\n}\n/**\n * Get the current configuration for debugging\n */ function getCurrentConfig() {\n    return getWebSocketConfig();\n}\n/**\n * Create WebSocket with proper configuration\n */ function createWebSocket(url, options) {\n    try {\n        const ws = new WebSocket(url, options === null || options === void 0 ? void 0 : options.protocols);\n        return ws;\n    } catch (error) {\n        console.error(\"Failed to create WebSocket:\", error);\n        throw error;\n    }\n}\n/**\n * Validate WebSocket configuration\n */ function validateWebSocketConfig() {\n    const errors = [];\n    // Check if backend URL is configured\n    const backendUrl = \"176.9.16.194:1294\";\n    if (!backendUrl) {\n        errors.push(\"NEXT_PUBLIC_BACKEND_URL is not set. Using default: localhost:1294\");\n    }\n    // Validate protocol choice\n    const useHttps = \"1\";\n    if (useHttps && useHttps !== \"0\" && useHttps !== \"1\") {\n        errors.push('NEXT_PUBLIC_USE_HTTPS must be either \"0\" (HTTP/WS) or \"1\" (HTTPS/WSS)');\n    }\n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi93ZWJzb2NrZXRDb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7OztDQUdDLEdBU0Q7OztDQUdDLEdBQ00sU0FBU0E7SUFDZCwrREFBK0Q7SUFDL0QsTUFBTUMsYUFBYUMsbUJBQW1DLElBQUk7SUFFMUQsa0RBQWtEO0lBQ2xELE1BQU1HLFdBQVdILEdBQWlDLEtBQUs7SUFFdkQsTUFBTUssZUFBZUYsV0FBVyxXQUFXO0lBQzNDLE1BQU1HLGFBQWFILFdBQVcsU0FBUztJQUV2QyxNQUFNSSxVQUFVLEdBQW9CUixPQUFqQk0sY0FBYSxNQUFlLE9BQVhOO0lBQ3BDLE1BQU1TLFFBQVEsR0FBa0JULE9BQWZPLFlBQVcsTUFBZSxPQUFYUDtJQUVoQyxPQUFPO1FBQ0xVLFNBQVNWO1FBQ1RTO1FBQ0FEO1FBQ0FHLFVBQVVQO0lBQ1o7QUFDRjtBQUVBOztDQUVDLEdBQ00sU0FBU1EsZ0JBQWdCQyxRQUFnQixFQUFFQyxNQUFlO0lBQy9ELE1BQU1DLFNBQVNoQjtJQUNmLE1BQU1pQixZQUFZRCxPQUFPTixLQUFLO0lBRTlCLG9DQUFvQztJQUNwQyxNQUFNUSxZQUFZSCxTQUFTLFlBQXVDLE9BQTNCSSxtQkFBbUJKLFdBQVk7SUFFdEUsT0FBTyxHQUFlRCxPQUFaRyxXQUF1QkMsT0FBWEosVUFBcUIsT0FBVkk7QUFDbkM7QUFFQTs7Q0FFQyxHQUNNLFNBQVNFLFdBQVdOLFFBQWdCO0lBQ3pDLE1BQU1FLFNBQVNoQjtJQUNmLE9BQU8sR0FBb0JjLE9BQWpCRSxPQUFPUCxPQUFPLEVBQVksT0FBVEs7QUFDN0I7QUFFQTs7Q0FFQyxHQUNNLFNBQVNPO0lBQ2QsT0FBT3JCO0FBQ1Q7QUFFQTs7Q0FFQyxHQUNNLFNBQVNzQixnQkFBZ0JDLEdBQVcsRUFBRUMsT0FFNUM7SUFDQyxJQUFJO1FBQ0YsTUFBTUMsS0FBSyxJQUFJQyxVQUFVSCxLQUFLQyxvQkFBQUEsOEJBQUFBLFFBQVNHLFNBQVM7UUFDaEQsT0FBT0Y7SUFDVCxFQUFFLE9BQU9HLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsTUFBTUE7SUFDUjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTRTtJQUNkLE1BQU1DLFNBQW1CLEVBQUU7SUFFM0IscUNBQXFDO0lBQ3JDLE1BQU05QixhQUFhQyxtQkFBbUM7SUFDdEQsSUFBSSxDQUFDRCxZQUFZO1FBQ2Y4QixPQUFPQyxJQUFJLENBQUM7SUFDZDtJQUVBLDJCQUEyQjtJQUMzQixNQUFNM0IsV0FBV0gsR0FBaUM7SUFDbEQsSUFBSUcsWUFBWUEsYUFBYSxPQUFPQSxhQUFhLEtBQUs7UUFDcEQwQixPQUFPQyxJQUFJLENBQUM7SUFDZDtJQUVBLE9BQU87UUFDTEMsU0FBU0YsT0FBT0csTUFBTSxLQUFLO1FBQzNCSDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3dlYnNvY2tldENvbmZpZy50cz9iYmQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2ltcGxpZmllZCBXZWJTb2NrZXQgQ29uZmlndXJhdGlvbiBVdGlsaXR5XG4gKiBVc2VzIG9ubHkgTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwgYW5kIE5FWFRfUFVCTElDX1VTRV9IVFRQU1xuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgV2ViU29ja2V0Q29uZmlnIHtcbiAgYmFzZVVybDogc3RyaW5nO1xuICB3c1VybDogc3RyaW5nO1xuICBodHRwVXJsOiBzdHJpbmc7XG4gIGlzU2VjdXJlOiBib29sZWFuO1xufVxuXG4vKipcbiAqIEdldCBXZWJTb2NrZXQgY29uZmlndXJhdGlvbiBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlc1xuICogU2ltcGxpZmllZCB2ZXJzaW9uIHVzaW5nIG9ubHkgVVJMIGFuZCBwcm90b2NvbCBjaG9pY2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYlNvY2tldENvbmZpZygpOiBXZWJTb2NrZXRDb25maWcge1xuICAvLyBHZXQgYmFja2VuZCBVUkwgZnJvbSBlbnZpcm9ubWVudCAoZGVmYXVsdCB0byBsb2NhbGhvc3Q6MTI5NClcbiAgY29uc3QgYmFja2VuZFVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JBQ0tFTkRfVVJMIHx8ICdsb2NhbGhvc3Q6MTI5NCc7XG4gIFxuICAvLyBHZXQgcHJvdG9jb2wgY2hvaWNlOiAwID0gSFRUUC9XUywgMSA9IEhUVFBTL1dTU1xuICBjb25zdCB1c2VIdHRwcyA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1VTRV9IVFRQUyA9PT0gJzEnO1xuICBcbiAgY29uc3QgaHR0cFByb3RvY29sID0gdXNlSHR0cHMgPyAnaHR0cHM6JyA6ICdodHRwOic7XG4gIGNvbnN0IHdzUHJvdG9jb2wgPSB1c2VIdHRwcyA/ICd3c3M6JyA6ICd3czonO1xuICBcbiAgY29uc3QgaHR0cFVybCA9IGAke2h0dHBQcm90b2NvbH0vLyR7YmFja2VuZFVybH1gO1xuICBjb25zdCB3c1VybCA9IGAke3dzUHJvdG9jb2x9Ly8ke2JhY2tlbmRVcmx9YDtcbiAgXG4gIHJldHVybiB7XG4gICAgYmFzZVVybDogYmFja2VuZFVybCxcbiAgICB3c1VybCxcbiAgICBodHRwVXJsLFxuICAgIGlzU2VjdXJlOiB1c2VIdHRwc1xuICB9O1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIFdlYlNvY2tldCBVUkwgZm9yIGEgc3BlY2lmaWMgZW5kcG9pbnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYlNvY2tldFVybChlbmRwb2ludDogc3RyaW5nLCB1c2VySWQ/OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBjb25maWcgPSBnZXRXZWJTb2NrZXRDb25maWcoKTtcbiAgY29uc3QgYmFzZVdzVXJsID0gY29uZmlnLndzVXJsO1xuICBcbiAgLy8gQWRkIHVzZXJfaWQgcGFyYW1ldGVyIGlmIHByb3ZpZGVkXG4gIGNvbnN0IHVzZXJQYXJhbSA9IHVzZXJJZCA/IGA/dXNlcl9pZD0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VySWQpfWAgOiAnJztcbiAgXG4gIHJldHVybiBgJHtiYXNlV3NVcmx9JHtlbmRwb2ludH0ke3VzZXJQYXJhbX1gO1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIEhUVFAgVVJMIGZvciBhIHNwZWNpZmljIGVuZHBvaW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRIdHRwVXJsKGVuZHBvaW50OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBjb25maWcgPSBnZXRXZWJTb2NrZXRDb25maWcoKTtcbiAgcmV0dXJuIGAke2NvbmZpZy5odHRwVXJsfSR7ZW5kcG9pbnR9YDtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgY29uZmlndXJhdGlvbiBmb3IgZGVidWdnaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJyZW50Q29uZmlnKCk6IFdlYlNvY2tldENvbmZpZyB7XG4gIHJldHVybiBnZXRXZWJTb2NrZXRDb25maWcoKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgV2ViU29ja2V0IHdpdGggcHJvcGVyIGNvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdlYlNvY2tldCh1cmw6IHN0cmluZywgb3B0aW9ucz86IHtcbiAgcHJvdG9jb2xzPzogc3RyaW5nIHwgc3RyaW5nW107XG59KTogV2ViU29ja2V0IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3cyA9IG5ldyBXZWJTb2NrZXQodXJsLCBvcHRpb25zPy5wcm90b2NvbHMpO1xuICAgIHJldHVybiB3cztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIFdlYlNvY2tldDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBXZWJTb2NrZXQgY29uZmlndXJhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVXZWJTb2NrZXRDb25maWcoKTogeyBpc1ZhbGlkOiBib29sZWFuOyBlcnJvcnM6IHN0cmluZ1tdIH0ge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIFxuICAvLyBDaGVjayBpZiBiYWNrZW5kIFVSTCBpcyBjb25maWd1cmVkXG4gIGNvbnN0IGJhY2tlbmRVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTDtcbiAgaWYgKCFiYWNrZW5kVXJsKSB7XG4gICAgZXJyb3JzLnB1c2goJ05FWFRfUFVCTElDX0JBQ0tFTkRfVVJMIGlzIG5vdCBzZXQuIFVzaW5nIGRlZmF1bHQ6IGxvY2FsaG9zdDoxMjk0Jyk7XG4gIH1cbiAgXG4gIC8vIFZhbGlkYXRlIHByb3RvY29sIGNob2ljZVxuICBjb25zdCB1c2VIdHRwcyA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1VTRV9IVFRQUztcbiAgaWYgKHVzZUh0dHBzICYmIHVzZUh0dHBzICE9PSAnMCcgJiYgdXNlSHR0cHMgIT09ICcxJykge1xuICAgIGVycm9ycy5wdXNoKCdORVhUX1BVQkxJQ19VU0VfSFRUUFMgbXVzdCBiZSBlaXRoZXIgXCIwXCIgKEhUVFAvV1MpIG9yIFwiMVwiIChIVFRQUy9XU1MpJyk7XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn0gIl0sIm5hbWVzIjpbImdldFdlYlNvY2tldENvbmZpZyIsImJhY2tlbmRVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwiLCJ1c2VIdHRwcyIsIk5FWFRfUFVCTElDX1VTRV9IVFRQUyIsImh0dHBQcm90b2NvbCIsIndzUHJvdG9jb2wiLCJodHRwVXJsIiwid3NVcmwiLCJiYXNlVXJsIiwiaXNTZWN1cmUiLCJnZXRXZWJTb2NrZXRVcmwiLCJlbmRwb2ludCIsInVzZXJJZCIsImNvbmZpZyIsImJhc2VXc1VybCIsInVzZXJQYXJhbSIsImVuY29kZVVSSUNvbXBvbmVudCIsImdldEh0dHBVcmwiLCJnZXRDdXJyZW50Q29uZmlnIiwiY3JlYXRlV2ViU29ja2V0IiwidXJsIiwib3B0aW9ucyIsIndzIiwiV2ViU29ja2V0IiwicHJvdG9jb2xzIiwiZXJyb3IiLCJjb25zb2xlIiwidmFsaWRhdGVXZWJTb2NrZXRDb25maWciLCJlcnJvcnMiLCJwdXNoIiwiaXNWYWxpZCIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/websocketConfig.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YjZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/x-law/dist/index.js":
/*!******************************************!*\
  !*** ./node_modules/x-law/dist/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alaw: function() { return /* binding */ alaw_exports; },\n/* harmony export */   mulaw: function() { return /* binding */ mulaw_exports; },\n/* harmony export */   utils: function() { return /* binding */ utils_exports; }\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/lib/alaw.ts\nvar alaw_exports = {};\n__export(alaw_exports, {\n  decode: () => decode,\n  decodeBuffer: () => decodeBuffer,\n  decodeSample: () => decodeSample,\n  encode: () => encode,\n  encodeBuffer: () => encodeBuffer,\n  encodeSample: () => encodeSample\n});\nvar LOG_TABLE = [\n  1,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7\n];\nfunction encodeSample(sample) {\n  let compandedValue;\n  sample = sample == -32768 ? -32767 : sample;\n  let sign = ~sample >> 8 & 128;\n  if (!sign) {\n    sample = sample * -1;\n  }\n  if (sample > 32635) {\n    sample = 32635;\n  }\n  if (sample >= 256) {\n    let exponent = LOG_TABLE[sample >> 8 & 127];\n    let mantissa = sample >> exponent + 3 & 15;\n    compandedValue = exponent << 4 | mantissa;\n  } else {\n    compandedValue = sample >> 4;\n  }\n  return compandedValue ^ (sign ^ 85);\n}\n__name(encodeSample, \"encodeSample\");\nfunction decodeSample(sample) {\n  let sign = 0;\n  sample ^= 85;\n  if (sample & 128) {\n    sample &= -129;\n    sign = -1;\n  }\n  let position = ((sample & 240) >> 4) + 4;\n  let decoded = 0;\n  if (position != 4) {\n    decoded = 1 << position | (sample & 15) << position - 4 | 1 << position - 5;\n  } else {\n    decoded = sample << 1 | 1;\n  }\n  decoded = sign === 0 ? decoded : -decoded;\n  return decoded * 8 * -1;\n}\n__name(decodeSample, \"decodeSample\");\nfunction encode(samples) {\n  let aLawSamples = new Uint8Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    aLawSamples[i] = encodeSample(samples[i]);\n  }\n  return aLawSamples;\n}\n__name(encode, \"encode\");\nfunction decode(samples) {\n  let pcmSamples = new Int16Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    pcmSamples[i] = decodeSample(samples[i]);\n  }\n  return pcmSamples;\n}\n__name(decode, \"decode\");\nfunction encodeBuffer(buffer) {\n  const numSamples = Math.floor(buffer.length / 2);\n  const samples = new Int16Array(numSamples);\n  for (let i = 0; i < numSamples; i++) {\n    samples[i] = buffer.readInt16LE(i * 2);\n  }\n  return Buffer.from(encode(samples).buffer);\n}\n__name(encodeBuffer, \"encodeBuffer\");\nfunction decodeBuffer(buffer) {\n  const samples = decode(new Uint8Array(buffer));\n  return Buffer.from(samples.buffer);\n}\n__name(decodeBuffer, \"decodeBuffer\");\n\n// src/lib/mulaw.ts\nvar mulaw_exports = {};\n__export(mulaw_exports, {\n  decode: () => decode2,\n  decodeBuffer: () => decodeBuffer2,\n  decodeSample: () => decodeSample2,\n  encode: () => encode2,\n  encodeBuffer: () => encodeBuffer2,\n  encodeSample: () => encodeSample2\n});\nvar BIAS = 132;\nvar CLIP = 32635;\nvar encodeTable = [\n  0,\n  0,\n  1,\n  1,\n  2,\n  2,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7\n];\nvar decodeTable = [0, 132, 396, 924, 1980, 4092, 8316, 16764];\nfunction encodeSample2(sample) {\n  const sign = sample < 0 ? 128 : 0;\n  sample = Math.abs(sample);\n  sample += BIAS;\n  if (sample > CLIP) sample = CLIP;\n  const exponent = encodeTable[sample >> 7 & 255];\n  const mantissa = sample >> exponent + 3 & 15;\n  return ~(sign | exponent << 4 | mantissa) & 255;\n}\n__name(encodeSample2, \"encodeSample\");\nfunction decodeSample2(sample) {\n  sample = ~sample & 255;\n  const sign = sample & 128 ? -1 : 1;\n  const exponent = sample >> 4 & 7;\n  const mantissa = sample & 15;\n  const decodedSample = decodeTable[exponent] + (mantissa << exponent + 3);\n  return sign * decodedSample;\n}\n__name(decodeSample2, \"decodeSample\");\nfunction encode2(samples) {\n  const muLawSamples = new Uint8Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    muLawSamples[i] = encodeSample2(samples[i]);\n  }\n  return muLawSamples;\n}\n__name(encode2, \"encode\");\nfunction decode2(samples) {\n  const pcmSamples = new Int16Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    pcmSamples[i] = decodeSample2(samples[i]);\n  }\n  return pcmSamples;\n}\n__name(decode2, \"decode\");\nfunction encodeBuffer2(buffer) {\n  const numSamples = Math.floor(buffer.length / 2);\n  const samples = new Int16Array(numSamples);\n  for (let i = 0; i < numSamples; i++) {\n    samples[i] = buffer.readInt16LE(i * 2);\n  }\n  return Buffer.from(encode2(samples).buffer);\n}\n__name(encodeBuffer2, \"encodeBuffer\");\nfunction decodeBuffer2(buffer) {\n  const samples = decode2(new Uint8Array(buffer));\n  return Buffer.from(samples.buffer);\n}\n__name(decodeBuffer2, \"decodeBuffer\");\n\n// src/lib/utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  calculateLoudness: () => calculateLoudness,\n  createWavHeader: () => createWavHeader,\n  resample: () => resample\n});\nvar BIT_DEPTHS = [8, 16, 24, 32, 48];\nfunction calculateLoudness(buffer, bitDepth) {\n  if (!(buffer instanceof Buffer) || buffer.length === 0) {\n    throw new Error(\"Invalid buffer, must be a non-empty Buffer.\");\n  }\n  if (!BIT_DEPTHS.includes(bitDepth)) {\n    throw new Error(\"Invalid bit depth, supported values are 8, 16, 24, 32, and 48.\");\n  }\n  if (bitDepth === 48) {\n    throw new Error(\"48-bit audio is not yet implemented.\");\n  }\n  const bytesPerSample = Math.ceil(bitDepth / 8);\n  if (buffer.length % bytesPerSample !== 0) {\n    throw new Error(\n      `Invalid buffer length ${buffer.length}. Must be a multiple of ${bytesPerSample} bytes for ${bitDepth}-bit audio.`\n    );\n  }\n  const maxValue = Math.pow(2, bitDepth - 1) - 1;\n  const numSamples = buffer.length / bytesPerSample;\n  let sumOfSquares = 0;\n  for (let i = 0; i < numSamples; i++) {\n    const offset = i * bytesPerSample;\n    let sample;\n    switch (bitDepth) {\n      case 8:\n        sample = buffer[offset];\n        if (sample & 128) sample = sample - 256;\n        break;\n      case 16:\n        sample = buffer[offset] | buffer[offset + 1] << 8;\n        if (sample & 32768) sample = sample - 65536;\n        break;\n      case 24:\n        sample = buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16;\n        if (sample & 8388608) sample = sample | -16777216;\n        break;\n      case 32:\n        sample = buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24;\n        break;\n      default:\n        throw new Error(`Unsupported bit depth: ${bitDepth}`);\n    }\n    const normalized = sample / maxValue;\n    sumOfSquares += normalized * normalized;\n  }\n  const rms = Math.sqrt(sumOfSquares / numSamples);\n  return rms <= 1e-10 ? -100 : 20 * Math.log10(rms);\n}\n__name(calculateLoudness, \"calculateLoudness\");\nfunction createWavHeader(dataSize, sampleRate, channels, bitDepth) {\n  const headerData = [\n    { value: \"RIFF\", type: \"string\" },\n    { value: 36 + dataSize, type: \"uint32\" },\n    { value: \"WAVE\", type: \"string\" },\n    { value: \"fmt \", type: \"string\" },\n    { value: 16, type: \"uint32\" },\n    { value: 1, type: \"uint16\" },\n    { value: channels, type: \"uint16\" },\n    { value: sampleRate, type: \"uint32\" },\n    { value: sampleRate * channels * bitDepth / 8, type: \"uint32\" },\n    { value: channels * bitDepth / 8, type: \"uint16\" },\n    { value: bitDepth, type: \"uint16\" },\n    { value: \"data\", type: \"string\" },\n    { value: dataSize, type: \"uint32\" }\n  ];\n  const header = Buffer.alloc(44);\n  let offset = 0;\n  headerData.forEach(({ value, type }) => {\n    if (type === \"string\") {\n      header.write(value, offset);\n      offset += 4;\n    } else if (type === \"uint32\") {\n      header.writeUInt32LE(value, offset);\n      offset += 4;\n    } else if (type === \"uint16\") {\n      header.writeUInt16LE(value, offset);\n      offset += 2;\n    }\n  });\n  return header;\n}\n__name(createWavHeader, \"createWavHeader\");\nvar resample = /* @__PURE__ */ __name((samples, inputSampleRate, targetSampleRate, bitDepth) => {\n  if (inputSampleRate <= 0 || targetSampleRate <= 0) {\n    throw new Error(\"Sample rates must be positive.\");\n  }\n  if (!BIT_DEPTHS.includes(bitDepth)) {\n    throw new Error(`Invalid bit depth. Allowed values are: ${BIT_DEPTHS.join(\", \")}`);\n  }\n  const ratio = targetSampleRate / inputSampleRate;\n  const outLength = Math.round(samples.length * ratio);\n  const resampled = new Array(outLength);\n  const maxSample = (1 << bitDepth - 1) - 1;\n  const minSample = -1 << bitDepth - 1;\n  for (let i = 0; i < outLength; i++) {\n    const sourcePos = i / ratio;\n    const index1 = Math.floor(sourcePos);\n    const index2 = Math.min(index1 + 1, samples.length - 1);\n    const alpha = sourcePos - index1;\n    const interpolated = samples[index1] * (1 - alpha) + samples[index2] * alpha;\n    const intSample = Math.round(interpolated);\n    resampled[i] = Math.max(minSample, Math.min(maxSample, intSample));\n  }\n  return resampled;\n}, \"resample\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/x-law/dist/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fnilab%2FDesktop%2Fprojects%2Fgti%2Ffubnvoicechat-frontend%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);