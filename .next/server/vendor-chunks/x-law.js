"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/x-law";
exports.ids = ["vendor-chunks/x-law"];
exports.modules = {

/***/ "(ssr)/./node_modules/x-law/dist/index.js":
/*!******************************************!*\
  !*** ./node_modules/x-law/dist/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alaw: () => (/* binding */ alaw_exports),\n/* harmony export */   mulaw: () => (/* binding */ mulaw_exports),\n/* harmony export */   utils: () => (/* binding */ utils_exports)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/lib/alaw.ts\nvar alaw_exports = {};\n__export(alaw_exports, {\n  decode: () => decode,\n  decodeBuffer: () => decodeBuffer,\n  decodeSample: () => decodeSample,\n  encode: () => encode,\n  encodeBuffer: () => encodeBuffer,\n  encodeSample: () => encodeSample\n});\nvar LOG_TABLE = [\n  1,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7\n];\nfunction encodeSample(sample) {\n  let compandedValue;\n  sample = sample == -32768 ? -32767 : sample;\n  let sign = ~sample >> 8 & 128;\n  if (!sign) {\n    sample = sample * -1;\n  }\n  if (sample > 32635) {\n    sample = 32635;\n  }\n  if (sample >= 256) {\n    let exponent = LOG_TABLE[sample >> 8 & 127];\n    let mantissa = sample >> exponent + 3 & 15;\n    compandedValue = exponent << 4 | mantissa;\n  } else {\n    compandedValue = sample >> 4;\n  }\n  return compandedValue ^ (sign ^ 85);\n}\n__name(encodeSample, \"encodeSample\");\nfunction decodeSample(sample) {\n  let sign = 0;\n  sample ^= 85;\n  if (sample & 128) {\n    sample &= -129;\n    sign = -1;\n  }\n  let position = ((sample & 240) >> 4) + 4;\n  let decoded = 0;\n  if (position != 4) {\n    decoded = 1 << position | (sample & 15) << position - 4 | 1 << position - 5;\n  } else {\n    decoded = sample << 1 | 1;\n  }\n  decoded = sign === 0 ? decoded : -decoded;\n  return decoded * 8 * -1;\n}\n__name(decodeSample, \"decodeSample\");\nfunction encode(samples) {\n  let aLawSamples = new Uint8Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    aLawSamples[i] = encodeSample(samples[i]);\n  }\n  return aLawSamples;\n}\n__name(encode, \"encode\");\nfunction decode(samples) {\n  let pcmSamples = new Int16Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    pcmSamples[i] = decodeSample(samples[i]);\n  }\n  return pcmSamples;\n}\n__name(decode, \"decode\");\nfunction encodeBuffer(buffer) {\n  const numSamples = Math.floor(buffer.length / 2);\n  const samples = new Int16Array(numSamples);\n  for (let i = 0; i < numSamples; i++) {\n    samples[i] = buffer.readInt16LE(i * 2);\n  }\n  return Buffer.from(encode(samples).buffer);\n}\n__name(encodeBuffer, \"encodeBuffer\");\nfunction decodeBuffer(buffer) {\n  const samples = decode(new Uint8Array(buffer));\n  return Buffer.from(samples.buffer);\n}\n__name(decodeBuffer, \"decodeBuffer\");\n\n// src/lib/mulaw.ts\nvar mulaw_exports = {};\n__export(mulaw_exports, {\n  decode: () => decode2,\n  decodeBuffer: () => decodeBuffer2,\n  decodeSample: () => decodeSample2,\n  encode: () => encode2,\n  encodeBuffer: () => encodeBuffer2,\n  encodeSample: () => encodeSample2\n});\nvar BIAS = 132;\nvar CLIP = 32635;\nvar encodeTable = [\n  0,\n  0,\n  1,\n  1,\n  2,\n  2,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7\n];\nvar decodeTable = [0, 132, 396, 924, 1980, 4092, 8316, 16764];\nfunction encodeSample2(sample) {\n  const sign = sample < 0 ? 128 : 0;\n  sample = Math.abs(sample);\n  sample += BIAS;\n  if (sample > CLIP) sample = CLIP;\n  const exponent = encodeTable[sample >> 7 & 255];\n  const mantissa = sample >> exponent + 3 & 15;\n  return ~(sign | exponent << 4 | mantissa) & 255;\n}\n__name(encodeSample2, \"encodeSample\");\nfunction decodeSample2(sample) {\n  sample = ~sample & 255;\n  const sign = sample & 128 ? -1 : 1;\n  const exponent = sample >> 4 & 7;\n  const mantissa = sample & 15;\n  const decodedSample = decodeTable[exponent] + (mantissa << exponent + 3);\n  return sign * decodedSample;\n}\n__name(decodeSample2, \"decodeSample\");\nfunction encode2(samples) {\n  const muLawSamples = new Uint8Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    muLawSamples[i] = encodeSample2(samples[i]);\n  }\n  return muLawSamples;\n}\n__name(encode2, \"encode\");\nfunction decode2(samples) {\n  const pcmSamples = new Int16Array(samples.length);\n  for (let i = 0; i < samples.length; i++) {\n    pcmSamples[i] = decodeSample2(samples[i]);\n  }\n  return pcmSamples;\n}\n__name(decode2, \"decode\");\nfunction encodeBuffer2(buffer) {\n  const numSamples = Math.floor(buffer.length / 2);\n  const samples = new Int16Array(numSamples);\n  for (let i = 0; i < numSamples; i++) {\n    samples[i] = buffer.readInt16LE(i * 2);\n  }\n  return Buffer.from(encode2(samples).buffer);\n}\n__name(encodeBuffer2, \"encodeBuffer\");\nfunction decodeBuffer2(buffer) {\n  const samples = decode2(new Uint8Array(buffer));\n  return Buffer.from(samples.buffer);\n}\n__name(decodeBuffer2, \"decodeBuffer\");\n\n// src/lib/utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  calculateLoudness: () => calculateLoudness,\n  createWavHeader: () => createWavHeader,\n  resample: () => resample\n});\nvar BIT_DEPTHS = [8, 16, 24, 32, 48];\nfunction calculateLoudness(buffer, bitDepth) {\n  if (!(buffer instanceof Buffer) || buffer.length === 0) {\n    throw new Error(\"Invalid buffer, must be a non-empty Buffer.\");\n  }\n  if (!BIT_DEPTHS.includes(bitDepth)) {\n    throw new Error(\"Invalid bit depth, supported values are 8, 16, 24, 32, and 48.\");\n  }\n  if (bitDepth === 48) {\n    throw new Error(\"48-bit audio is not yet implemented.\");\n  }\n  const bytesPerSample = Math.ceil(bitDepth / 8);\n  if (buffer.length % bytesPerSample !== 0) {\n    throw new Error(\n      `Invalid buffer length ${buffer.length}. Must be a multiple of ${bytesPerSample} bytes for ${bitDepth}-bit audio.`\n    );\n  }\n  const maxValue = Math.pow(2, bitDepth - 1) - 1;\n  const numSamples = buffer.length / bytesPerSample;\n  let sumOfSquares = 0;\n  for (let i = 0; i < numSamples; i++) {\n    const offset = i * bytesPerSample;\n    let sample;\n    switch (bitDepth) {\n      case 8:\n        sample = buffer[offset];\n        if (sample & 128) sample = sample - 256;\n        break;\n      case 16:\n        sample = buffer[offset] | buffer[offset + 1] << 8;\n        if (sample & 32768) sample = sample - 65536;\n        break;\n      case 24:\n        sample = buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16;\n        if (sample & 8388608) sample = sample | -16777216;\n        break;\n      case 32:\n        sample = buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24;\n        break;\n      default:\n        throw new Error(`Unsupported bit depth: ${bitDepth}`);\n    }\n    const normalized = sample / maxValue;\n    sumOfSquares += normalized * normalized;\n  }\n  const rms = Math.sqrt(sumOfSquares / numSamples);\n  return rms <= 1e-10 ? -100 : 20 * Math.log10(rms);\n}\n__name(calculateLoudness, \"calculateLoudness\");\nfunction createWavHeader(dataSize, sampleRate, channels, bitDepth) {\n  const headerData = [\n    { value: \"RIFF\", type: \"string\" },\n    { value: 36 + dataSize, type: \"uint32\" },\n    { value: \"WAVE\", type: \"string\" },\n    { value: \"fmt \", type: \"string\" },\n    { value: 16, type: \"uint32\" },\n    { value: 1, type: \"uint16\" },\n    { value: channels, type: \"uint16\" },\n    { value: sampleRate, type: \"uint32\" },\n    { value: sampleRate * channels * bitDepth / 8, type: \"uint32\" },\n    { value: channels * bitDepth / 8, type: \"uint16\" },\n    { value: bitDepth, type: \"uint16\" },\n    { value: \"data\", type: \"string\" },\n    { value: dataSize, type: \"uint32\" }\n  ];\n  const header = Buffer.alloc(44);\n  let offset = 0;\n  headerData.forEach(({ value, type }) => {\n    if (type === \"string\") {\n      header.write(value, offset);\n      offset += 4;\n    } else if (type === \"uint32\") {\n      header.writeUInt32LE(value, offset);\n      offset += 4;\n    } else if (type === \"uint16\") {\n      header.writeUInt16LE(value, offset);\n      offset += 2;\n    }\n  });\n  return header;\n}\n__name(createWavHeader, \"createWavHeader\");\nvar resample = /* @__PURE__ */ __name((samples, inputSampleRate, targetSampleRate, bitDepth) => {\n  if (inputSampleRate <= 0 || targetSampleRate <= 0) {\n    throw new Error(\"Sample rates must be positive.\");\n  }\n  if (!BIT_DEPTHS.includes(bitDepth)) {\n    throw new Error(`Invalid bit depth. Allowed values are: ${BIT_DEPTHS.join(\", \")}`);\n  }\n  const ratio = targetSampleRate / inputSampleRate;\n  const outLength = Math.round(samples.length * ratio);\n  const resampled = new Array(outLength);\n  const maxSample = (1 << bitDepth - 1) - 1;\n  const minSample = -1 << bitDepth - 1;\n  for (let i = 0; i < outLength; i++) {\n    const sourcePos = i / ratio;\n    const index1 = Math.floor(sourcePos);\n    const index2 = Math.min(index1 + 1, samples.length - 1);\n    const alpha = sourcePos - index1;\n    const interpolated = samples[index1] * (1 - alpha) + samples[index2] * alpha;\n    const intSample = Math.round(interpolated);\n    resampled[i] = Math.max(minSample, Math.min(maxSample, intSample));\n  }\n  return resampled;\n}, \"resample\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/x-law/dist/index.js\n");

/***/ })

};
;